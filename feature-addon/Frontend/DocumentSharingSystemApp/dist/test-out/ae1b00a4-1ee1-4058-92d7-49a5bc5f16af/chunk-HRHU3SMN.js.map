{"version":3,"sources":["node_modules/@angular/material/fesm2022/progress-spinner.mjs","node_modules/@angular/cdk/fesm2022/accordion.mjs","node_modules/@angular/material/fesm2022/expansion.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, numberAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, ViewChild, NgModule } from '@angular/core';\nimport { NgTemplateOutlet } from '@angular/common';\nimport { _ as _animationsDisabled } from './animation-DfMFjxHu.mjs';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\nimport '@angular/cdk/layout';\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/bidi';\n\n/** Injection token to be used to override the default options for `mat-progress-spinner`. */\nconst MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = new InjectionToken('mat-progress-spinner-default-options', {\n    providedIn: 'root',\n    factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n    return { diameter: BASE_SIZE };\n}\n/**\n * Base reference size of the spinner.\n */\nconst BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n */\nconst BASE_STROKE_WIDTH = 10;\nclass MatProgressSpinner {\n    _elementRef = inject(ElementRef);\n    /** Whether the _mat-animation-noopable class should be applied, disabling animations.  */\n    _noopAnimations;\n    // TODO: should be typed as `ThemePalette` but internal apps pass in arbitrary strings.\n    /**\n     * Theme color of the progress spinner. This API is supported in M2 themes only, it\n     * has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/progress-spinner/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    get color() {\n        return this._color || this._defaultColor;\n    }\n    set color(value) {\n        this._color = value;\n    }\n    _color;\n    _defaultColor = 'primary';\n    /** The element of the determinate spinner. */\n    _determinateCircle;\n    constructor() {\n        const defaults = inject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS);\n        this._noopAnimations = _animationsDisabled() && !!defaults && !defaults._forceAnimations;\n        this.mode =\n            this._elementRef.nativeElement.nodeName.toLowerCase() === 'mat-spinner'\n                ? 'indeterminate'\n                : 'determinate';\n        if (defaults) {\n            if (defaults.color) {\n                this.color = this._defaultColor = defaults.color;\n            }\n            if (defaults.diameter) {\n                this.diameter = defaults.diameter;\n            }\n            if (defaults.strokeWidth) {\n                this.strokeWidth = defaults.strokeWidth;\n            }\n        }\n    }\n    /**\n     * Mode of the progress bar.\n     *\n     * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n     * 'determinate'.\n     * Mirrored to mode attribute.\n     */\n    mode;\n    /** Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow. */\n    get value() {\n        return this.mode === 'determinate' ? this._value : 0;\n    }\n    set value(v) {\n        this._value = Math.max(0, Math.min(100, v || 0));\n    }\n    _value = 0;\n    /** The diameter of the progress spinner (will set width and height of svg). */\n    get diameter() {\n        return this._diameter;\n    }\n    set diameter(size) {\n        this._diameter = size || 0;\n    }\n    _diameter = BASE_SIZE;\n    /** Stroke width of the progress spinner. */\n    get strokeWidth() {\n        return this._strokeWidth ?? this.diameter / 10;\n    }\n    set strokeWidth(value) {\n        this._strokeWidth = value || 0;\n    }\n    _strokeWidth;\n    /** The radius of the spinner, adjusted for stroke width. */\n    _circleRadius() {\n        return (this.diameter - BASE_STROKE_WIDTH) / 2;\n    }\n    /** The view box of the spinner's svg element. */\n    _viewBox() {\n        const viewBox = this._circleRadius() * 2 + this.strokeWidth;\n        return `0 0 ${viewBox} ${viewBox}`;\n    }\n    /** The stroke circumference of the svg circle. */\n    _strokeCircumference() {\n        return 2 * Math.PI * this._circleRadius();\n    }\n    /** The dash offset of the svg circle. */\n    _strokeDashOffset() {\n        if (this.mode === 'determinate') {\n            return (this._strokeCircumference() * (100 - this._value)) / 100;\n        }\n        return null;\n    }\n    /** Stroke width of the circle in percent. */\n    _circleStrokeWidth() {\n        return (this.strokeWidth / this.diameter) * 100;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatProgressSpinner, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"20.0.0\", type: MatProgressSpinner, isStandalone: true, selector: \"mat-progress-spinner, mat-spinner\", inputs: { color: \"color\", mode: \"mode\", value: [\"value\", \"value\", numberAttribute], diameter: [\"diameter\", \"diameter\", numberAttribute], strokeWidth: [\"strokeWidth\", \"strokeWidth\", numberAttribute] }, host: { attributes: { \"role\": \"progressbar\", \"tabindex\": \"-1\" }, properties: { \"class\": \"\\\"mat-\\\" + color\", \"class._mat-animation-noopable\": \"_noopAnimations\", \"class.mdc-circular-progress--indeterminate\": \"mode === \\\"indeterminate\\\"\", \"style.width.px\": \"diameter\", \"style.height.px\": \"diameter\", \"style.--mat-progress-spinner-size\": \"diameter + \\\"px\\\"\", \"style.--mat-progress-spinner-active-indicator-width\": \"diameter + \\\"px\\\"\", \"attr.aria-valuemin\": \"0\", \"attr.aria-valuemax\": \"100\", \"attr.aria-valuenow\": \"mode === \\\"determinate\\\" ? value : null\", \"attr.mode\": \"mode\" }, classAttribute: \"mat-mdc-progress-spinner mdc-circular-progress\" }, viewQueries: [{ propertyName: \"_determinateCircle\", first: true, predicate: [\"determinateSpinner\"], descendants: true }], exportAs: [\"matProgressSpinner\"], ngImport: i0, template: \"<ng-template #circle>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__indeterminate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeCircumference() / 2\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</ng-template>\\n\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<div class=\\\"mdc-circular-progress__determinate-container\\\" aria-hidden=\\\"true\\\" #determinateSpinner>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__determinate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeDashOffset()\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            class=\\\"mdc-circular-progress__determinate-circle\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</div>\\n<!--TODO: figure out why there are 3 separate svgs-->\\n<div class=\\\"mdc-circular-progress__indeterminate-container\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"mdc-circular-progress__spinner-layer\\\">\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-left\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__gap-patch\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-right\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-progress-spinner{display:block;overflow:hidden;line-height:0;position:relative;direction:ltr;transition:opacity 250ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-progress-spinner circle{stroke-width:var(--mat-progress-spinner-active-indicator-width, 4px)}.mat-mdc-progress-spinner._mat-animation-noopable,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__determinate-circle{transition:none !important}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__spinner-layer,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container{animation:none !important}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container circle{stroke-dasharray:0 !important}@media(forced-colors: active){.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle{stroke:currentColor;stroke:CanvasText}}.mdc-circular-progress__determinate-container,.mdc-circular-progress__indeterminate-circle-graphic,.mdc-circular-progress__indeterminate-container,.mdc-circular-progress__spinner-layer{position:absolute;width:100%;height:100%}.mdc-circular-progress__determinate-container{transform:rotate(-90deg)}.mdc-circular-progress--indeterminate .mdc-circular-progress__determinate-container{opacity:0}.mdc-circular-progress__indeterminate-container{font-size:0;letter-spacing:0;white-space:nowrap;opacity:0}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{opacity:1;animation:mdc-circular-progress-container-rotate 1568.2352941176ms linear infinite}.mdc-circular-progress__determinate-circle-graphic,.mdc-circular-progress__indeterminate-circle-graphic{fill:rgba(0,0,0,0)}.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:var(--mat-progress-spinner-active-indicator-color, var(--mat-sys-primary))}@media(forced-colors: active){.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mdc-circular-progress__determinate-circle{transition:stroke-dashoffset 500ms cubic-bezier(0, 0, 0.2, 1)}.mdc-circular-progress__gap-patch{position:absolute;top:0;left:47.5%;box-sizing:border-box;width:5%;height:100%;overflow:hidden}.mdc-circular-progress__gap-patch .mdc-circular-progress__indeterminate-circle-graphic{left:-900%;width:2000%;transform:rotate(180deg)}.mdc-circular-progress__circle-clipper .mdc-circular-progress__indeterminate-circle-graphic{width:200%}.mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{left:-100%}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-left .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-left-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-right-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress__circle-clipper{display:inline-flex;position:relative;width:50%;height:100%;overflow:hidden}.mdc-circular-progress--indeterminate .mdc-circular-progress__spinner-layer{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}@keyframes mdc-circular-progress-container-rotate{to{transform:rotate(360deg)}}@keyframes mdc-circular-progress-spinner-layer-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}}@keyframes mdc-circular-progress-left-spin{from{transform:rotate(265deg)}50%{transform:rotate(130deg)}to{transform:rotate(265deg)}}@keyframes mdc-circular-progress-right-spin{from{transform:rotate(-265deg)}50%{transform:rotate(-130deg)}to{transform:rotate(-265deg)}}\\n\"], dependencies: [{ kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatProgressSpinner, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-progress-spinner, mat-spinner', exportAs: 'matProgressSpinner', host: {\n                        'role': 'progressbar',\n                        'class': 'mat-mdc-progress-spinner mdc-circular-progress',\n                        // set tab index to -1 so screen readers will read the aria-label\n                        // Note: there is a known issue with JAWS that does not read progressbar aria labels on FireFox\n                        'tabindex': '-1',\n                        '[class]': '\"mat-\" + color',\n                        '[class._mat-animation-noopable]': `_noopAnimations`,\n                        '[class.mdc-circular-progress--indeterminate]': 'mode === \"indeterminate\"',\n                        '[style.width.px]': 'diameter',\n                        '[style.height.px]': 'diameter',\n                        '[style.--mat-progress-spinner-size]': 'diameter + \"px\"',\n                        '[style.--mat-progress-spinner-active-indicator-width]': 'diameter + \"px\"',\n                        '[attr.aria-valuemin]': '0',\n                        '[attr.aria-valuemax]': '100',\n                        '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n                        '[attr.mode]': 'mode',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, imports: [NgTemplateOutlet], template: \"<ng-template #circle>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__indeterminate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeCircumference() / 2\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</ng-template>\\n\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<div class=\\\"mdc-circular-progress__determinate-container\\\" aria-hidden=\\\"true\\\" #determinateSpinner>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__determinate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeDashOffset()\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            class=\\\"mdc-circular-progress__determinate-circle\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</div>\\n<!--TODO: figure out why there are 3 separate svgs-->\\n<div class=\\\"mdc-circular-progress__indeterminate-container\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"mdc-circular-progress__spinner-layer\\\">\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-left\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__gap-patch\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-right\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-progress-spinner{display:block;overflow:hidden;line-height:0;position:relative;direction:ltr;transition:opacity 250ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-progress-spinner circle{stroke-width:var(--mat-progress-spinner-active-indicator-width, 4px)}.mat-mdc-progress-spinner._mat-animation-noopable,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__determinate-circle{transition:none !important}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__spinner-layer,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container{animation:none !important}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container circle{stroke-dasharray:0 !important}@media(forced-colors: active){.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle{stroke:currentColor;stroke:CanvasText}}.mdc-circular-progress__determinate-container,.mdc-circular-progress__indeterminate-circle-graphic,.mdc-circular-progress__indeterminate-container,.mdc-circular-progress__spinner-layer{position:absolute;width:100%;height:100%}.mdc-circular-progress__determinate-container{transform:rotate(-90deg)}.mdc-circular-progress--indeterminate .mdc-circular-progress__determinate-container{opacity:0}.mdc-circular-progress__indeterminate-container{font-size:0;letter-spacing:0;white-space:nowrap;opacity:0}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{opacity:1;animation:mdc-circular-progress-container-rotate 1568.2352941176ms linear infinite}.mdc-circular-progress__determinate-circle-graphic,.mdc-circular-progress__indeterminate-circle-graphic{fill:rgba(0,0,0,0)}.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:var(--mat-progress-spinner-active-indicator-color, var(--mat-sys-primary))}@media(forced-colors: active){.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mdc-circular-progress__determinate-circle{transition:stroke-dashoffset 500ms cubic-bezier(0, 0, 0.2, 1)}.mdc-circular-progress__gap-patch{position:absolute;top:0;left:47.5%;box-sizing:border-box;width:5%;height:100%;overflow:hidden}.mdc-circular-progress__gap-patch .mdc-circular-progress__indeterminate-circle-graphic{left:-900%;width:2000%;transform:rotate(180deg)}.mdc-circular-progress__circle-clipper .mdc-circular-progress__indeterminate-circle-graphic{width:200%}.mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{left:-100%}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-left .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-left-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-right-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress__circle-clipper{display:inline-flex;position:relative;width:50%;height:100%;overflow:hidden}.mdc-circular-progress--indeterminate .mdc-circular-progress__spinner-layer{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}@keyframes mdc-circular-progress-container-rotate{to{transform:rotate(360deg)}}@keyframes mdc-circular-progress-spinner-layer-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}}@keyframes mdc-circular-progress-left-spin{from{transform:rotate(265deg)}50%{transform:rotate(130deg)}to{transform:rotate(265deg)}}@keyframes mdc-circular-progress-right-spin{from{transform:rotate(-265deg)}50%{transform:rotate(-130deg)}to{transform:rotate(-265deg)}}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { color: [{\n                type: Input\n            }], _determinateCircle: [{\n                type: ViewChild,\n                args: ['determinateSpinner']\n            }], mode: [{\n                type: Input\n            }], value: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], diameter: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], strokeWidth: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }] } });\n/**\n * @deprecated Import Progress Spinner instead. Note that the\n *    `mat-spinner` selector isn't deprecated.\n * @breaking-change 16.0.0\n */\n// tslint:disable-next-line:variable-name\nconst MatSpinner = MatProgressSpinner;\n\nclass MatProgressSpinnerModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatProgressSpinnerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatProgressSpinnerModule, imports: [MatProgressSpinner, MatSpinner], exports: [MatProgressSpinner, MatSpinner, MatCommonModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatProgressSpinnerModule, imports: [MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatProgressSpinnerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatProgressSpinner, MatSpinner],\n                    exports: [MatProgressSpinner, MatSpinner, MatCommonModule],\n                }]\n        }] });\n\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, booleanAttribute, Directive, Input, ChangeDetectorRef, EventEmitter, signal, Output, NgModule } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { _ as _IdGenerator } from './id-generator-LuoRZSid.mjs';\nimport { U as UniqueSelectionDispatcher } from './unique-selection-dispatcher-Cewa_Eg3.mjs';\n\n/**\n * Injection token that can be used to reference instances of `CdkAccordion`. It serves\n * as alternative token to the actual `CdkAccordion` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_ACCORDION = new InjectionToken('CdkAccordion');\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\nclass CdkAccordion {\n    /** Emits when the state of the accordion changes */\n    _stateChanges = new Subject();\n    /** Stream that emits true/false when openAll/closeAll is triggered. */\n    _openCloseAllActions = new Subject();\n    /** A readonly id value to use for unique selection coordination. */\n    id = inject(_IdGenerator).getId('cdk-accordion-');\n    /** Whether the accordion should allow multiple expanded accordion items simultaneously. */\n    multi = false;\n    /** Opens all enabled accordion items in an accordion where multi is enabled. */\n    openAll() {\n        if (this.multi) {\n            this._openCloseAllActions.next(true);\n        }\n    }\n    /** Closes all enabled accordion items. */\n    closeAll() {\n        this._openCloseAllActions.next(false);\n    }\n    ngOnChanges(changes) {\n        this._stateChanges.next(changes);\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n        this._openCloseAllActions.complete();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkAccordion, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"20.0.0\", type: CdkAccordion, isStandalone: true, selector: \"cdk-accordion, [cdkAccordion]\", inputs: { multi: [\"multi\", \"multi\", booleanAttribute] }, providers: [{ provide: CDK_ACCORDION, useExisting: CdkAccordion }], exportAs: [\"cdkAccordion\"], usesOnChanges: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkAccordion, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-accordion, [cdkAccordion]',\n                    exportAs: 'cdkAccordion',\n                    providers: [{ provide: CDK_ACCORDION, useExisting: CdkAccordion }],\n                }]\n        }], propDecorators: { multi: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n\n/**\n * A basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\nclass CdkAccordionItem {\n    accordion = inject(CDK_ACCORDION, { optional: true, skipSelf: true });\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _expansionDispatcher = inject(UniqueSelectionDispatcher);\n    /** Subscription to openAll/closeAll events. */\n    _openCloseAllSubscription = Subscription.EMPTY;\n    /** Event emitted every time the AccordionItem is closed. */\n    closed = new EventEmitter();\n    /** Event emitted every time the AccordionItem is opened. */\n    opened = new EventEmitter();\n    /** Event emitted when the AccordionItem is destroyed. */\n    destroyed = new EventEmitter();\n    /**\n     * Emits whenever the expanded state of the accordion changes.\n     * Primarily used to facilitate two-way binding.\n     * @docs-private\n     */\n    expandedChange = new EventEmitter();\n    /** The unique AccordionItem id. */\n    id = inject(_IdGenerator).getId('cdk-accordion-child-');\n    /** Whether the AccordionItem is expanded. */\n    get expanded() {\n        return this._expanded;\n    }\n    set expanded(expanded) {\n        // Only emit events and update the internal value if the value changes.\n        if (this._expanded !== expanded) {\n            this._expanded = expanded;\n            this.expandedChange.emit(expanded);\n            if (expanded) {\n                this.opened.emit();\n                /**\n                 * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n                 * the name value is the id of the accordion.\n                 */\n                const accordionId = this.accordion ? this.accordion.id : this.id;\n                this._expansionDispatcher.notify(this.id, accordionId);\n            }\n            else {\n                this.closed.emit();\n            }\n            // Ensures that the animation will run when the value is set outside of an `@Input`.\n            // This includes cases like the open, close and toggle methods.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    _expanded = false;\n    /** Whether the AccordionItem is disabled. */\n    get disabled() {\n        return this._disabled();\n    }\n    set disabled(value) {\n        this._disabled.set(value);\n    }\n    _disabled = signal(false);\n    /** Unregister function for _expansionDispatcher. */\n    _removeUniqueSelectionListener = () => { };\n    constructor() { }\n    ngOnInit() {\n        this._removeUniqueSelectionListener = this._expansionDispatcher.listen((id, accordionId) => {\n            if (this.accordion &&\n                !this.accordion.multi &&\n                this.accordion.id === accordionId &&\n                this.id !== id) {\n                this.expanded = false;\n            }\n        });\n        // When an accordion item is hosted in an accordion, subscribe to open/close events.\n        if (this.accordion) {\n            this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n        }\n    }\n    /** Emits an event for the accordion item being destroyed. */\n    ngOnDestroy() {\n        this.opened.complete();\n        this.closed.complete();\n        this.destroyed.emit();\n        this.destroyed.complete();\n        this._removeUniqueSelectionListener();\n        this._openCloseAllSubscription.unsubscribe();\n    }\n    /** Toggles the expanded state of the accordion item. */\n    toggle() {\n        if (!this.disabled) {\n            this.expanded = !this.expanded;\n        }\n    }\n    /** Sets the expanded state of the accordion item to false. */\n    close() {\n        if (!this.disabled) {\n            this.expanded = false;\n        }\n    }\n    /** Sets the expanded state of the accordion item to true. */\n    open() {\n        if (!this.disabled) {\n            this.expanded = true;\n        }\n    }\n    _subscribeToOpenCloseAllActions() {\n        return this.accordion._openCloseAllActions.subscribe(expanded => {\n            // Only change expanded state if item is enabled\n            if (!this.disabled) {\n                this.expanded = expanded;\n            }\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkAccordionItem, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"20.0.0\", type: CdkAccordionItem, isStandalone: true, selector: \"cdk-accordion-item, [cdkAccordionItem]\", inputs: { expanded: [\"expanded\", \"expanded\", booleanAttribute], disabled: [\"disabled\", \"disabled\", booleanAttribute] }, outputs: { closed: \"closed\", opened: \"opened\", destroyed: \"destroyed\", expandedChange: \"expandedChange\" }, providers: [\n            // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n            // registering to the same accordion.\n            { provide: CDK_ACCORDION, useValue: undefined },\n        ], exportAs: [\"cdkAccordionItem\"], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkAccordionItem, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-accordion-item, [cdkAccordionItem]',\n                    exportAs: 'cdkAccordionItem',\n                    providers: [\n                        // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n                        // registering to the same accordion.\n                        { provide: CDK_ACCORDION, useValue: undefined },\n                    ],\n                }]\n        }], ctorParameters: () => [], propDecorators: { closed: [{\n                type: Output\n            }], opened: [{\n                type: Output\n            }], destroyed: [{\n                type: Output\n            }], expandedChange: [{\n                type: Output\n            }], expanded: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n\nclass CdkAccordionModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkAccordionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkAccordionModule, imports: [CdkAccordion, CdkAccordionItem], exports: [CdkAccordion, CdkAccordionItem] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkAccordionModule });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkAccordionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CdkAccordion, CdkAccordionItem],\n                    exports: [CdkAccordion, CdkAccordionItem],\n                }]\n        }] });\n\nexport { CDK_ACCORDION, CdkAccordion, CdkAccordionItem, CdkAccordionModule };\n\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, TemplateRef, Directive, ViewContainerRef, DOCUMENT, NgZone, ElementRef, Renderer2, EventEmitter, booleanAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, ContentChild, ViewChild, ChangeDetectorRef, HostAttributeToken, numberAttribute, QueryList, ContentChildren, NgModule } from '@angular/core';\nimport { CdkAccordionItem, CdkAccordion, CdkAccordionModule } from '@angular/cdk/accordion';\nimport { TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport { _IdGenerator, FocusMonitor, FocusKeyManager } from '@angular/cdk/a11y';\nimport { startWith, filter, take } from 'rxjs/operators';\nimport { ENTER, hasModifierKey, SPACE } from '@angular/cdk/keycodes';\nimport { Subject, Subscription, EMPTY, merge } from 'rxjs';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { _ as _animationsDisabled } from './animation-DfMFjxHu.mjs';\nimport { _CdkPrivateStyleLoader } from '@angular/cdk/private';\nimport { _ as _StructuralStylesLoader } from './structural-styles-CObeNzjn.mjs';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\nimport '@angular/cdk/layout';\nimport '@angular/cdk/bidi';\n\n/**\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n */\nconst MAT_ACCORDION = new InjectionToken('MAT_ACCORDION');\n\n/**\n * Token used to provide a `MatExpansionPanel` to `MatExpansionPanelContent`.\n * Used to avoid circular imports between `MatExpansionPanel` and `MatExpansionPanelContent`.\n */\nconst MAT_EXPANSION_PANEL = new InjectionToken('MAT_EXPANSION_PANEL');\n\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\nclass MatExpansionPanelContent {\n    _template = inject(TemplateRef);\n    _expansionPanel = inject(MAT_EXPANSION_PANEL, { optional: true });\n    constructor() { }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatExpansionPanelContent, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatExpansionPanelContent, isStandalone: true, selector: \"ng-template[matExpansionPanelContent]\", ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatExpansionPanelContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matExpansionPanelContent]',\n                }]\n        }], ctorParameters: () => [] });\n\n/**\n * Injection token that can be used to configure the default\n * options for the expansion panel component.\n */\nconst MAT_EXPANSION_PANEL_DEFAULT_OPTIONS = new InjectionToken('MAT_EXPANSION_PANEL_DEFAULT_OPTIONS');\n/**\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\nclass MatExpansionPanel extends CdkAccordionItem {\n    _viewContainerRef = inject(ViewContainerRef);\n    _animationsDisabled = _animationsDisabled();\n    _document = inject(DOCUMENT);\n    _ngZone = inject(NgZone);\n    _elementRef = inject(ElementRef);\n    _renderer = inject(Renderer2);\n    _cleanupTransitionEnd;\n    /** Whether the toggle indicator should be hidden. */\n    get hideToggle() {\n        return this._hideToggle || (this.accordion && this.accordion.hideToggle);\n    }\n    set hideToggle(value) {\n        this._hideToggle = value;\n    }\n    _hideToggle = false;\n    /** The position of the expansion indicator. */\n    get togglePosition() {\n        return this._togglePosition || (this.accordion && this.accordion.togglePosition);\n    }\n    set togglePosition(value) {\n        this._togglePosition = value;\n    }\n    _togglePosition;\n    /** An event emitted after the body's expansion animation happens. */\n    afterExpand = new EventEmitter();\n    /** An event emitted after the body's collapse animation happens. */\n    afterCollapse = new EventEmitter();\n    /** Stream that emits for changes in `@Input` properties. */\n    _inputChanges = new Subject();\n    /** Optionally defined accordion the expansion panel belongs to. */\n    accordion = inject(MAT_ACCORDION, { optional: true, skipSelf: true });\n    /** Content that will be rendered lazily. */\n    _lazyContent;\n    /** Element containing the panel's user-provided content. */\n    _body;\n    /** Element wrapping the panel body. */\n    _bodyWrapper;\n    /** Portal holding the user's content. */\n    _portal;\n    /** ID for the associated header element. Used for a11y labelling. */\n    _headerId = inject(_IdGenerator).getId('mat-expansion-panel-header-');\n    constructor() {\n        super();\n        const defaultOptions = inject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, { optional: true });\n        this._expansionDispatcher = inject(UniqueSelectionDispatcher);\n        if (defaultOptions) {\n            this.hideToggle = defaultOptions.hideToggle;\n        }\n    }\n    /** Determines whether the expansion panel should have spacing between it and its siblings. */\n    _hasSpacing() {\n        if (this.accordion) {\n            return this.expanded && this.accordion.displayMode === 'default';\n        }\n        return false;\n    }\n    /** Gets the expanded state string. */\n    _getExpandedState() {\n        return this.expanded ? 'expanded' : 'collapsed';\n    }\n    /** Toggles the expanded state of the expansion panel. */\n    toggle() {\n        this.expanded = !this.expanded;\n    }\n    /** Sets the expanded state of the expansion panel to false. */\n    close() {\n        this.expanded = false;\n    }\n    /** Sets the expanded state of the expansion panel to true. */\n    open() {\n        this.expanded = true;\n    }\n    ngAfterContentInit() {\n        if (this._lazyContent && this._lazyContent._expansionPanel === this) {\n            // Render the content as soon as the panel becomes open.\n            this.opened\n                .pipe(startWith(null), filter(() => this.expanded && !this._portal), take(1))\n                .subscribe(() => {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            });\n        }\n        this._setupAnimationEvents();\n    }\n    ngOnChanges(changes) {\n        this._inputChanges.next(changes);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._cleanupTransitionEnd?.();\n        this._inputChanges.complete();\n    }\n    /** Checks whether the expansion panel's content contains the currently-focused element. */\n    _containsFocus() {\n        if (this._body) {\n            const focusedElement = this._document.activeElement;\n            const bodyElement = this._body.nativeElement;\n            return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n        }\n        return false;\n    }\n    _transitionEndListener = ({ target, propertyName }) => {\n        if (target === this._bodyWrapper?.nativeElement && propertyName === 'grid-template-rows') {\n            this._ngZone.run(() => {\n                if (this.expanded) {\n                    this.afterExpand.emit();\n                }\n                else {\n                    this.afterCollapse.emit();\n                }\n            });\n        }\n    };\n    _setupAnimationEvents() {\n        // This method is defined separately, because we need to\n        // disable this logic in some internal components.\n        this._ngZone.runOutsideAngular(() => {\n            if (this._animationsDisabled) {\n                this.opened.subscribe(() => this._ngZone.run(() => this.afterExpand.emit()));\n                this.closed.subscribe(() => this._ngZone.run(() => this.afterCollapse.emit()));\n            }\n            else {\n                setTimeout(() => {\n                    const element = this._elementRef.nativeElement;\n                    this._cleanupTransitionEnd = this._renderer.listen(element, 'transitionend', this._transitionEndListener);\n                    element.classList.add('mat-expansion-panel-animations-enabled');\n                }, 200);\n            }\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatExpansionPanel, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"20.0.0\", type: MatExpansionPanel, isStandalone: true, selector: \"mat-expansion-panel\", inputs: { hideToggle: [\"hideToggle\", \"hideToggle\", booleanAttribute], togglePosition: \"togglePosition\" }, outputs: { afterExpand: \"afterExpand\", afterCollapse: \"afterCollapse\" }, host: { properties: { \"class.mat-expanded\": \"expanded\", \"class.mat-expansion-panel-spacing\": \"_hasSpacing()\" }, classAttribute: \"mat-expansion-panel\" }, providers: [\n            // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n            // to the same accordion.\n            { provide: MAT_ACCORDION, useValue: undefined },\n            { provide: MAT_EXPANSION_PANEL, useExisting: MatExpansionPanel },\n        ], queries: [{ propertyName: \"_lazyContent\", first: true, predicate: MatExpansionPanelContent, descendants: true }], viewQueries: [{ propertyName: \"_body\", first: true, predicate: [\"body\"], descendants: true }, { propertyName: \"_bodyWrapper\", first: true, predicate: [\"bodyWrapper\"], descendants: true }], exportAs: [\"matExpansionPanel\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"mat-expansion-panel-content-wrapper\\\" [attr.inert]=\\\"expanded ? null : ''\\\" #bodyWrapper>\\n  <div class=\\\"mat-expansion-panel-content\\\"\\n       role=\\\"region\\\"\\n       [attr.aria-labelledby]=\\\"_headerId\\\"\\n       [id]=\\\"id\\\"\\n       #body>\\n    <div class=\\\"mat-expansion-panel-body\\\">\\n      <ng-content></ng-content>\\n      <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n    </div>\\n    <ng-content select=\\\"mat-action-row\\\"></ng-content>\\n  </div>\\n</div>\\n\", styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;overflow:hidden;position:relative;background:var(--mat-expansion-container-background-color, var(--mat-sys-surface));color:var(--mat-expansion-container-text-color, var(--mat-sys-on-surface));border-radius:var(--mat-expansion-container-shape, 12px)}.mat-expansion-panel.mat-expansion-panel-animations-enabled{transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel:not([class*=mat-elevation-z]){box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:var(--mat-expansion-container-shape, 12px);border-top-left-radius:var(--mat-expansion-container-shape, 12px)}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:var(--mat-expansion-container-shape, 12px);border-bottom-left-radius:var(--mat-expansion-container-shape, 12px)}@media(forced-colors: active){.mat-expansion-panel{outline:solid 1px}}.mat-expansion-panel-content-wrapper{display:grid;grid-template-rows:0fr;grid-template-columns:100%}.mat-expansion-panel-animations-enabled .mat-expansion-panel-content-wrapper{transition:grid-template-rows 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel.mat-expanded>.mat-expansion-panel-content-wrapper{grid-template-rows:1fr}@supports not (grid-template-rows: 0fr){.mat-expansion-panel-content-wrapper{height:0}.mat-expansion-panel.mat-expanded>.mat-expansion-panel-content-wrapper{height:auto}}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible;min-height:0;visibility:hidden;font-family:var(--mat-expansion-container-text-font, var(--mat-sys-body-large-font));font-size:var(--mat-expansion-container-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-expansion-container-text-weight, var(--mat-sys-body-large-weight));line-height:var(--mat-expansion-container-text-line-height, var(--mat-sys-body-large-line-height));letter-spacing:var(--mat-expansion-container-text-tracking, var(--mat-sys-body-large-tracking))}.mat-expansion-panel-animations-enabled .mat-expansion-panel-content{transition:visibility 190ms linear}.mat-expansion-panel.mat-expanded>.mat-expansion-panel-content-wrapper>.mat-expansion-panel-content{visibility:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px;border-top-color:var(--mat-expansion-actions-divider-color, var(--mat-sys-outline))}.mat-action-row .mat-button-base,.mat-action-row .mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row .mat-button-base,[dir=rtl] .mat-action-row .mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"], dependencies: [{ kind: \"directive\", type: CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatExpansionPanel, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-expansion-panel', exportAs: 'matExpansionPanel', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [\n                        // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n                        // to the same accordion.\n                        { provide: MAT_ACCORDION, useValue: undefined },\n                        { provide: MAT_EXPANSION_PANEL, useExisting: MatExpansionPanel },\n                    ], host: {\n                        'class': 'mat-expansion-panel',\n                        '[class.mat-expanded]': 'expanded',\n                        '[class.mat-expansion-panel-spacing]': '_hasSpacing()',\n                    }, imports: [CdkPortalOutlet], template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"mat-expansion-panel-content-wrapper\\\" [attr.inert]=\\\"expanded ? null : ''\\\" #bodyWrapper>\\n  <div class=\\\"mat-expansion-panel-content\\\"\\n       role=\\\"region\\\"\\n       [attr.aria-labelledby]=\\\"_headerId\\\"\\n       [id]=\\\"id\\\"\\n       #body>\\n    <div class=\\\"mat-expansion-panel-body\\\">\\n      <ng-content></ng-content>\\n      <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n    </div>\\n    <ng-content select=\\\"mat-action-row\\\"></ng-content>\\n  </div>\\n</div>\\n\", styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;overflow:hidden;position:relative;background:var(--mat-expansion-container-background-color, var(--mat-sys-surface));color:var(--mat-expansion-container-text-color, var(--mat-sys-on-surface));border-radius:var(--mat-expansion-container-shape, 12px)}.mat-expansion-panel.mat-expansion-panel-animations-enabled{transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel:not([class*=mat-elevation-z]){box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:var(--mat-expansion-container-shape, 12px);border-top-left-radius:var(--mat-expansion-container-shape, 12px)}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:var(--mat-expansion-container-shape, 12px);border-bottom-left-radius:var(--mat-expansion-container-shape, 12px)}@media(forced-colors: active){.mat-expansion-panel{outline:solid 1px}}.mat-expansion-panel-content-wrapper{display:grid;grid-template-rows:0fr;grid-template-columns:100%}.mat-expansion-panel-animations-enabled .mat-expansion-panel-content-wrapper{transition:grid-template-rows 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel.mat-expanded>.mat-expansion-panel-content-wrapper{grid-template-rows:1fr}@supports not (grid-template-rows: 0fr){.mat-expansion-panel-content-wrapper{height:0}.mat-expansion-panel.mat-expanded>.mat-expansion-panel-content-wrapper{height:auto}}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible;min-height:0;visibility:hidden;font-family:var(--mat-expansion-container-text-font, var(--mat-sys-body-large-font));font-size:var(--mat-expansion-container-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-expansion-container-text-weight, var(--mat-sys-body-large-weight));line-height:var(--mat-expansion-container-text-line-height, var(--mat-sys-body-large-line-height));letter-spacing:var(--mat-expansion-container-text-tracking, var(--mat-sys-body-large-tracking))}.mat-expansion-panel-animations-enabled .mat-expansion-panel-content{transition:visibility 190ms linear}.mat-expansion-panel.mat-expanded>.mat-expansion-panel-content-wrapper>.mat-expansion-panel-content{visibility:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px;border-top-color:var(--mat-expansion-actions-divider-color, var(--mat-sys-outline))}.mat-action-row .mat-button-base,.mat-action-row .mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row .mat-button-base,[dir=rtl] .mat-action-row .mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { hideToggle: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], togglePosition: [{\n                type: Input\n            }], afterExpand: [{\n                type: Output\n            }], afterCollapse: [{\n                type: Output\n            }], _lazyContent: [{\n                type: ContentChild,\n                args: [MatExpansionPanelContent]\n            }], _body: [{\n                type: ViewChild,\n                args: ['body']\n            }], _bodyWrapper: [{\n                type: ViewChild,\n                args: ['bodyWrapper']\n            }] } });\n/**\n * Actions of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelActionRow {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatExpansionPanelActionRow, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatExpansionPanelActionRow, isStandalone: true, selector: \"mat-action-row\", host: { classAttribute: \"mat-action-row\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatExpansionPanelActionRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-action-row',\n                    host: {\n                        class: 'mat-action-row',\n                    },\n                }]\n        }] });\n\n/**\n * Header element of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelHeader {\n    panel = inject(MatExpansionPanel, { host: true });\n    _element = inject(ElementRef);\n    _focusMonitor = inject(FocusMonitor);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _parentChangeSubscription = Subscription.EMPTY;\n    constructor() {\n        inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n        const panel = this.panel;\n        const defaultOptions = inject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, { optional: true });\n        const tabIndex = inject(new HostAttributeToken('tabindex'), { optional: true });\n        const accordionHideToggleChange = panel.accordion\n            ? panel.accordion._stateChanges.pipe(filter(changes => !!(changes['hideToggle'] || changes['togglePosition'])))\n            : EMPTY;\n        this.tabIndex = parseInt(tabIndex || '') || 0;\n        // Since the toggle state depends on an @Input on the panel, we\n        // need to subscribe and trigger change detection manually.\n        this._parentChangeSubscription = merge(panel.opened, panel.closed, accordionHideToggleChange, panel._inputChanges.pipe(filter(changes => {\n            return !!(changes['hideToggle'] || changes['disabled'] || changes['togglePosition']);\n        }))).subscribe(() => this._changeDetectorRef.markForCheck());\n        // Avoids focus being lost if the panel contained the focused element and was closed.\n        panel.closed\n            .pipe(filter(() => panel._containsFocus()))\n            .subscribe(() => this._focusMonitor.focusVia(this._element, 'program'));\n        if (defaultOptions) {\n            this.expandedHeight = defaultOptions.expandedHeight;\n            this.collapsedHeight = defaultOptions.collapsedHeight;\n        }\n    }\n    /** Height of the header while the panel is expanded. */\n    expandedHeight;\n    /** Height of the header while the panel is collapsed. */\n    collapsedHeight;\n    /** Tab index of the header. */\n    tabIndex = 0;\n    /**\n     * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n     * @docs-private\n     */\n    get disabled() {\n        return this.panel.disabled;\n    }\n    /** Toggles the expanded state of the panel. */\n    _toggle() {\n        if (!this.disabled) {\n            this.panel.toggle();\n        }\n    }\n    /** Gets whether the panel is expanded. */\n    _isExpanded() {\n        return this.panel.expanded;\n    }\n    /** Gets the expanded state string of the panel. */\n    _getExpandedState() {\n        return this.panel._getExpandedState();\n    }\n    /** Gets the panel id. */\n    _getPanelId() {\n        return this.panel.id;\n    }\n    /** Gets the toggle position for the header. */\n    _getTogglePosition() {\n        return this.panel.togglePosition;\n    }\n    /** Gets whether the expand indicator should be shown. */\n    _showToggle() {\n        return !this.panel.hideToggle && !this.panel.disabled;\n    }\n    /**\n     * Gets the current height of the header. Null if no custom height has been\n     * specified, and if the default height from the stylesheet should be used.\n     */\n    _getHeaderHeight() {\n        const isExpanded = this._isExpanded();\n        if (isExpanded && this.expandedHeight) {\n            return this.expandedHeight;\n        }\n        else if (!isExpanded && this.collapsedHeight) {\n            return this.collapsedHeight;\n        }\n        return null;\n    }\n    /** Handle keydown event calling to toggle() if appropriate. */\n    _keydown(event) {\n        switch (event.keyCode) {\n            // Toggle for space and enter keys.\n            case SPACE:\n            case ENTER:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this._toggle();\n                }\n                break;\n            default:\n                if (this.panel.accordion) {\n                    this.panel.accordion._handleHeaderKeydown(event);\n                }\n                return;\n        }\n    }\n    /**\n     * Focuses the panel header. Implemented as a part of `FocusableOption`.\n     * @param origin Origin of the action that triggered the focus.\n     * @docs-private\n     */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._element, origin, options);\n        }\n        else {\n            this._element.nativeElement.focus(options);\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._element).subscribe(origin => {\n            if (origin && this.panel.accordion) {\n                this.panel.accordion._handleHeaderFocus(this);\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._parentChangeSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._element);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatExpansionPanelHeader, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: MatExpansionPanelHeader, isStandalone: true, selector: \"mat-expansion-panel-header\", inputs: { expandedHeight: \"expandedHeight\", collapsedHeight: \"collapsedHeight\", tabIndex: [\"tabIndex\", \"tabIndex\", (value) => (value == null ? 0 : numberAttribute(value))] }, host: { attributes: { \"role\": \"button\" }, listeners: { \"click\": \"_toggle()\", \"keydown\": \"_keydown($event)\" }, properties: { \"attr.id\": \"panel._headerId\", \"attr.tabindex\": \"disabled ? -1 : tabIndex\", \"attr.aria-controls\": \"_getPanelId()\", \"attr.aria-expanded\": \"_isExpanded()\", \"attr.aria-disabled\": \"panel.disabled\", \"class.mat-expanded\": \"_isExpanded()\", \"class.mat-expansion-toggle-indicator-after\": \"_getTogglePosition() === 'after'\", \"class.mat-expansion-toggle-indicator-before\": \"_getTogglePosition() === 'before'\", \"style.height\": \"_getHeaderHeight()\" }, classAttribute: \"mat-expansion-panel-header mat-focus-indicator\" }, ngImport: i0, template: \"<span class=\\\"mat-content\\\" [class.mat-content-hide-toggle]=\\\"!_showToggle()\\\">\\n  <ng-content select=\\\"mat-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"mat-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n\\n@if (_showToggle()) {\\n  <span class=\\\"mat-expansion-indicator\\\">\\n    <svg\\n      xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n      viewBox=\\\"0 -960 960 960\\\"\\n      aria-hidden=\\\"true\\\"\\n      focusable=\\\"false\\\">\\n      <path d=\\\"M480-345 240-585l56-56 184 184 184-184 56 56-240 240Z\\\"/>\\n    </svg>\\n  </span>\\n}\\n\", styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;height:var(--mat-expansion-header-collapsed-state-height, 48px);font-family:var(--mat-expansion-header-text-font, var(--mat-sys-title-medium-font));font-size:var(--mat-expansion-header-text-size, var(--mat-sys-title-medium-size));font-weight:var(--mat-expansion-header-text-weight, var(--mat-sys-title-medium-weight));line-height:var(--mat-expansion-header-text-line-height, var(--mat-sys-title-medium-line-height));letter-spacing:var(--mat-expansion-header-text-tracking, var(--mat-sys-title-medium-tracking))}.mat-expansion-panel-animations-enabled .mat-expansion-panel-header{transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header::before{border-radius:inherit}.mat-expansion-panel-header.mat-expanded{height:var(--mat-expansion-header-expanded-state-height, 64px)}.mat-expansion-panel-header[aria-disabled=true]{color:var(--mat-expansion-header-disabled-state-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]):hover{background:var(--mat-expansion-header-hover-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-hover-state-layer-opacity) * 100%), transparent))}@media(hover: none){.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]):hover{background:var(--mat-expansion-container-background-color, var(--mat-sys-surface))}}.mat-expansion-panel .mat-expansion-panel-header:not([aria-disabled=true]).cdk-keyboard-focused,.mat-expansion-panel .mat-expansion-panel-header:not([aria-disabled=true]).cdk-program-focused{background:var(--mat-expansion-header-focus-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-focus-state-layer-opacity) * 100%), transparent))}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-content.mat-content-hide-toggle{margin-right:8px}[dir=rtl] .mat-content.mat-content-hide-toggle{margin-right:0;margin-left:8px}.mat-expansion-toggle-indicator-before .mat-content.mat-content-hide-toggle{margin-left:24px;margin-right:0}[dir=rtl] .mat-expansion-toggle-indicator-before .mat-content.mat-content-hide-toggle{margin-right:24px;margin-left:0}.mat-expansion-panel-header-title{color:var(--mat-expansion-header-text-color, var(--mat-sys-on-surface))}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;flex-basis:0;margin-right:16px;align-items:center}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-title,.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-description{color:inherit}.mat-expansion-panel-header-description{flex-grow:2;color:var(--mat-expansion-header-description-color, var(--mat-sys-on-surface-variant))}.mat-expansion-panel-animations-enabled .mat-expansion-indicator{transition:transform 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header.mat-expanded .mat-expansion-indicator{transform:rotate(180deg)}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";padding:3px;transform:rotate(45deg);vertical-align:middle;color:var(--mat-expansion-header-indicator-color, var(--mat-sys-on-surface-variant));display:var(--mat-expansion-legacy-header-indicator-display, none)}.mat-expansion-indicator svg{width:24px;height:24px;margin:0 -8px;vertical-align:middle;fill:var(--mat-expansion-header-indicator-color, var(--mat-sys-on-surface-variant));display:var(--mat-expansion-header-indicator-display, inline-block)}@media(forced-colors: active){.mat-expansion-panel-content{border-top:1px solid;border-top-left-radius:0;border-top-right-radius:0}}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatExpansionPanelHeader, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-expansion-panel-header', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        'class': 'mat-expansion-panel-header mat-focus-indicator',\n                        'role': 'button',\n                        '[attr.id]': 'panel._headerId',\n                        '[attr.tabindex]': 'disabled ? -1 : tabIndex',\n                        '[attr.aria-controls]': '_getPanelId()',\n                        '[attr.aria-expanded]': '_isExpanded()',\n                        '[attr.aria-disabled]': 'panel.disabled',\n                        '[class.mat-expanded]': '_isExpanded()',\n                        '[class.mat-expansion-toggle-indicator-after]': `_getTogglePosition() === 'after'`,\n                        '[class.mat-expansion-toggle-indicator-before]': `_getTogglePosition() === 'before'`,\n                        '[style.height]': '_getHeaderHeight()',\n                        '(click)': '_toggle()',\n                        '(keydown)': '_keydown($event)',\n                    }, template: \"<span class=\\\"mat-content\\\" [class.mat-content-hide-toggle]=\\\"!_showToggle()\\\">\\n  <ng-content select=\\\"mat-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"mat-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n\\n@if (_showToggle()) {\\n  <span class=\\\"mat-expansion-indicator\\\">\\n    <svg\\n      xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n      viewBox=\\\"0 -960 960 960\\\"\\n      aria-hidden=\\\"true\\\"\\n      focusable=\\\"false\\\">\\n      <path d=\\\"M480-345 240-585l56-56 184 184 184-184 56 56-240 240Z\\\"/>\\n    </svg>\\n  </span>\\n}\\n\", styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;height:var(--mat-expansion-header-collapsed-state-height, 48px);font-family:var(--mat-expansion-header-text-font, var(--mat-sys-title-medium-font));font-size:var(--mat-expansion-header-text-size, var(--mat-sys-title-medium-size));font-weight:var(--mat-expansion-header-text-weight, var(--mat-sys-title-medium-weight));line-height:var(--mat-expansion-header-text-line-height, var(--mat-sys-title-medium-line-height));letter-spacing:var(--mat-expansion-header-text-tracking, var(--mat-sys-title-medium-tracking))}.mat-expansion-panel-animations-enabled .mat-expansion-panel-header{transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header::before{border-radius:inherit}.mat-expansion-panel-header.mat-expanded{height:var(--mat-expansion-header-expanded-state-height, 64px)}.mat-expansion-panel-header[aria-disabled=true]{color:var(--mat-expansion-header-disabled-state-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]):hover{background:var(--mat-expansion-header-hover-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-hover-state-layer-opacity) * 100%), transparent))}@media(hover: none){.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]):hover{background:var(--mat-expansion-container-background-color, var(--mat-sys-surface))}}.mat-expansion-panel .mat-expansion-panel-header:not([aria-disabled=true]).cdk-keyboard-focused,.mat-expansion-panel .mat-expansion-panel-header:not([aria-disabled=true]).cdk-program-focused{background:var(--mat-expansion-header-focus-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-focus-state-layer-opacity) * 100%), transparent))}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-content.mat-content-hide-toggle{margin-right:8px}[dir=rtl] .mat-content.mat-content-hide-toggle{margin-right:0;margin-left:8px}.mat-expansion-toggle-indicator-before .mat-content.mat-content-hide-toggle{margin-left:24px;margin-right:0}[dir=rtl] .mat-expansion-toggle-indicator-before .mat-content.mat-content-hide-toggle{margin-right:24px;margin-left:0}.mat-expansion-panel-header-title{color:var(--mat-expansion-header-text-color, var(--mat-sys-on-surface))}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;flex-basis:0;margin-right:16px;align-items:center}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-title,.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-description{color:inherit}.mat-expansion-panel-header-description{flex-grow:2;color:var(--mat-expansion-header-description-color, var(--mat-sys-on-surface-variant))}.mat-expansion-panel-animations-enabled .mat-expansion-indicator{transition:transform 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header.mat-expanded .mat-expansion-indicator{transform:rotate(180deg)}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";padding:3px;transform:rotate(45deg);vertical-align:middle;color:var(--mat-expansion-header-indicator-color, var(--mat-sys-on-surface-variant));display:var(--mat-expansion-legacy-header-indicator-display, none)}.mat-expansion-indicator svg{width:24px;height:24px;margin:0 -8px;vertical-align:middle;fill:var(--mat-expansion-header-indicator-color, var(--mat-sys-on-surface-variant));display:var(--mat-expansion-header-indicator-display, inline-block)}@media(forced-colors: active){.mat-expansion-panel-content{border-top:1px solid;border-top-left-radius:0;border-top-right-radius:0}}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { expandedHeight: [{\n                type: Input\n            }], collapsedHeight: [{\n                type: Input\n            }], tabIndex: [{\n                type: Input,\n                args: [{\n                        transform: (value) => (value == null ? 0 : numberAttribute(value)),\n                    }]\n            }] } });\n/**\n * Description element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelDescription {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatExpansionPanelDescription, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatExpansionPanelDescription, isStandalone: true, selector: \"mat-panel-description\", host: { classAttribute: \"mat-expansion-panel-header-description\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatExpansionPanelDescription, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-panel-description',\n                    host: {\n                        class: 'mat-expansion-panel-header-description',\n                    },\n                }]\n        }] });\n/**\n * Title element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelTitle {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatExpansionPanelTitle, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatExpansionPanelTitle, isStandalone: true, selector: \"mat-panel-title\", host: { classAttribute: \"mat-expansion-panel-header-title\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatExpansionPanelTitle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-panel-title',\n                    host: {\n                        class: 'mat-expansion-panel-header-title',\n                    },\n                }]\n        }] });\n\n/**\n * Directive for a Material Design Accordion.\n */\nclass MatAccordion extends CdkAccordion {\n    _keyManager;\n    /** Headers belonging to this accordion. */\n    _ownHeaders = new QueryList();\n    /** All headers inside the accordion. Includes headers inside nested accordions. */\n    _headers;\n    /** Whether the expansion indicator should be hidden. */\n    hideToggle = false;\n    /**\n     * Display mode used for all expansion panels in the accordion. Currently two display\n     * modes exist:\n     *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n     *     panel at a different elevation from the rest of the accordion.\n     *  flat - no spacing is placed around expanded panels, showing all panels at the same\n     *     elevation.\n     */\n    displayMode = 'default';\n    /** The position of the expansion indicator. */\n    togglePosition = 'after';\n    ngAfterContentInit() {\n        this._headers.changes\n            .pipe(startWith(this._headers))\n            .subscribe((headers) => {\n            this._ownHeaders.reset(headers.filter(header => header.panel.accordion === this));\n            this._ownHeaders.notifyOnChanges();\n        });\n        this._keyManager = new FocusKeyManager(this._ownHeaders).withWrap().withHomeAndEnd();\n    }\n    /** Handles keyboard events coming in from the panel headers. */\n    _handleHeaderKeydown(event) {\n        this._keyManager.onKeydown(event);\n    }\n    _handleHeaderFocus(header) {\n        this._keyManager.updateActiveItem(header);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._keyManager?.destroy();\n        this._ownHeaders.destroy();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatAccordion, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"20.0.0\", type: MatAccordion, isStandalone: true, selector: \"mat-accordion\", inputs: { hideToggle: [\"hideToggle\", \"hideToggle\", booleanAttribute], displayMode: \"displayMode\", togglePosition: \"togglePosition\" }, host: { properties: { \"class.mat-accordion-multi\": \"this.multi\" }, classAttribute: \"mat-accordion\" }, providers: [\n            {\n                provide: MAT_ACCORDION,\n                useExisting: MatAccordion,\n            },\n        ], queries: [{ propertyName: \"_headers\", predicate: MatExpansionPanelHeader, descendants: true }], exportAs: [\"matAccordion\"], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatAccordion, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-accordion',\n                    exportAs: 'matAccordion',\n                    providers: [\n                        {\n                            provide: MAT_ACCORDION,\n                            useExisting: MatAccordion,\n                        },\n                    ],\n                    host: {\n                        class: 'mat-accordion',\n                        // Class binding which is only used by the test harness as there is no other\n                        // way for the harness to detect if multiple panel support is enabled.\n                        '[class.mat-accordion-multi]': 'this.multi',\n                    },\n                }]\n        }], propDecorators: { _headers: [{\n                type: ContentChildren,\n                args: [MatExpansionPanelHeader, { descendants: true }]\n            }], hideToggle: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], displayMode: [{\n                type: Input\n            }], togglePosition: [{\n                type: Input\n            }] } });\n\nclass MatExpansionModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatExpansionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatExpansionModule, imports: [MatCommonModule,\n            CdkAccordionModule,\n            PortalModule,\n            MatAccordion,\n            MatExpansionPanel,\n            MatExpansionPanelActionRow,\n            MatExpansionPanelHeader,\n            MatExpansionPanelTitle,\n            MatExpansionPanelDescription,\n            MatExpansionPanelContent], exports: [MatAccordion,\n            MatExpansionPanel,\n            MatExpansionPanelActionRow,\n            MatExpansionPanelHeader,\n            MatExpansionPanelTitle,\n            MatExpansionPanelDescription,\n            MatExpansionPanelContent] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatExpansionModule, imports: [MatCommonModule,\n            CdkAccordionModule,\n            PortalModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatExpansionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        MatCommonModule,\n                        CdkAccordionModule,\n                        PortalModule,\n                        MatAccordion,\n                        MatExpansionPanel,\n                        MatExpansionPanelActionRow,\n                        MatExpansionPanelHeader,\n                        MatExpansionPanelTitle,\n                        MatExpansionPanelDescription,\n                        MatExpansionPanelContent,\n                    ],\n                    exports: [\n                        MatAccordion,\n                        MatExpansionPanel,\n                        MatExpansionPanelActionRow,\n                        MatExpansionPanelHeader,\n                        MatExpansionPanelTitle,\n                        MatExpansionPanelDescription,\n                        MatExpansionPanelContent,\n                    ],\n                }]\n        }] });\n\n/**\n * Time and timing curve for expansion panel animations.\n * @deprecated No longer used. Will be removed.\n * @breaking-change 21.0.0\n */\nconst EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM. This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * @docs-private\n * @deprecated No longer being used, to be removed.\n * @breaking-change 21.0.0\n */\nconst matExpansionAnimations = {\n    // Represents:\n    // trigger('indicatorRotate', [\n    //   state('collapsed, void', style({transform: 'rotate(0deg)'})),\n    //   state('expanded', style({transform: 'rotate(180deg)'})),\n    //   transition(\n    //     'expanded <=> collapsed, void => collapsed',\n    //     animate(EXPANSION_PANEL_ANIMATION_TIMING),\n    //   ),\n    // ])\n    /** Animation that rotates the indicator arrow. */\n    indicatorRotate: {\n        type: 7,\n        name: 'indicatorRotate',\n        definitions: [\n            {\n                type: 0,\n                name: 'collapsed, void',\n                styles: { type: 6, styles: { transform: 'rotate(0deg)' }, offset: null },\n            },\n            {\n                type: 0,\n                name: 'expanded',\n                styles: { type: 6, styles: { transform: 'rotate(180deg)' }, offset: null },\n            },\n            {\n                type: 1,\n                expr: 'expanded <=> collapsed, void => collapsed',\n                animation: { type: 4, styles: null, timings: '225ms cubic-bezier(0.4,0.0,0.2,1)' },\n                options: null,\n            },\n        ],\n        options: {},\n    },\n    // Represents:\n    // trigger('bodyExpansion', [\n    //   state('collapsed, void', style({height: '0px', visibility: 'hidden'})),\n    //   // Clear the `visibility` while open, otherwise the content will be visible when placed in\n    //   // a parent that's `visibility: hidden`, because `visibility` doesn't apply to descendants\n    //   // that have a `visibility` of their own (see #27436).\n    //   state('expanded', style({height: '*', visibility: ''})),\n    //   transition(\n    //     'expanded <=> collapsed, void => collapsed',\n    //     animate(EXPANSION_PANEL_ANIMATION_TIMING),\n    //   ),\n    // ])\n    /** Animation that expands and collapses the panel content. */\n    bodyExpansion: {\n        type: 7,\n        name: 'bodyExpansion',\n        definitions: [\n            {\n                type: 0,\n                name: 'collapsed, void',\n                styles: { type: 6, styles: { 'height': '0px', 'visibility': 'hidden' }, offset: null },\n            },\n            {\n                type: 0,\n                name: 'expanded',\n                styles: { type: 6, styles: { 'height': '*', 'visibility': '' }, offset: null },\n            },\n            {\n                type: 1,\n                expr: 'expanded <=> collapsed, void => collapsed',\n                animation: { type: 4, styles: null, timings: '225ms cubic-bezier(0.4,0.0,0.2,1)' },\n                options: null,\n            },\n        ],\n        options: {},\n    },\n};\n\nexport { EXPANSION_PANEL_ANIMATION_TIMING, MAT_ACCORDION, MAT_EXPANSION_PANEL, MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, MatAccordion, MatExpansionModule, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelContent, MatExpansionPanelDescription, MatExpansionPanelHeader, MatExpansionPanelTitle, matExpansionAnimations };\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA,SAAS,+CAA+C;AACpD,SAAO,EAAE,UAAU,UAAU;AACjC;AArBA,IAUM,sCAeA,WAIA,mBACA,oBA+IA,YAEA;AA/KN;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAMA,IAAM,uCAAuC,IAAI,eAAe,wCAAwC;AAAA,MACpG,YAAY;AAAA,MACZ,SAAS;AAAA,IACb,CAAC;AAYD,IAAM,YAAY;AAIlB,IAAM,oBAAoB;AAC1B,IAAM,qBAAN,MAAM,oBAAmB;AAAA,MACrB,cAAc,OAAO,UAAU;AAAA;AAAA,MAE/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASA,IAAI,QAAQ;AACR,eAAO,KAAK,UAAU,KAAK;AAAA,MAC/B;AAAA,MACA,IAAI,MAAM,OAAO;AACb,aAAK,SAAS;AAAA,MAClB;AAAA,MACA;AAAA,MACA,gBAAgB;AAAA;AAAA,MAEhB;AAAA,MACA,cAAc;AACV,cAAM,WAAW,OAAO,oCAAoC;AAC5D,aAAK,kBAAkB,oBAAoB,KAAK,CAAC,CAAC,YAAY,CAAC,SAAS;AACxE,aAAK,OACD,KAAK,YAAY,cAAc,SAAS,YAAY,MAAM,gBACpD,kBACA;AACV,YAAI,UAAU;AACV,cAAI,SAAS,OAAO;AAChB,iBAAK,QAAQ,KAAK,gBAAgB,SAAS;AAAA,UAC/C;AACA,cAAI,SAAS,UAAU;AACnB,iBAAK,WAAW,SAAS;AAAA,UAC7B;AACA,cAAI,SAAS,aAAa;AACtB,iBAAK,cAAc,SAAS;AAAA,UAChC;AAAA,QACJ;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQA;AAAA;AAAA,MAEA,IAAI,QAAQ;AACR,eAAO,KAAK,SAAS,gBAAgB,KAAK,SAAS;AAAA,MACvD;AAAA,MACA,IAAI,MAAM,GAAG;AACT,aAAK,SAAS,KAAK,IAAI,GAAG,KAAK,IAAI,KAAK,KAAK,CAAC,CAAC;AAAA,MACnD;AAAA,MACA,SAAS;AAAA;AAAA,MAET,IAAI,WAAW;AACX,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,IAAI,SAAS,MAAM;AACf,aAAK,YAAY,QAAQ;AAAA,MAC7B;AAAA,MACA,YAAY;AAAA;AAAA,MAEZ,IAAI,cAAc;AACd,eAAO,KAAK,gBAAgB,KAAK,WAAW;AAAA,MAChD;AAAA,MACA,IAAI,YAAY,OAAO;AACnB,aAAK,eAAe,SAAS;AAAA,MACjC;AAAA,MACA;AAAA;AAAA,MAEA,gBAAgB;AACZ,gBAAQ,KAAK,WAAW,qBAAqB;AAAA,MACjD;AAAA;AAAA,MAEA,WAAW;AACP,cAAM,UAAU,KAAK,cAAc,IAAI,IAAI,KAAK;AAChD,eAAO,OAAO,OAAO,IAAI,OAAO;AAAA,MACpC;AAAA;AAAA,MAEA,uBAAuB;AACnB,eAAO,IAAI,KAAK,KAAK,KAAK,cAAc;AAAA,MAC5C;AAAA;AAAA,MAEA,oBAAoB;AAChB,YAAI,KAAK,SAAS,eAAe;AAC7B,iBAAQ,KAAK,qBAAqB,KAAK,MAAM,KAAK,UAAW;AAAA,QACjE;AACA,eAAO;AAAA,MACX;AAAA;AAAA,MAEA,qBAAqB;AACjB,eAAQ,KAAK,cAAc,KAAK,WAAY;AAAA,MAChD;AAAA,MACA,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,qBAAoB,MAAM,CAAC,GAAG,QAAW,cAAgB,UAAU,CAAC;AAAA,MACvK,OAAO,YAAU,+BAAqB,EAAE,YAAY,UAAU,SAAS,UAAU,MAAM,qBAAoB,cAAc,MAAM,UAAU,qCAAqC,QAAQ,EAAE,OAAO,SAAS,MAAM,QAAQ,OAAO,CAAC,SAAS,SAAS,eAAe,GAAG,UAAU,CAAC,YAAY,YAAY,eAAe,GAAG,aAAa,CAAC,eAAe,eAAe,eAAe,EAAE,GAAG,MAAM,EAAE,YAAY,EAAE,QAAQ,eAAe,YAAY,KAAK,GAAG,YAAY,EAAE,SAAS,kBAAoB,iCAAiC,mBAAmB,8CAA8C,4BAA8B,kBAAkB,YAAY,mBAAmB,YAAY,qCAAqC,mBAAqB,uDAAuD,mBAAqB,sBAAsB,KAAK,sBAAsB,OAAO,sBAAsB,yCAA2C,aAAa,OAAO,GAAG,gBAAgB,iDAAiD,GAAG,aAAa,CAAC,EAAE,cAAc,sBAAsB,OAAO,MAAM,WAAW,CAAC,oBAAoB,GAAG,aAAa,KAAK,CAAC,GAAG,UAAU,CAAC,oBAAoB,GAAG,UAAU,cAAI,UAAU,64DAA68D,QAAQ,CAAC,irIAAirI,GAAG,cAAc,CAAC,EAAE,MAAM,aAAa,MAAM,kBAAkB,UAAU,sBAAsB,QAAQ,CAAC,2BAA2B,oBAAoB,0BAA0B,EAAE,CAAC,GAAG,iBAAoB,wBAAwB,QAAQ,eAAkB,kBAAkB,KAAK,CAAC;AAAA,IAC9kP;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,oBAAoB,YAAY,CAAC;AAAA,MAChH,MAAM;AAAA,MACN,MAAM,CAAC,EAAE,UAAU,qCAAqC,UAAU,sBAAsB,MAAM;AAAA,QAClF,QAAQ;AAAA,QACR,SAAS;AAAA;AAAA;AAAA,QAGT,YAAY;AAAA,QACZ,WAAW;AAAA,QACX,mCAAmC;AAAA,QACnC,gDAAgD;AAAA,QAChD,oBAAoB;AAAA,QACpB,qBAAqB;AAAA,QACrB,uCAAuC;AAAA,QACvC,yDAAyD;AAAA,QACzD,wBAAwB;AAAA,QACxB,wBAAwB;AAAA,QACxB,wBAAwB;AAAA,QACxB,eAAe;AAAA,MACnB,GAAG,iBAAiB,wBAAwB,QAAQ,eAAe,kBAAkB,MAAM,SAAS,CAAC,gBAAgB,GAAG,UAAU,64DAA68D,QAAQ,CAAC,irIAAirI,EAAE,CAAC;AAAA,IACxxM,CAAC,GAAG,gBAAgB,MAAM,CAAC,GAAG,gBAAgB,EAAE,OAAO,CAAC;AAAA,MAChD,MAAM;AAAA,IACV,CAAC,GAAG,oBAAoB,CAAC;AAAA,MACrB,MAAM;AAAA,MACN,MAAM,CAAC,oBAAoB;AAAA,IAC/B,CAAC,GAAG,MAAM,CAAC;AAAA,MACP,MAAM;AAAA,IACV,CAAC,GAAG,OAAO,CAAC;AAAA,MACR,MAAM;AAAA,MACN,MAAM,CAAC,EAAE,WAAW,gBAAgB,CAAC;AAAA,IACzC,CAAC,GAAG,UAAU,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM,CAAC,EAAE,WAAW,gBAAgB,CAAC;AAAA,IACzC,CAAC,GAAG,aAAa,CAAC;AAAA,MACd,MAAM;AAAA,MACN,MAAM,CAAC,EAAE,WAAW,gBAAgB,CAAC;AAAA,IACzC,CAAC,EAAE,EAAE,CAAC;AAOlB,IAAM,aAAa;AAEnB,IAAM,2BAAN,MAAM,0BAAyB;AAAA,MAC3B,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,2BAA0B,MAAM,CAAC,GAAG,QAAW,cAAgB,SAAS,CAAC;AAAA,MAC5K,OAAO,YAAU,8BAAoB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,2BAA0B,SAAS,CAAC,oBAAoB,UAAU,GAAG,SAAS,CAAC,oBAAoB,YAAY,eAAe,EAAE,CAAC;AAAA,MACrO,OAAO,YAAU,8BAAoB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,2BAA0B,SAAS,CAAC,eAAe,EAAE,CAAC;AAAA,IAC9J;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,0BAA0B,YAAY,CAAC;AAAA,MACtH,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACC,SAAS,CAAC,oBAAoB,UAAU;AAAA,QACxC,SAAS,CAAC,oBAAoB,YAAY,eAAe;AAAA,MAC7D,CAAC;AAAA,IACT,CAAC,EAAE,CAAC;AAAA;AAAA;;;AC1LZ,IAWM,eAIA,cA6CA,kBA6IA;AAzMN;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAOA,IAAM,gBAAgB,IAAI,eAAe,cAAc;AAIvD,IAAM,eAAN,MAAM,cAAa;AAAA;AAAA,MAEf,gBAAgB,IAAI,QAAQ;AAAA;AAAA,MAE5B,uBAAuB,IAAI,QAAQ;AAAA;AAAA,MAEnC,KAAK,OAAO,YAAY,EAAE,MAAM,gBAAgB;AAAA;AAAA,MAEhD,QAAQ;AAAA;AAAA,MAER,UAAU;AACN,YAAI,KAAK,OAAO;AACZ,eAAK,qBAAqB,KAAK,IAAI;AAAA,QACvC;AAAA,MACJ;AAAA;AAAA,MAEA,WAAW;AACP,aAAK,qBAAqB,KAAK,KAAK;AAAA,MACxC;AAAA,MACA,YAAY,SAAS;AACjB,aAAK,cAAc,KAAK,OAAO;AAAA,MACnC;AAAA,MACA,cAAc;AACV,aAAK,cAAc,SAAS;AAC5B,aAAK,qBAAqB,SAAS;AAAA,MACvC;AAAA,MACA,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,eAAc,MAAM,CAAC,GAAG,QAAW,cAAgB,UAAU,CAAC;AAAA,MACjK,OAAO,YAAU,+BAAqB,EAAE,YAAY,UAAU,SAAS,UAAU,MAAM,eAAc,cAAc,MAAM,UAAU,iCAAiC,QAAQ,EAAE,OAAO,CAAC,SAAS,SAAS,gBAAgB,EAAE,GAAG,WAAW,CAAC,EAAE,SAAS,eAAe,aAAa,cAAa,CAAC,GAAG,UAAU,CAAC,cAAc,GAAG,eAAe,MAAM,UAAU,aAAG,CAAC;AAAA,IACpW;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,cAAc,YAAY,CAAC;AAAA,MAC1G,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACC,UAAU;AAAA,QACV,UAAU;AAAA,QACV,WAAW,CAAC,EAAE,SAAS,eAAe,aAAa,aAAa,CAAC;AAAA,MACrE,CAAC;AAAA,IACT,CAAC,GAAG,gBAAgB,EAAE,OAAO,CAAC;AAAA,MACtB,MAAM;AAAA,MACN,MAAM,CAAC,EAAE,WAAW,iBAAiB,CAAC;AAAA,IAC1C,CAAC,EAAE,EAAE,CAAC;AAMlB,IAAM,mBAAN,MAAM,kBAAiB;AAAA,MACnB,YAAY,OAAO,eAAe,EAAE,UAAU,MAAM,UAAU,KAAK,CAAC;AAAA,MACpE,qBAAqB,OAAO,iBAAiB;AAAA,MAC7C,uBAAuB,OAAO,yBAAyB;AAAA;AAAA,MAEvD,4BAA4B,aAAa;AAAA;AAAA,MAEzC,SAAS,IAAI,aAAa;AAAA;AAAA,MAE1B,SAAS,IAAI,aAAa;AAAA;AAAA,MAE1B,YAAY,IAAI,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAM7B,iBAAiB,IAAI,aAAa;AAAA;AAAA,MAElC,KAAK,OAAO,YAAY,EAAE,MAAM,sBAAsB;AAAA;AAAA,MAEtD,IAAI,WAAW;AACX,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,IAAI,SAAS,UAAU;AAEnB,YAAI,KAAK,cAAc,UAAU;AAC7B,eAAK,YAAY;AACjB,eAAK,eAAe,KAAK,QAAQ;AACjC,cAAI,UAAU;AACV,iBAAK,OAAO,KAAK;AAKjB,kBAAM,cAAc,KAAK,YAAY,KAAK,UAAU,KAAK,KAAK;AAC9D,iBAAK,qBAAqB,OAAO,KAAK,IAAI,WAAW;AAAA,UACzD,OACK;AACD,iBAAK,OAAO,KAAK;AAAA,UACrB;AAGA,eAAK,mBAAmB,aAAa;AAAA,QACzC;AAAA,MACJ;AAAA,MACA,YAAY;AAAA;AAAA,MAEZ,IAAI,WAAW;AACX,eAAO,KAAK,UAAU;AAAA,MAC1B;AAAA,MACA,IAAI,SAAS,OAAO;AAChB,aAAK,UAAU,IAAI,KAAK;AAAA,MAC5B;AAAA,MACA,YAAY,OAAO,KAAK;AAAA;AAAA,MAExB,iCAAiC,MAAM;AAAA,MAAE;AAAA,MACzC,cAAc;AAAA,MAAE;AAAA,MAChB,WAAW;AACP,aAAK,iCAAiC,KAAK,qBAAqB,OAAO,CAAC,IAAI,gBAAgB;AACxF,cAAI,KAAK,aACL,CAAC,KAAK,UAAU,SAChB,KAAK,UAAU,OAAO,eACtB,KAAK,OAAO,IAAI;AAChB,iBAAK,WAAW;AAAA,UACpB;AAAA,QACJ,CAAC;AAED,YAAI,KAAK,WAAW;AAChB,eAAK,4BAA4B,KAAK,gCAAgC;AAAA,QAC1E;AAAA,MACJ;AAAA;AAAA,MAEA,cAAc;AACV,aAAK,OAAO,SAAS;AACrB,aAAK,OAAO,SAAS;AACrB,aAAK,UAAU,KAAK;AACpB,aAAK,UAAU,SAAS;AACxB,aAAK,+BAA+B;AACpC,aAAK,0BAA0B,YAAY;AAAA,MAC/C;AAAA;AAAA,MAEA,SAAS;AACL,YAAI,CAAC,KAAK,UAAU;AAChB,eAAK,WAAW,CAAC,KAAK;AAAA,QAC1B;AAAA,MACJ;AAAA;AAAA,MAEA,QAAQ;AACJ,YAAI,CAAC,KAAK,UAAU;AAChB,eAAK,WAAW;AAAA,QACpB;AAAA,MACJ;AAAA;AAAA,MAEA,OAAO;AACH,YAAI,CAAC,KAAK,UAAU;AAChB,eAAK,WAAW;AAAA,QACpB;AAAA,MACJ;AAAA,MACA,kCAAkC;AAC9B,eAAO,KAAK,UAAU,qBAAqB,UAAU,cAAY;AAE7D,cAAI,CAAC,KAAK,UAAU;AAChB,iBAAK,WAAW;AAAA,UACpB;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,MACA,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,mBAAkB,MAAM,CAAC,GAAG,QAAW,cAAgB,UAAU,CAAC;AAAA,MACrK,OAAO,YAAU,+BAAqB,EAAE,YAAY,UAAU,SAAS,UAAU,MAAM,mBAAkB,cAAc,MAAM,UAAU,0CAA0C,QAAQ,EAAE,UAAU,CAAC,YAAY,YAAY,gBAAgB,GAAG,UAAU,CAAC,YAAY,YAAY,gBAAgB,EAAE,GAAG,SAAS,EAAE,QAAQ,UAAU,QAAQ,UAAU,WAAW,aAAa,gBAAgB,iBAAiB,GAAG,WAAW;AAAA;AAAA;AAAA,QAGvZ,EAAE,SAAS,eAAe,UAAU,OAAU;AAAA,MAClD,GAAG,UAAU,CAAC,kBAAkB,GAAG,UAAU,aAAG,CAAC;AAAA,IACzD;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,kBAAkB,YAAY,CAAC;AAAA,MAC9G,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACC,UAAU;AAAA,QACV,UAAU;AAAA,QACV,WAAW;AAAA;AAAA;AAAA,UAGP,EAAE,SAAS,eAAe,UAAU,OAAU;AAAA,QAClD;AAAA,MACJ,CAAC;AAAA,IACT,CAAC,GAAG,gBAAgB,MAAM,CAAC,GAAG,gBAAgB,EAAE,QAAQ,CAAC;AAAA,MACjD,MAAM;AAAA,IACV,CAAC,GAAG,QAAQ,CAAC;AAAA,MACT,MAAM;AAAA,IACV,CAAC,GAAG,WAAW,CAAC;AAAA,MACZ,MAAM;AAAA,IACV,CAAC,GAAG,gBAAgB,CAAC;AAAA,MACjB,MAAM;AAAA,IACV,CAAC,GAAG,UAAU,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM,CAAC,EAAE,WAAW,iBAAiB,CAAC;AAAA,IAC1C,CAAC,GAAG,UAAU,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM,CAAC,EAAE,WAAW,iBAAiB,CAAC;AAAA,IAC1C,CAAC,EAAE,EAAE,CAAC;AAElB,IAAM,qBAAN,MAAM,oBAAmB;AAAA,MACrB,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,qBAAoB,MAAM,CAAC,GAAG,QAAW,cAAgB,SAAS,CAAC;AAAA,MACtK,OAAO,YAAU,8BAAoB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,qBAAoB,SAAS,CAAC,cAAc,gBAAgB,GAAG,SAAS,CAAC,cAAc,gBAAgB,EAAE,CAAC;AAAA,MAC9M,OAAO,YAAU,8BAAoB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,oBAAmB,CAAC;AAAA,IAC5H;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,oBAAoB,YAAY,CAAC;AAAA,MAChH,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACC,SAAS,CAAC,cAAc,gBAAgB;AAAA,QACxC,SAAS,CAAC,cAAc,gBAAgB;AAAA,MAC5C,CAAC;AAAA,IACT,CAAC,EAAE,CAAC;AAAA;AAAA;;;ACpNZ,IAoBM,eAMA,qBAMA,0BAkBA,qCAKA,mBA4KA,4BAiBA,yBA6JA,8BAgBA,wBAiBA,cA8EA;AAhgBN;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA,IAAM,gBAAgB,IAAI,eAAe,eAAe;AAMxD,IAAM,sBAAsB,IAAI,eAAe,qBAAqB;AAMpE,IAAM,2BAAN,MAAM,0BAAyB;AAAA,MAC3B,YAAY,OAAO,WAAW;AAAA,MAC9B,kBAAkB,OAAO,qBAAqB,EAAE,UAAU,KAAK,CAAC;AAAA,MAChE,cAAc;AAAA,MAAE;AAAA,MAChB,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,2BAA0B,MAAM,CAAC,GAAG,QAAW,cAAgB,UAAU,CAAC;AAAA,MAC7K,OAAO,YAAU,+BAAqB,EAAE,YAAY,UAAU,SAAS,UAAU,MAAM,2BAA0B,cAAc,MAAM,UAAU,yCAAyC,UAAU,aAAG,CAAC;AAAA,IAC1M;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,0BAA0B,YAAY,CAAC;AAAA,MACtH,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACC,UAAU;AAAA,MACd,CAAC;AAAA,IACT,CAAC,GAAG,gBAAgB,MAAM,CAAC,EAAE,CAAC;AAMtC,IAAM,sCAAsC,IAAI,eAAe,qCAAqC;AAKpG,IAAM,oBAAN,MAAM,2BAA0B,iBAAiB;AAAA,MAC7C,oBAAoB,OAAO,gBAAgB;AAAA,MAC3C,sBAAsB,oBAAoB;AAAA,MAC1C,YAAY,OAAO,QAAQ;AAAA,MAC3B,UAAU,OAAO,MAAM;AAAA,MACvB,cAAc,OAAO,UAAU;AAAA,MAC/B,YAAY,OAAO,SAAS;AAAA,MAC5B;AAAA;AAAA,MAEA,IAAI,aAAa;AACb,eAAO,KAAK,eAAgB,KAAK,aAAa,KAAK,UAAU;AAAA,MACjE;AAAA,MACA,IAAI,WAAW,OAAO;AAClB,aAAK,cAAc;AAAA,MACvB;AAAA,MACA,cAAc;AAAA;AAAA,MAEd,IAAI,iBAAiB;AACjB,eAAO,KAAK,mBAAoB,KAAK,aAAa,KAAK,UAAU;AAAA,MACrE;AAAA,MACA,IAAI,eAAe,OAAO;AACtB,aAAK,kBAAkB;AAAA,MAC3B;AAAA,MACA;AAAA;AAAA,MAEA,cAAc,IAAI,aAAa;AAAA;AAAA,MAE/B,gBAAgB,IAAI,aAAa;AAAA;AAAA,MAEjC,gBAAgB,IAAI,QAAQ;AAAA;AAAA,MAE5B,YAAY,OAAO,eAAe,EAAE,UAAU,MAAM,UAAU,KAAK,CAAC;AAAA;AAAA,MAEpE;AAAA;AAAA,MAEA;AAAA;AAAA,MAEA;AAAA;AAAA,MAEA;AAAA;AAAA,MAEA,YAAY,OAAO,YAAY,EAAE,MAAM,6BAA6B;AAAA,MACpE,cAAc;AACV,cAAM;AACN,cAAM,iBAAiB,OAAO,qCAAqC,EAAE,UAAU,KAAK,CAAC;AACrF,aAAK,uBAAuB,OAAO,yBAAyB;AAC5D,YAAI,gBAAgB;AAChB,eAAK,aAAa,eAAe;AAAA,QACrC;AAAA,MACJ;AAAA;AAAA,MAEA,cAAc;AACV,YAAI,KAAK,WAAW;AAChB,iBAAO,KAAK,YAAY,KAAK,UAAU,gBAAgB;AAAA,QAC3D;AACA,eAAO;AAAA,MACX;AAAA;AAAA,MAEA,oBAAoB;AAChB,eAAO,KAAK,WAAW,aAAa;AAAA,MACxC;AAAA;AAAA,MAEA,SAAS;AACL,aAAK,WAAW,CAAC,KAAK;AAAA,MAC1B;AAAA;AAAA,MAEA,QAAQ;AACJ,aAAK,WAAW;AAAA,MACpB;AAAA;AAAA,MAEA,OAAO;AACH,aAAK,WAAW;AAAA,MACpB;AAAA,MACA,qBAAqB;AACjB,YAAI,KAAK,gBAAgB,KAAK,aAAa,oBAAoB,MAAM;AAEjE,eAAK,OACA,KAAK,UAAU,IAAI,GAAG,OAAO,MAAM,KAAK,YAAY,CAAC,KAAK,OAAO,GAAG,KAAK,CAAC,CAAC,EAC3E,UAAU,MAAM;AACjB,iBAAK,UAAU,IAAI,eAAe,KAAK,aAAa,WAAW,KAAK,iBAAiB;AAAA,UACzF,CAAC;AAAA,QACL;AACA,aAAK,sBAAsB;AAAA,MAC/B;AAAA,MACA,YAAY,SAAS;AACjB,aAAK,cAAc,KAAK,OAAO;AAAA,MACnC;AAAA,MACA,cAAc;AACV,cAAM,YAAY;AAClB,aAAK,wBAAwB;AAC7B,aAAK,cAAc,SAAS;AAAA,MAChC;AAAA;AAAA,MAEA,iBAAiB;AACb,YAAI,KAAK,OAAO;AACZ,gBAAM,iBAAiB,KAAK,UAAU;AACtC,gBAAM,cAAc,KAAK,MAAM;AAC/B,iBAAO,mBAAmB,eAAe,YAAY,SAAS,cAAc;AAAA,QAChF;AACA,eAAO;AAAA,MACX;AAAA,MACA,yBAAyB,CAAC,EAAE,QAAQ,aAAa,MAAM;AACnD,YAAI,WAAW,KAAK,cAAc,iBAAiB,iBAAiB,sBAAsB;AACtF,eAAK,QAAQ,IAAI,MAAM;AACnB,gBAAI,KAAK,UAAU;AACf,mBAAK,YAAY,KAAK;AAAA,YAC1B,OACK;AACD,mBAAK,cAAc,KAAK;AAAA,YAC5B;AAAA,UACJ,CAAC;AAAA,QACL;AAAA,MACJ;AAAA,MACA,wBAAwB;AAGpB,aAAK,QAAQ,kBAAkB,MAAM;AACjC,cAAI,KAAK,qBAAqB;AAC1B,iBAAK,OAAO,UAAU,MAAM,KAAK,QAAQ,IAAI,MAAM,KAAK,YAAY,KAAK,CAAC,CAAC;AAC3E,iBAAK,OAAO,UAAU,MAAM,KAAK,QAAQ,IAAI,MAAM,KAAK,cAAc,KAAK,CAAC,CAAC;AAAA,UACjF,OACK;AACD,uBAAW,MAAM;AACb,oBAAM,UAAU,KAAK,YAAY;AACjC,mBAAK,wBAAwB,KAAK,UAAU,OAAO,SAAS,iBAAiB,KAAK,sBAAsB;AACxG,sBAAQ,UAAU,IAAI,wCAAwC;AAAA,YAClE,GAAG,GAAG;AAAA,UACV;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,MACA,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,oBAAmB,MAAM,CAAC,GAAG,QAAW,cAAgB,UAAU,CAAC;AAAA,MACtK,OAAO,YAAU,+BAAqB,EAAE,YAAY,UAAU,SAAS,UAAU,MAAM,oBAAmB,cAAc,MAAM,UAAU,uBAAuB,QAAQ,EAAE,YAAY,CAAC,cAAc,cAAc,gBAAgB,GAAG,gBAAgB,iBAAiB,GAAG,SAAS,EAAE,aAAa,eAAe,eAAe,gBAAgB,GAAG,MAAM,EAAE,YAAY,EAAE,sBAAsB,YAAY,qCAAqC,gBAAgB,GAAG,gBAAgB,sBAAsB,GAAG,WAAW;AAAA;AAAA;AAAA,QAG9e,EAAE,SAAS,eAAe,UAAU,OAAU;AAAA,QAC9C,EAAE,SAAS,qBAAqB,aAAa,mBAAkB;AAAA,MACnE,GAAG,SAAS,CAAC,EAAE,cAAc,gBAAgB,OAAO,MAAM,WAAW,0BAA0B,aAAa,KAAK,CAAC,GAAG,aAAa,CAAC,EAAE,cAAc,SAAS,OAAO,MAAM,WAAW,CAAC,MAAM,GAAG,aAAa,KAAK,GAAG,EAAE,cAAc,gBAAgB,OAAO,MAAM,WAAW,CAAC,aAAa,GAAG,aAAa,KAAK,CAAC,GAAG,UAAU,CAAC,mBAAmB,GAAG,iBAAiB,MAAM,eAAe,MAAM,UAAU,cAAI,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA0iB,QAAQ,CAAC,6xGAA6xG,GAAG,cAAc,CAAC,EAAE,MAAM,aAAa,MAAM,iBAAiB,UAAU,qBAAqB,QAAQ,CAAC,iBAAiB,GAAG,SAAS,CAAC,UAAU,GAAG,UAAU,CAAC,iBAAiB,EAAE,CAAC,GAAG,iBAAoB,wBAAwB,QAAQ,eAAkB,kBAAkB,KAAK,CAAC;AAAA,IAChgJ;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,mBAAmB,YAAY,CAAC;AAAA,MAC/G,MAAM;AAAA,MACN,MAAM,CAAC,EAAE,UAAU,uBAAuB,UAAU,qBAAqB,eAAe,kBAAkB,MAAM,iBAAiB,wBAAwB,QAAQ,WAAW;AAAA;AAAA;AAAA,QAGhK,EAAE,SAAS,eAAe,UAAU,OAAU;AAAA,QAC9C,EAAE,SAAS,qBAAqB,aAAa,kBAAkB;AAAA,MACnE,GAAG,MAAM;AAAA,QACL,SAAS;AAAA,QACT,wBAAwB;AAAA,QACxB,uCAAuC;AAAA,MAC3C,GAAG,SAAS,CAAC,eAAe,GAAG,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA0iB,QAAQ,CAAC,6xGAA6xG,EAAE,CAAC;AAAA,IACx4H,CAAC,GAAG,gBAAgB,MAAM,CAAC,GAAG,gBAAgB,EAAE,YAAY,CAAC;AAAA,MACrD,MAAM;AAAA,MACN,MAAM,CAAC,EAAE,WAAW,iBAAiB,CAAC;AAAA,IAC1C,CAAC,GAAG,gBAAgB,CAAC;AAAA,MACjB,MAAM;AAAA,IACV,CAAC,GAAG,aAAa,CAAC;AAAA,MACd,MAAM;AAAA,IACV,CAAC,GAAG,eAAe,CAAC;AAAA,MAChB,MAAM;AAAA,IACV,CAAC,GAAG,cAAc,CAAC;AAAA,MACf,MAAM;AAAA,MACN,MAAM,CAAC,wBAAwB;AAAA,IACnC,CAAC,GAAG,OAAO,CAAC;AAAA,MACR,MAAM;AAAA,MACN,MAAM,CAAC,MAAM;AAAA,IACjB,CAAC,GAAG,cAAc,CAAC;AAAA,MACf,MAAM;AAAA,MACN,MAAM,CAAC,aAAa;AAAA,IACxB,CAAC,EAAE,EAAE,CAAC;AAIlB,IAAM,6BAAN,MAAM,4BAA2B;AAAA,MAC7B,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,6BAA4B,MAAM,CAAC,GAAG,QAAW,cAAgB,UAAU,CAAC;AAAA,MAC/K,OAAO,YAAU,+BAAqB,EAAE,YAAY,UAAU,SAAS,UAAU,MAAM,6BAA4B,cAAc,MAAM,UAAU,kBAAkB,MAAM,EAAE,gBAAgB,iBAAiB,GAAG,UAAU,aAAG,CAAC;AAAA,IACjO;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,4BAA4B,YAAY,CAAC;AAAA,MACxH,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACC,UAAU;AAAA,QACV,MAAM;AAAA,UACF,OAAO;AAAA,QACX;AAAA,MACJ,CAAC;AAAA,IACT,CAAC,EAAE,CAAC;AAKZ,IAAM,0BAAN,MAAM,yBAAwB;AAAA,MAC1B,QAAQ,OAAO,mBAAmB,EAAE,MAAM,KAAK,CAAC;AAAA,MAChD,WAAW,OAAO,UAAU;AAAA,MAC5B,gBAAgB,OAAO,YAAY;AAAA,MACnC,qBAAqB,OAAO,iBAAiB;AAAA,MAC7C,4BAA4B,aAAa;AAAA,MACzC,cAAc;AACV,eAAO,sBAAsB,EAAE,KAAK,uBAAuB;AAC3D,cAAM,QAAQ,KAAK;AACnB,cAAM,iBAAiB,OAAO,qCAAqC,EAAE,UAAU,KAAK,CAAC;AACrF,cAAM,WAAW,OAAO,IAAI,mBAAmB,UAAU,GAAG,EAAE,UAAU,KAAK,CAAC;AAC9E,cAAM,4BAA4B,MAAM,YAClC,MAAM,UAAU,cAAc,KAAK,OAAO,aAAW,CAAC,EAAE,QAAQ,YAAY,KAAK,QAAQ,gBAAgB,EAAE,CAAC,IAC5G;AACN,aAAK,WAAW,SAAS,YAAY,EAAE,KAAK;AAG5C,aAAK,4BAA4B,MAAM,MAAM,QAAQ,MAAM,QAAQ,2BAA2B,MAAM,cAAc,KAAK,OAAO,aAAW;AACrI,iBAAO,CAAC,EAAE,QAAQ,YAAY,KAAK,QAAQ,UAAU,KAAK,QAAQ,gBAAgB;AAAA,QACtF,CAAC,CAAC,CAAC,EAAE,UAAU,MAAM,KAAK,mBAAmB,aAAa,CAAC;AAE3D,cAAM,OACD,KAAK,OAAO,MAAM,MAAM,eAAe,CAAC,CAAC,EACzC,UAAU,MAAM,KAAK,cAAc,SAAS,KAAK,UAAU,SAAS,CAAC;AAC1E,YAAI,gBAAgB;AAChB,eAAK,iBAAiB,eAAe;AACrC,eAAK,kBAAkB,eAAe;AAAA,QAC1C;AAAA,MACJ;AAAA;AAAA,MAEA;AAAA;AAAA,MAEA;AAAA;AAAA,MAEA,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,MAKX,IAAI,WAAW;AACX,eAAO,KAAK,MAAM;AAAA,MACtB;AAAA;AAAA,MAEA,UAAU;AACN,YAAI,CAAC,KAAK,UAAU;AAChB,eAAK,MAAM,OAAO;AAAA,QACtB;AAAA,MACJ;AAAA;AAAA,MAEA,cAAc;AACV,eAAO,KAAK,MAAM;AAAA,MACtB;AAAA;AAAA,MAEA,oBAAoB;AAChB,eAAO,KAAK,MAAM,kBAAkB;AAAA,MACxC;AAAA;AAAA,MAEA,cAAc;AACV,eAAO,KAAK,MAAM;AAAA,MACtB;AAAA;AAAA,MAEA,qBAAqB;AACjB,eAAO,KAAK,MAAM;AAAA,MACtB;AAAA;AAAA,MAEA,cAAc;AACV,eAAO,CAAC,KAAK,MAAM,cAAc,CAAC,KAAK,MAAM;AAAA,MACjD;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA,mBAAmB;AACf,cAAM,aAAa,KAAK,YAAY;AACpC,YAAI,cAAc,KAAK,gBAAgB;AACnC,iBAAO,KAAK;AAAA,QAChB,WACS,CAAC,cAAc,KAAK,iBAAiB;AAC1C,iBAAO,KAAK;AAAA,QAChB;AACA,eAAO;AAAA,MACX;AAAA;AAAA,MAEA,SAAS,OAAO;AACZ,gBAAQ,MAAM,SAAS;AAAA;AAAA,UAEnB,KAAK;AAAA,UACL,KAAK;AACD,gBAAI,CAAC,eAAe,KAAK,GAAG;AACxB,oBAAM,eAAe;AACrB,mBAAK,QAAQ;AAAA,YACjB;AACA;AAAA,UACJ;AACI,gBAAI,KAAK,MAAM,WAAW;AACtB,mBAAK,MAAM,UAAU,qBAAqB,KAAK;AAAA,YACnD;AACA;AAAA,QACR;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,MAAM,QAAQ,SAAS;AACnB,YAAI,QAAQ;AACR,eAAK,cAAc,SAAS,KAAK,UAAU,QAAQ,OAAO;AAAA,QAC9D,OACK;AACD,eAAK,SAAS,cAAc,MAAM,OAAO;AAAA,QAC7C;AAAA,MACJ;AAAA,MACA,kBAAkB;AACd,aAAK,cAAc,QAAQ,KAAK,QAAQ,EAAE,UAAU,YAAU;AAC1D,cAAI,UAAU,KAAK,MAAM,WAAW;AAChC,iBAAK,MAAM,UAAU,mBAAmB,IAAI;AAAA,UAChD;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,MACA,cAAc;AACV,aAAK,0BAA0B,YAAY;AAC3C,aAAK,cAAc,eAAe,KAAK,QAAQ;AAAA,MACnD;AAAA,MACA,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,0BAAyB,MAAM,CAAC,GAAG,QAAW,cAAgB,UAAU,CAAC;AAAA,MAC5K,OAAO,YAAU,+BAAqB,EAAE,YAAY,UAAU,SAAS,UAAU,MAAM,0BAAyB,cAAc,MAAM,UAAU,8BAA8B,QAAQ,EAAE,gBAAgB,kBAAkB,iBAAiB,mBAAmB,UAAU,CAAC,YAAY,YAAY,CAAC,UAAW,SAAS,OAAO,IAAI,gBAAgB,KAAK,CAAE,EAAE,GAAG,MAAM,EAAE,YAAY,EAAE,QAAQ,SAAS,GAAG,WAAW,EAAE,SAAS,aAAa,WAAW,mBAAmB,GAAG,YAAY,EAAE,WAAW,mBAAmB,iBAAiB,4BAA4B,sBAAsB,iBAAiB,sBAAsB,iBAAiB,sBAAsB,kBAAkB,sBAAsB,iBAAiB,8CAA8C,oCAAoC,+CAA+C,qCAAqC,gBAAgB,qBAAqB,GAAG,gBAAgB,iDAAiD,GAAG,UAAU,cAAI,UAAU,uhBAA2iB,QAAQ,CAAC,s/IAAw/I,GAAG,iBAAoB,wBAAwB,QAAQ,eAAkB,kBAAkB,KAAK,CAAC;AAAA,IAC1nM;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,yBAAyB,YAAY,CAAC;AAAA,MACrH,MAAM;AAAA,MACN,MAAM,CAAC,EAAE,UAAU,8BAA8B,eAAe,kBAAkB,MAAM,iBAAiB,wBAAwB,QAAQ,MAAM;AAAA,QACnI,SAAS;AAAA,QACT,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,mBAAmB;AAAA,QACnB,wBAAwB;AAAA,QACxB,wBAAwB;AAAA,QACxB,wBAAwB;AAAA,QACxB,wBAAwB;AAAA,QACxB,gDAAgD;AAAA,QAChD,iDAAiD;AAAA,QACjD,kBAAkB;AAAA,QAClB,WAAW;AAAA,QACX,aAAa;AAAA,MACjB,GAAG,UAAU,uhBAA2iB,QAAQ,CAAC,s/IAAw/I,EAAE,CAAC;AAAA,IACxkK,CAAC,GAAG,gBAAgB,MAAM,CAAC,GAAG,gBAAgB,EAAE,gBAAgB,CAAC;AAAA,MACzD,MAAM;AAAA,IACV,CAAC,GAAG,iBAAiB,CAAC;AAAA,MAClB,MAAM;AAAA,IACV,CAAC,GAAG,UAAU,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACC,WAAW,CAAC,UAAW,SAAS,OAAO,IAAI,gBAAgB,KAAK;AAAA,MACpE,CAAC;AAAA,IACT,CAAC,EAAE,EAAE,CAAC;AAIlB,IAAM,+BAAN,MAAM,8BAA6B;AAAA,MAC/B,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,+BAA8B,MAAM,CAAC,GAAG,QAAW,cAAgB,UAAU,CAAC;AAAA,MACjL,OAAO,YAAU,+BAAqB,EAAE,YAAY,UAAU,SAAS,UAAU,MAAM,+BAA8B,cAAc,MAAM,UAAU,yBAAyB,MAAM,EAAE,gBAAgB,yCAAyC,GAAG,UAAU,aAAG,CAAC;AAAA,IAClQ;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,8BAA8B,YAAY,CAAC;AAAA,MAC1H,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACC,UAAU;AAAA,QACV,MAAM;AAAA,UACF,OAAO;AAAA,QACX;AAAA,MACJ,CAAC;AAAA,IACT,CAAC,EAAE,CAAC;AAIZ,IAAM,yBAAN,MAAM,wBAAuB;AAAA,MACzB,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,yBAAwB,MAAM,CAAC,GAAG,QAAW,cAAgB,UAAU,CAAC;AAAA,MAC3K,OAAO,YAAU,+BAAqB,EAAE,YAAY,UAAU,SAAS,UAAU,MAAM,yBAAwB,cAAc,MAAM,UAAU,mBAAmB,MAAM,EAAE,gBAAgB,mCAAmC,GAAG,UAAU,aAAG,CAAC;AAAA,IAChP;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,wBAAwB,YAAY,CAAC;AAAA,MACpH,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACC,UAAU;AAAA,QACV,MAAM;AAAA,UACF,OAAO;AAAA,QACX;AAAA,MACJ,CAAC;AAAA,IACT,CAAC,EAAE,CAAC;AAKZ,IAAM,eAAN,MAAM,sBAAqB,aAAa;AAAA,MACpC;AAAA;AAAA,MAEA,cAAc,IAAI,UAAU;AAAA;AAAA,MAE5B;AAAA;AAAA,MAEA,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASb,cAAc;AAAA;AAAA,MAEd,iBAAiB;AAAA,MACjB,qBAAqB;AACjB,aAAK,SAAS,QACT,KAAK,UAAU,KAAK,QAAQ,CAAC,EAC7B,UAAU,CAAC,YAAY;AACxB,eAAK,YAAY,MAAM,QAAQ,OAAO,YAAU,OAAO,MAAM,cAAc,IAAI,CAAC;AAChF,eAAK,YAAY,gBAAgB;AAAA,QACrC,CAAC;AACD,aAAK,cAAc,IAAI,gBAAgB,KAAK,WAAW,EAAE,SAAS,EAAE,eAAe;AAAA,MACvF;AAAA;AAAA,MAEA,qBAAqB,OAAO;AACxB,aAAK,YAAY,UAAU,KAAK;AAAA,MACpC;AAAA,MACA,mBAAmB,QAAQ;AACvB,aAAK,YAAY,iBAAiB,MAAM;AAAA,MAC5C;AAAA,MACA,cAAc;AACV,cAAM,YAAY;AAClB,aAAK,aAAa,QAAQ;AAC1B,aAAK,YAAY,QAAQ;AAAA,MAC7B;AAAA,MACA,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,eAAc,MAAM,MAAM,QAAW,cAAgB,UAAU,CAAC;AAAA,MACnK,OAAO,YAAU,+BAAqB,EAAE,YAAY,UAAU,SAAS,UAAU,MAAM,eAAc,cAAc,MAAM,UAAU,iBAAiB,QAAQ,EAAE,YAAY,CAAC,cAAc,cAAc,gBAAgB,GAAG,aAAa,eAAe,gBAAgB,iBAAiB,GAAG,MAAM,EAAE,YAAY,EAAE,6BAA6B,aAAa,GAAG,gBAAgB,gBAAgB,GAAG,WAAW;AAAA,QACnY;AAAA,UACI,SAAS;AAAA,UACT,aAAa;AAAA,QACjB;AAAA,MACJ,GAAG,SAAS,CAAC,EAAE,cAAc,YAAY,WAAW,yBAAyB,aAAa,KAAK,CAAC,GAAG,UAAU,CAAC,cAAc,GAAG,iBAAiB,MAAM,UAAU,aAAG,CAAC;AAAA,IAC5K;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,cAAc,YAAY,CAAC;AAAA,MAC1G,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACC,UAAU;AAAA,QACV,UAAU;AAAA,QACV,WAAW;AAAA,UACP;AAAA,YACI,SAAS;AAAA,YACT,aAAa;AAAA,UACjB;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACF,OAAO;AAAA;AAAA;AAAA,UAGP,+BAA+B;AAAA,QACnC;AAAA,MACJ,CAAC;AAAA,IACT,CAAC,GAAG,gBAAgB,EAAE,UAAU,CAAC;AAAA,MACzB,MAAM;AAAA,MACN,MAAM,CAAC,yBAAyB,EAAE,aAAa,KAAK,CAAC;AAAA,IACzD,CAAC,GAAG,YAAY,CAAC;AAAA,MACb,MAAM;AAAA,MACN,MAAM,CAAC,EAAE,WAAW,iBAAiB,CAAC;AAAA,IAC1C,CAAC,GAAG,aAAa,CAAC;AAAA,MACd,MAAM;AAAA,IACV,CAAC,GAAG,gBAAgB,CAAC;AAAA,MACjB,MAAM;AAAA,IACV,CAAC,EAAE,EAAE,CAAC;AAElB,IAAM,qBAAN,MAAM,oBAAmB;AAAA,MACrB,OAAO,YAAU,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,qBAAoB,MAAM,CAAC,GAAG,QAAW,cAAgB,SAAS,CAAC;AAAA,MACtK,OAAO,YAAU,8BAAoB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,qBAAoB,SAAS;AAAA,QAAC;AAAA,QAC1H;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MAAwB,GAAG,SAAS;AAAA,QAAC;AAAA,QACrC;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MAAwB,EAAE,CAAC;AAAA,MACnC,OAAO,YAAU,8BAAoB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,qBAAoB,SAAS;AAAA,QAAC;AAAA,QAC1H;AAAA,QACA;AAAA,MAAY,EAAE,CAAC;AAAA,IAC3B;AACA,IAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,cAAI,MAAM,oBAAoB,YAAY,CAAC;AAAA,MAChH,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACC,SAAS;AAAA,UACL;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,UACL;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACJ;AAAA,MACJ,CAAC;AAAA,IACT,CAAC,EAAE,CAAC;AAAA;AAAA;","names":[],"x_google_ignoreList":[0,1,2]}