{
  "version": 3,
  "sources": ["src/app/upload-modal/upload-modal.spec.ts"],
  "sourcesContent": ["import { ComponentFixture, TestBed } from '@angular/core/testing';\nimport { UploadModal } from './upload-modal';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { DocumentService } from '../services/document.service';\n\ndescribe('UploadModal', () => {\n  let component: UploadModal;\n  let fixture: ComponentFixture<UploadModal>;\n  let dialogRefSpy :any;\n  let documentServiceSpy : any;\n  let matDialogDataStub : any;\n\n  beforeEach(async () => {\n    dialogRefSpy = jasmine.createSpyObj('MatDialogRef', ['close']);\n    documentServiceSpy = jasmine.createSpyObj('DocumentService', ['getAll']);\n    matDialogDataStub = {\n      action: 'Add',\n      teamId: 1,\n      onAccept: jasmine.createSpy('onAccept')\n    };\n\n    await TestBed.configureTestingModule({\n      imports: [\n        UploadModal,\n        MatDialogModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatButtonModule,\n        MatSelectModule,\n        FormsModule,\n        ReactiveFormsModule\n      ],\n      providers: [\n        { provide: MatDialogRef, useValue: dialogRefSpy },\n        { provide: MAT_DIALOG_DATA, useValue: matDialogDataStub },\n        { provide: DocumentService, useValue: documentServiceSpy }\n      ]\n    }).compileComponents();\n\n    fixture = TestBed.createComponent(UploadModal);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n\n    it('should call onAccept when form is valid', () => {\n    const fakeFile = new File(['test'], 'test.txt', { type: 'text/plain' });\n    component.uploadFile = fakeFile;\n\n    // component.formGroup.get('file')?.setValue(true);\n    // component.formGroup.get('description')?.setValue('desc');\n    // component.formGroup.get('visibility')?.setValue('Public');\n\n    spyOnProperty(component.formGroup, 'valid').and.returnValue(true);\n    component.onUploadClick();\n\n    expect(matDialogDataStub.onAccept).toHaveBeenCalled();\n    expect(dialogRefSpy.close).toHaveBeenCalled();\n  });\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,aAAS,eAAe,MAAK;AAC3B,UAAI;AACJ,UAAI;AACJ,UAAI;AACJ,UAAI;AACJ,UAAI;AAEJ,iBAAW,MAAW;AACpB,uBAAe,QAAQ,aAAa,gBAAgB,CAAC,OAAO,CAAC;AAC7D,6BAAqB,QAAQ,aAAa,mBAAmB,CAAC,QAAQ,CAAC;AACvE,4BAAoB;UAClB,QAAQ;UACR,QAAQ;UACR,UAAU,QAAQ,UAAU,UAAU;;AAGxC,cAAM,QAAQ,uBAAuB;UACnC,SAAS;YACP;YACA;YACA;YACA;YACA;YACA;YACA;YACA;;UAEF,WAAW;YACT,EAAE,SAAS,cAAc,UAAU,aAAY;YAC/C,EAAE,SAAS,iBAAiB,UAAU,kBAAiB;YACvD,EAAE,SAAS,iBAAiB,UAAU,mBAAkB;;SAE3D,EAAE,kBAAiB;AAEpB,kBAAU,QAAQ,gBAAgB,WAAW;AAC7C,oBAAY,QAAQ;AACpB,gBAAQ,cAAa;MACvB,EAAC;AAED,SAAG,iBAAiB,MAAK;AACvB,eAAO,SAAS,EAAE,WAAU;MAC9B,CAAC;AAEC,SAAG,2CAA2C,MAAK;AACnD,cAAM,WAAW,IAAI,KAAK,CAAC,MAAM,GAAG,YAAY,EAAE,MAAM,aAAY,CAAE;AACtE,kBAAU,aAAa;AAMvB,sBAAc,UAAU,WAAW,OAAO,EAAE,IAAI,YAAY,IAAI;AAChE,kBAAU,cAAa;AAEvB,eAAO,kBAAkB,QAAQ,EAAE,iBAAgB;AACnD,eAAO,aAAa,KAAK,EAAE,iBAAgB;MAC7C,CAAC;IACH,CAAC;;;",
  "names": []
}
