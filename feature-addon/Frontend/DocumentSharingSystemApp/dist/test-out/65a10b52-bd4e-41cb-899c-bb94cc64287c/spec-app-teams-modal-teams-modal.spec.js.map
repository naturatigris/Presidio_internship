{
  "version": 3,
  "sources": ["src/app/teams-modal/teams-modal.spec.ts"],
  "sourcesContent": ["import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { TeamsModal } from './teams-modal';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { TeamService } from '../services/team.service';\n\ndescribe('TeamsModal', () => {\n  let component: TeamsModal;\n  let fixture: ComponentFixture<TeamsModal>;\n\n\n  let dialogRefSpy :any;\n  let teamServiceSpy : any;\n  let matDialogDataStub : any;\n\n  beforeEach(async () => {\n    dialogRefSpy = jasmine.createSpyObj('MatDialogRef', ['close']);\n    teamServiceSpy = jasmine.createSpyObj('TeamService', ['getAll']);\n    matDialogDataStub = {\n      action: 'Add',\n      onAccept: jasmine.createSpy('onAccept')\n    };\n\n\n    await TestBed.configureTestingModule({\n      imports: [TeamsModal, MatDialogModule, MatFormFieldModule,MatInputModule, MatButtonModule,MatSelectModule, FormsModule, ReactiveFormsModule],\n      providers :[\n        {provide : MatDialogRef, useValue : dialogRefSpy},\n        { provide: MAT_DIALOG_DATA, useValue: matDialogDataStub },\n        { provide: TeamService, useValue:  teamServiceSpy},\n      ]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(TeamsModal);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n  it('should call onAccept when form is valid', () => {\n\n    spyOnProperty(component.formControl, 'valid').and.returnValue(true);\n    component.onUploadClick();\n\n    expect(matDialogDataStub.onAccept).toHaveBeenCalled();\n    expect(dialogRefSpy.close).toHaveBeenCalled();\n  });\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,aAAS,cAAc,MAAK;AAC1B,UAAI;AACJ,UAAI;AAGJ,UAAI;AACJ,UAAI;AACJ,UAAI;AAEJ,iBAAW,MAAW;AACpB,uBAAe,QAAQ,aAAa,gBAAgB,CAAC,OAAO,CAAC;AAC7D,yBAAiB,QAAQ,aAAa,eAAe,CAAC,QAAQ,CAAC;AAC/D,4BAAoB;UAClB,QAAQ;UACR,UAAU,QAAQ,UAAU,UAAU;;AAIxC,cAAM,QAAQ,uBAAuB;UACnC,SAAS,CAAC,YAAY,iBAAiB,oBAAmB,gBAAgB,iBAAgB,iBAAiB,aAAa,mBAAmB;UAC3I,WAAW;YACT,EAAC,SAAU,cAAc,UAAW,aAAY;YAChD,EAAE,SAAS,iBAAiB,UAAU,kBAAiB;YACvD,EAAE,SAAS,aAAa,UAAW,eAAc;;SAEpD,EACA,kBAAiB;AAElB,kBAAU,QAAQ,gBAAgB,UAAU;AAC5C,oBAAY,QAAQ;AACpB,gBAAQ,cAAa;MACvB,EAAC;AAED,SAAG,iBAAiB,MAAK;AACvB,eAAO,SAAS,EAAE,WAAU;MAC9B,CAAC;AACD,SAAG,2CAA2C,MAAK;AAEjD,sBAAc,UAAU,aAAa,OAAO,EAAE,IAAI,YAAY,IAAI;AAClE,kBAAU,cAAa;AAEvB,eAAO,kBAAkB,QAAQ,EAAE,iBAAgB;AACnD,eAAO,aAAa,KAAK,EAAE,iBAAgB;MAC7C,CAAC;IACH,CAAC;;;",
  "names": []
}
