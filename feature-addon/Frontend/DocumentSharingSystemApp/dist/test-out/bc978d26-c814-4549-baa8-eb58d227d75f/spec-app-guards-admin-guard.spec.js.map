{
  "version": 3,
  "sources": ["src/app/guards/admin-guard.spec.ts", "src/app/guards/admin-guard.ts"],
  "sourcesContent": ["import { TestBed } from '@angular/core/testing';\nimport { CanActivateFn } from '@angular/router';\n\nimport { adminGuard } from './admin-guard';\n\ndescribe('adminGuard', () => {\n  const executeGuard: CanActivateFn = (...guardParameters) => \n      TestBed.runInInjectionContext(() => adminGuard(...guardParameters));\n\n  beforeEach(() => {\n    TestBed.configureTestingModule({});\n  });\n\n  it('should be created', () => {\n    expect(executeGuard).toBeTruthy();\n  });\n});\n", "import { inject } from '@angular/core';\nimport { CanActivateFn, Router } from '@angular/router';\nimport { Store } from '@ngxs/store';\nimport { CurrentUserState } from '../current-user/current-user.state';\nimport { UserService } from '../services/user.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nexport const adminGuard: CanActivateFn = (route, state) => {\n  let store = inject(Store);\n  let router = inject(Router);\n  let userService = inject(UserService);\n  let snackBar = new MatSnackBar();\n  let currentUser = store.selectSignal(CurrentUserState.getUser);\n  if(currentUser() == null){\n    let rt = localStorage.getItem('refreshToken');\n    if(rt){\n      userService.getCurrentUserDetails();\n      if(currentUser== null){\n        router.navigateByUrl('/');\n        return false;\n      }\n    }\n    else{\n      snackBar.open(\"Not Authorized to  visit!\",undefined, {duration: 2000});\n      router.navigateByUrl('/');\n      return false;\n    }\n  }\n  \n  if(currentUser()?.role== 'Admin'){\n    return true;\n  }\n  \n  snackBar.open(\"Not Authorized to  visit!\",undefined, {duration: 2000});\n  router.navigateByUrl('/users');\n  return false;\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;ACAA;AACA;AACA;AACA;AACA;AACA;AAEO,IAAM,aAA4B,CAAC,OAAO,UAAS;AACxD,MAAI,QAAQ,OAAO,KAAK;AACxB,MAAI,SAAS,OAAO,MAAM;AAC1B,MAAI,cAAc,OAAO,WAAW;AACpC,MAAI,WAAW,IAAI,YAAW;AAC9B,MAAI,cAAc,MAAM,aAAa,iBAAiB,OAAO;AAC7D,MAAG,YAAW,KAAM,MAAK;AACvB,QAAI,KAAK,aAAa,QAAQ,cAAc;AAC5C,QAAG,IAAG;AACJ,kBAAY,sBAAqB;AACjC,UAAG,eAAc,MAAK;AACpB,eAAO,cAAc,GAAG;AACxB,eAAO;MACT;IACF,OACI;AACF,eAAS,KAAK,6BAA4B,QAAW,EAAC,UAAU,IAAI,CAAC;AACrE,aAAO,cAAc,GAAG;AACxB,aAAO;IACT;EACF;AAEA,MAAG,YAAW,GAAI,QAAO,SAAQ;AAC/B,WAAO;EACT;AAEA,WAAS,KAAK,6BAA4B,QAAW,EAAC,UAAU,IAAI,CAAC;AACrE,SAAO,cAAc,QAAQ;AAC7B,SAAO;AACT;;;AD/BA,SAAS,cAAc,MAAK;AAC1B,QAAM,eAA8B,IAAI,oBACpC,QAAQ,sBAAsB,MAAM,WAAW,GAAG,eAAe,CAAC;AAEtE,aAAW,MAAK;AACd,YAAQ,uBAAuB,CAAA,CAAE;EACnC,CAAC;AAED,KAAG,qBAAqB,MAAK;AAC3B,WAAO,YAAY,EAAE,WAAU;EACjC,CAAC;AACH,CAAC;",
  "names": []
}
