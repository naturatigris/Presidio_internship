{
  "version": 3,
  "sources": ["src/app/navbar/navbar.spec.ts"],
  "sourcesContent": ["import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { Navbar } from './navbar';\nimport { UserService } from '../services/user.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Store } from '@ngxs/store';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { of } from 'rxjs';\nimport { UserModel } from '../models/user.model';\n\ndescribe('Navbar', () => {\n  let component: Navbar;\n  let fixture: ComponentFixture<Navbar>;\n\n  let userService : jasmine.SpyObj<UserService>;\n  let route: jasmine.SpyObj<ActivatedRoute>; \n  let router : jasmine.SpyObj<Router>; \n  let store : jasmine.SpyObj<Store>;\n\n  let user = new UserModel(\"1\");\n\n  beforeEach(async () => {\n    userService = jasmine.createSpyObj(\"UserService\",[\"getCurrentUserDetails\",\"logout\"])\n    router = jasmine.createSpyObj(\"Router\",[\"navigateByUrl\",\"navigate\"]);\n    route = jasmine.createSpyObj(\"AcivatedRoute\",[\"navigate\"],{snapshot: {url : \"Test\"}});\n    store = jasmine.createSpyObj(\"Store\",[\"select\"]);\n\n    await TestBed.configureTestingModule({\n      imports: [Navbar, MatToolbarModule, MatIconModule, MatButtonModule,MatMenuModule],\n      providers : [\n        {provide: UserService, useValue : userService},\n        {provide: Store, useValue : store},\n        {provide: Router, useValue : router},\n        {provide: ActivatedRoute, useValue : route},\n      ]\n    })\n    .compileComponents();\n\n    store.select.and.returnValue(of(user));\n    userService.getCurrentUserDetails.and.returnValue(of(user));\n    fixture = TestBed.createComponent(Navbar);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n  it('should get current user data', () => {\n    expect(component.currentUser).toBe(user);\n  });\n  it('should navigate', () => {\n    component.navigate(\"\");\n    expect(router.navigateByUrl).toHaveBeenCalledOnceWith(\"\");\n  });\n  it('should logout', () => {\n    component.logout();\n    expect(userService.logout).toHaveBeenCalled();\n  });\n  it('should display', () => {\n    expect(fixture.nativeElement.textContent).toContain(\"Document Sharing System\");\n  });\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,aAAS,UAAU,MAAK;AACtB,UAAI;AACJ,UAAI;AAEJ,UAAI;AACJ,UAAI;AACJ,UAAI;AACJ,UAAI;AAEJ,UAAI,OAAO,IAAI,UAAU,GAAG;AAE5B,iBAAW,MAAW;AACpB,sBAAc,QAAQ,aAAa,eAAc,CAAC,yBAAwB,QAAQ,CAAC;AACnF,iBAAS,QAAQ,aAAa,UAAS,CAAC,iBAAgB,UAAU,CAAC;AACnE,gBAAQ,QAAQ,aAAa,iBAAgB,CAAC,UAAU,GAAE,EAAC,UAAU,EAAC,KAAM,OAAM,EAAC,CAAC;AACpF,gBAAQ,QAAQ,aAAa,SAAQ,CAAC,QAAQ,CAAC;AAE/C,cAAM,QAAQ,uBAAuB;UACnC,SAAS,CAAC,QAAQ,kBAAkB,eAAe,iBAAgB,aAAa;UAChF,WAAY;YACV,EAAC,SAAS,aAAa,UAAW,YAAW;YAC7C,EAAC,SAAS,OAAO,UAAW,MAAK;YACjC,EAAC,SAAS,QAAQ,UAAW,OAAM;YACnC,EAAC,SAAS,gBAAgB,UAAW,MAAK;;SAE7C,EACA,kBAAiB;AAElB,cAAM,OAAO,IAAI,YAAY,GAAG,IAAI,CAAC;AACrC,oBAAY,sBAAsB,IAAI,YAAY,GAAG,IAAI,CAAC;AAC1D,kBAAU,QAAQ,gBAAgB,MAAM;AACxC,oBAAY,QAAQ;AACpB,gBAAQ,cAAa;MACvB,EAAC;AAED,SAAG,iBAAiB,MAAK;AACvB,eAAO,SAAS,EAAE,WAAU;MAC9B,CAAC;AACD,SAAG,gCAAgC,MAAK;AACtC,eAAO,UAAU,WAAW,EAAE,KAAK,IAAI;MACzC,CAAC;AACD,SAAG,mBAAmB,MAAK;AACzB,kBAAU,SAAS,EAAE;AACrB,eAAO,OAAO,aAAa,EAAE,yBAAyB,EAAE;MAC1D,CAAC;AACD,SAAG,iBAAiB,MAAK;AACvB,kBAAU,OAAM;AAChB,eAAO,YAAY,MAAM,EAAE,iBAAgB;MAC7C,CAAC;AACD,SAAG,kBAAkB,MAAK;AACxB,eAAO,QAAQ,cAAc,WAAW,EAAE,UAAU,yBAAyB;MAC/E,CAAC;IACH,CAAC;;;",
  "names": []
}
