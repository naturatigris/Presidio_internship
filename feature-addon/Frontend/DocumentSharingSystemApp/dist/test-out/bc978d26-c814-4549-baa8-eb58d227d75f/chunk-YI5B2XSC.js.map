{
  "version": 3,
  "sources": ["src/app/services/team.service.ts"],
  "sourcesContent": ["import { inject, Injectable } from \"@angular/core\";\nimport { UserModel } from \"../models/user.model\";\nimport { environment } from \"../../environments/environment\";\nimport { Observable } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable()\nexport class TeamService{\n    private http = inject(HttpClient);\n\n    getAllTeams(user : UserModel) : Observable<any>{\n        return this.http.get(environment.serverUrl+'/teams',{\n                    headers :{\n                        Authorization: `Bearer ${user.accessToken}`\n                    }\n        })\n    }\n    getByFilter(searchQuery : string, user : UserModel) : Observable<any>{\n        return this.http.get(environment.serverUrl+`/teams/filter?searchQuery=${searchQuery}`,{\n                    headers :{\n                        Authorization: `Bearer ${user.accessToken}`\n                    }\n        })\n    }\n    addTeam(name : string,user : UserModel) : Observable<any>{\n        return this.http.post(environment.serverUrl+`/teams?name=${name}`,null,{\n                    headers :{\n                        Authorization: `Bearer ${user.accessToken}`\n                    }\n        })\n    }\n    updateTeam(id: number,name : string,user : UserModel) : Observable<any>{\n        return this.http.put(environment.serverUrl+`/teams/${id}?name=${name}`,null,{\n                    headers :{\n                        Authorization: `Bearer ${user.accessToken}`\n                    }\n        })\n    }\n    deleteTeam(id: number,user : UserModel) : Observable<any>{\n        return this.http.delete(environment.serverUrl+`/teams/${id}`,{\n                    headers :{\n                        Authorization: `Bearer ${user.accessToken}`\n                    }\n        })\n    }\n    restoreTeam(id: number,user : UserModel) : Observable<any>{\n        return this.http.post(environment.serverUrl+`/teams/restore/${id}`,null,{\n                    headers :{\n                        Authorization: `Bearer ${user.accessToken}`\n                    }\n        })\n    }\n\n\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;IAOa;;;;;AAPb;AAEA;AAEA;AAGO,IAAM,cAAN,MAAMA,aAAW;MACZ,OAAO,OAAO,UAAU;MAEhC,YAAY,MAAgB;AACxB,eAAO,KAAK,KAAK,IAAI,YAAY,YAAU,UAAS;UACxC,SAAS;YACL,eAAe,UAAU,KAAK,WAAW;;SAExD;MACL;MACA,YAAY,aAAsB,MAAgB;AAC9C,eAAO,KAAK,KAAK,IAAI,YAAY,YAAU,6BAA6B,WAAW,IAAG;UAC1E,SAAS;YACL,eAAe,UAAU,KAAK,WAAW;;SAExD;MACL;MACA,QAAQ,MAAc,MAAgB;AAClC,eAAO,KAAK,KAAK,KAAK,YAAY,YAAU,eAAe,IAAI,IAAG,MAAK;UAC3D,SAAS;YACL,eAAe,UAAU,KAAK,WAAW;;SAExD;MACL;MACA,WAAW,IAAW,MAAc,MAAgB;AAChD,eAAO,KAAK,KAAK,IAAI,YAAY,YAAU,UAAU,EAAE,SAAS,IAAI,IAAG,MAAK;UAChE,SAAS;YACL,eAAe,UAAU,KAAK,WAAW;;SAExD;MACL;MACA,WAAW,IAAW,MAAgB;AAClC,eAAO,KAAK,KAAK,OAAO,YAAY,YAAU,UAAU,EAAE,IAAG;UACjD,SAAS;YACL,eAAe,UAAU,KAAK,WAAW;;SAExD;MACL;MACA,YAAY,IAAW,MAAgB;AACnC,eAAO,KAAK,KAAK,KAAK,YAAY,YAAU,kBAAkB,EAAE,IAAG,MAAK;UAC5D,SAAS;YACL,eAAe,UAAU,KAAK,WAAW;;SAExD;MACL;;AA5CS,kBAAW,WAAA;MADvB,WAAU;OACE,WAAW;;;",
  "names": ["TeamService"]
}
