{
  "version": 3,
  "sources": ["src/app/services/inactive.alert.ts"],
  "sourcesContent": ["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { environment } from \"../../environments/environment\";\nimport { UserModel } from '../models/user.model';\n\nexport interface InactivityAlert {\n  id: string;\n  userId: string;\n  user:UserModel;\n  alertedAt: string;\n  daysInactive: number;\n  isDismissed: boolean;\n  isArchived: boolean;\n  dismissedAt?: string;\n  dismissedByUserId?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n  public alertsSubject = new BehaviorSubject<InactivityAlert[]>([]);\n  public alerts$ = this.alertsSubject.asObservable();\n\n  private baseUrl = `${environment.serverUrl}/InactivityAlert`;\n\n  constructor(private http: HttpClient) {}\n\n  getActiveAlerts(user:UserModel,userId: string): void {\n    this.http.get<InactivityAlert[]>(`${this.baseUrl}/active/user/${userId}`,{ headers : {\n                    Authorization : `Bearer ${user.accessToken}`\n                }})\n      .subscribe(alerts => {\n        this.alertsSubject.next(alerts);\n      });\n  }\n\n  dismissAlert(user:UserModel,alertId: string, dismissedBy: string): Observable<any> {\n    const params = new HttpParams().set('dismissedBy', dismissedBy);\n\n    return this.http.post(`${this.baseUrl}/dismiss/${alertId}`, {}, { headers : {\n                    Authorization : `Bearer ${user.accessToken}`\n                },params });\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;IAqBa;;;;;AArBb;AACA;AACA;AACA;AAkBO,IAAM,eAAN,MAAMA,cAAY;MAMH;MALb,gBAAgB,IAAI,gBAAmC,CAAA,CAAE;MACzD,UAAU,KAAK,cAAc,aAAY;MAExC,UAAU,GAAG,YAAY,SAAS;MAE1C,YAAoB,MAAgB;AAAhB,aAAA,OAAA;MAAmB;MAEvC,gBAAgB,MAAe,QAAc;AAC3C,aAAK,KAAK,IAAuB,GAAG,KAAK,OAAO,gBAAgB,MAAM,IAAG,EAAE,SAAU;UACrE,eAAgB,UAAU,KAAK,WAAW;UAC7C,CAAC,EACX,UAAU,YAAS;AAClB,eAAK,cAAc,KAAK,MAAM;QAChC,CAAC;MACL;MAEA,aAAa,MAAe,SAAiB,aAAmB;AAC9D,cAAM,SAAS,IAAI,WAAU,EAAG,IAAI,eAAe,WAAW;AAE9D,eAAO,KAAK,KAAK,KAAK,GAAG,KAAK,OAAO,YAAY,OAAO,IAAI,CAAA,GAAI,EAAE,SAAU;UAC5D,eAAgB,UAAU,KAAK,WAAW;WAC5C,OAAM,CAAE;MACxB;;;;;AAvBW,mBAAY,WAAA;MAHxB,WAAW;QACV,YAAY;OACb;OACY,YAAY;;;",
  "names": ["AlertService"]
}
