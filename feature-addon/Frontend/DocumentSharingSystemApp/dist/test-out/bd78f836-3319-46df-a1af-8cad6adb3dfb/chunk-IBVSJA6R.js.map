{
  "version": 3,
  "sources": ["angular:jit:template:src/app/requestdetail/requestdetail.html", "angular:jit:style:src/app/requestdetail/requestdetail.css", "src/app/requestdetail/requestdetail.ts"],
  "sourcesContent": ["<div class=\"overlay\">\n  <div class=\"request-detail-modal\">\n    <button class=\"close-btn\" (click)=\"onClose()\">\u2715</button>\n\n    <h2>Restore Request Details</h2>\n\n    <ng-container *ngIf=\"request; else loading\">\n      <p><strong>Requested By:</strong> {{ request.requestedByUserName }}</p>\n      <p><strong>Reason:</strong> {{ request.reason }}</p>\n      <p><strong>Status:</strong> {{ request.status }}</p>\n      <p><strong>Requested At:</strong> {{ request.requestedAt | date:'medium' }}</p>\n      <p *ngIf=\"request.reviewedAt\"><strong>Reviewed At:</strong> {{ request.reviewedAt | date:'medium' }}</p>\n      <p *ngIf=\"request.reviewedByUserName\"><strong>Reviewed By:</strong> {{ request.reviewedByUserName }}</p>\n    </ng-container>\n\n    <ng-template #loading>\n      <p>Loading request details...</p>\n    </ng-template>\n  </div>\n</div>\n", "/* src/app/requestdetail/requestdetail.css */\n.overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n}\n.request-detail-modal {\n  background: white;\n  padding: 20px;\n  width: 400px;\n  border-radius: 10px;\n  position: relative;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);\n}\n.close-btn {\n  position: absolute;\n  top: 10px;\n  right: 15px;\n  background: transparent;\n  border: none;\n  font-size: 18px;\n  cursor: pointer;\n}\n/*# sourceMappingURL=requestdetail.css.map */\n", "import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { DocumentRestoreService } from '../services/documentrestore.service';\nimport { DocumentRequestModal } from '../document-request-modal/document-request-modal';\nimport { DocumentRestoreRequestModel } from '../models/document.request.model';\nimport { UserModel } from '../models/user.model';\nimport { UserService } from '../services/user.service';\nimport { Store } from '@ngxs/store';\nimport { CurrentUserState } from '../current-user/current-user.state';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule ,ReactiveFormsModule} from '@angular/forms';\n\n\n\n@Component({\n  selector: 'app-requestdetail',\n  imports: [CommonModule,FormsModule,ReactiveFormsModule],\n  templateUrl: './requestdetail.html',\n  styleUrl: './requestdetail.css'\n})\nexport class Requestdetail {\n   @Input() documentId: string = '';\n  @Output() close = new EventEmitter<void>();\n\n  currentUser: UserModel | null = null;\n  request: DocumentRestoreRequestModel | null = null;\n\n  constructor(\n    private documentRestoreService: DocumentRestoreService,\n    private userService: UserService,\n    private store: Store\n  ) {}\n\n  ngOnInit(): void {\n    this.store.select(CurrentUserState.getUser).subscribe(user => {\n      this.currentUser = user;\n\n      if (!this.currentUser) {\n        this.userService.getCurrentUserDetails().subscribe({\n          next: (data: UserModel | null) => {\n            this.currentUser = data;\n            if (!this.currentUser) {\n              console.log(\"User not logged in.\");\n              return;\n            }\n            this.loadRequest();\n          }\n        });\n      } else {\n        this.loadRequest();\n      }\n    });\n  }\n\n  loadRequest(): void {\n    if (!this.documentId || !this.currentUser) return;\n\n    this.documentRestoreService.getRequestByDocumentId(this.documentId, this.currentUser).subscribe({\n      next: (data: DocumentRestoreRequestModel | null) => {\n        console.log(\"documentstatus\",data);\n        this.request = data;\n      },\n      error: (err) => {\n        console.error('Failed to fetch document restore request:', err);\n      }\n    });\n  }\n\n  onClose(): void {\n    this.close.emit();\n  }}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAAAA;AAAA,IAAAC,sBAAA;AAAA;AAAA,IAAAD,yBAAA;AAAA;AAAA;;;ICmBa;;;;;;;AAnBb;AACA;AAIA;AACA;AACA;AACA;AACA;AAUO,IAAM,gBAAN,MAAME,eAAa;MAQd;MACA;MACA;MATA,aAAqB;MACrB,QAAQ,IAAI,aAAY;MAElC,cAAgC;MAChC,UAA8C;MAE9C,YACU,wBACA,aACA,OAAY;AAFZ,aAAA,yBAAA;AACA,aAAA,cAAA;AACA,aAAA,QAAA;MACP;MAEH,WAAQ;AACN,aAAK,MAAM,OAAO,iBAAiB,OAAO,EAAE,UAAU,UAAO;AAC3D,eAAK,cAAc;AAEnB,cAAI,CAAC,KAAK,aAAa;AACrB,iBAAK,YAAY,sBAAqB,EAAG,UAAU;cACjD,MAAM,CAAC,SAA0B;AAC/B,qBAAK,cAAc;AACnB,oBAAI,CAAC,KAAK,aAAa;AACrB,0BAAQ,IAAI,qBAAqB;AACjC;gBACF;AACA,qBAAK,YAAW;cAClB;aACD;UACH,OAAO;AACL,iBAAK,YAAW;UAClB;QACF,CAAC;MACH;MAEA,cAAW;AACT,YAAI,CAAC,KAAK,cAAc,CAAC,KAAK;AAAa;AAE3C,aAAK,uBAAuB,uBAAuB,KAAK,YAAY,KAAK,WAAW,EAAE,UAAU;UAC9F,MAAM,CAAC,SAA4C;AACjD,oBAAQ,IAAI,kBAAiB,IAAI;AACjC,iBAAK,UAAU;UACjB;UACA,OAAO,CAAC,QAAO;AACb,oBAAQ,MAAM,6CAA6C,GAAG;UAChE;SACD;MACH;MAEA,UAAO;AACL,aAAK,MAAM,KAAI;MACjB;;;;;;;6BAjDE,MAAK,CAAA;wBACN,OAAM,CAAA;;;AAFI,oBAAa,WAAA;MANzB,UAAU;QACT,UAAU;QACV,SAAS,CAAC,cAAa,aAAY,mBAAmB;QACtD,UAAA;;OAED;OACY,aAAa;;;",
  "names": ["requestdetail_default", "init_requestdetail", "Requestdetail"]
}
