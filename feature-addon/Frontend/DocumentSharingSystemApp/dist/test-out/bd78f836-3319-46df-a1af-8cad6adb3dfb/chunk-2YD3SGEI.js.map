{"version":3,"sources":["node_modules/@angular/material/fesm2022/module-CWxMD37a.mjs","node_modules/@angular/material/fesm2022/paginator.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, inject, Injector, ElementRef, NgZone, ViewContainerRef, afterNextRender, DOCUMENT, Directive, Input, ChangeDetectorRef, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport { AriaDescriber, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { createRepositionScrollStrategy, ScrollDispatcher, createFlexibleConnectedPositionStrategy, createOverlayRef, OverlayModule } from '@angular/cdk/overlay';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { NgClass } from '@angular/common';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { Subject } from 'rxjs';\nimport { _ as _animationsDisabled } from './animation-DfMFjxHu.mjs';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\n\n/** Time in ms to throttle repositioning after scroll events. */\nconst SCROLL_THROTTLE_MS = 20;\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * @docs-private\n */\nfunction getMatTooltipInvalidPositionError(position) {\n    return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n/** Injection token that determines the scroll handling while a tooltip is visible. */\nconst MAT_TOOLTIP_SCROLL_STRATEGY = new InjectionToken('mat-tooltip-scroll-strategy', {\n    providedIn: 'root',\n    factory: () => {\n        const injector = inject(Injector);\n        return () => createRepositionScrollStrategy(injector, { scrollThrottle: SCROLL_THROTTLE_MS });\n    },\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(_overlay) {\n    const injector = inject(Injector);\n    return () => createRepositionScrollStrategy(injector, { scrollThrottle: SCROLL_THROTTLE_MS });\n}\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n    deps: [],\n    useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        showDelay: 0,\n        hideDelay: 0,\n        touchendHideDelay: 1500,\n    };\n}\n/** Injection token to be used to override the default options for `matTooltip`. */\nconst MAT_TOOLTIP_DEFAULT_OPTIONS = new InjectionToken('mat-tooltip-default-options', {\n    providedIn: 'root',\n    factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * CSS class that will be attached to the overlay panel.\n * @deprecated\n * @breaking-change 13.0.0 remove this variable\n */\nconst TOOLTIP_PANEL_CLASS = 'mat-mdc-tooltip-panel';\nconst PANEL_CLASS = 'tooltip-panel';\n/** Options used to bind passive event listeners. */\nconst passiveListenerOptions = normalizePassiveListenerOptions({ passive: true });\n// These constants were taken from MDC's `numbers` object. We can't import them from MDC,\n// because they have some top-level references to `window` which break during SSR.\nconst MIN_VIEWPORT_TOOLTIP_THRESHOLD = 8;\nconst UNBOUNDED_ANCHOR_GAP = 8;\nconst MIN_HEIGHT = 24;\nconst MAX_WIDTH = 200;\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\nclass MatTooltip {\n    _elementRef = inject(ElementRef);\n    _ngZone = inject(NgZone);\n    _platform = inject(Platform);\n    _ariaDescriber = inject(AriaDescriber);\n    _focusMonitor = inject(FocusMonitor);\n    _dir = inject(Directionality);\n    _injector = inject(Injector);\n    _viewContainerRef = inject(ViewContainerRef);\n    _animationsDisabled = _animationsDisabled();\n    _defaultOptions = inject(MAT_TOOLTIP_DEFAULT_OPTIONS, {\n        optional: true,\n    });\n    _overlayRef;\n    _tooltipInstance;\n    _overlayPanelClass; // Used for styling internally.\n    _portal;\n    _position = 'below';\n    _positionAtOrigin = false;\n    _disabled = false;\n    _tooltipClass;\n    _viewInitialized = false;\n    _pointerExitEventsInitialized = false;\n    _tooltipComponent = TooltipComponent;\n    _viewportMargin = 8;\n    _currentPosition;\n    _cssClassPrefix = 'mat-mdc';\n    _ariaDescriptionPending;\n    _dirSubscribed = false;\n    /** Allows the user to define the position of the tooltip relative to the parent element */\n    get position() {\n        return this._position;\n    }\n    set position(value) {\n        if (value !== this._position) {\n            this._position = value;\n            if (this._overlayRef) {\n                this._updatePosition(this._overlayRef);\n                this._tooltipInstance?.show(0);\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    /**\n     * Whether tooltip should be relative to the click or touch origin\n     * instead of outside the element bounding box.\n     */\n    get positionAtOrigin() {\n        return this._positionAtOrigin;\n    }\n    set positionAtOrigin(value) {\n        this._positionAtOrigin = coerceBooleanProperty(value);\n        this._detach();\n        this._overlayRef = null;\n    }\n    /** Disables the display of the tooltip. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        const isDisabled = coerceBooleanProperty(value);\n        if (this._disabled !== isDisabled) {\n            this._disabled = isDisabled;\n            // If tooltip is disabled, hide immediately.\n            if (isDisabled) {\n                this.hide(0);\n            }\n            else {\n                this._setupPointerEnterEventsIfNeeded();\n            }\n            this._syncAriaDescription(this.message);\n        }\n    }\n    /** The default delay in ms before showing the tooltip after show is called */\n    get showDelay() {\n        return this._showDelay;\n    }\n    set showDelay(value) {\n        this._showDelay = coerceNumberProperty(value);\n    }\n    _showDelay;\n    /** The default delay in ms before hiding the tooltip after hide is called */\n    get hideDelay() {\n        return this._hideDelay;\n    }\n    set hideDelay(value) {\n        this._hideDelay = coerceNumberProperty(value);\n        if (this._tooltipInstance) {\n            this._tooltipInstance._mouseLeaveHideDelay = this._hideDelay;\n        }\n    }\n    _hideDelay;\n    /**\n     * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n     * uses a long press gesture to show and hide, however it can conflict with the native browser\n     * gestures. To work around the conflict, Angular Material disables native gestures on the\n     * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n     * elements). The different values for this option configure the touch event handling as follows:\n     * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n     *   browser gestures on particular elements. In particular, it allows text selection on inputs\n     *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n     * - `on` - Enables touch gestures for all elements and disables native\n     *   browser gestures with no exceptions.\n     * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n     *   showing on touch devices.\n     */\n    touchGestures = 'auto';\n    /** The message to be displayed in the tooltip */\n    get message() {\n        return this._message;\n    }\n    set message(value) {\n        const oldMessage = this._message;\n        // If the message is not a string (e.g. number), convert it to a string and trim it.\n        // Must convert with `String(value)`, not `${value}`, otherwise Closure Compiler optimises\n        // away the string-conversion: https://github.com/angular/components/issues/20684\n        this._message = value != null ? String(value).trim() : '';\n        if (!this._message && this._isTooltipVisible()) {\n            this.hide(0);\n        }\n        else {\n            this._setupPointerEnterEventsIfNeeded();\n            this._updateTooltipMessage();\n        }\n        this._syncAriaDescription(oldMessage);\n    }\n    _message = '';\n    /** Classes to be passed to the tooltip. Supports the same syntax as `ngClass`. */\n    get tooltipClass() {\n        return this._tooltipClass;\n    }\n    set tooltipClass(value) {\n        this._tooltipClass = value;\n        if (this._tooltipInstance) {\n            this._setTooltipClass(this._tooltipClass);\n        }\n    }\n    /** Manually-bound passive event listeners. */\n    _passiveListeners = [];\n    /** Timer started at the last `touchstart` event. */\n    _touchstartTimeout = null;\n    /** Emits when the component is destroyed. */\n    _destroyed = new Subject();\n    /** Whether ngOnDestroyed has been called. */\n    _isDestroyed = false;\n    constructor() {\n        const defaultOptions = this._defaultOptions;\n        if (defaultOptions) {\n            this._showDelay = defaultOptions.showDelay;\n            this._hideDelay = defaultOptions.hideDelay;\n            if (defaultOptions.position) {\n                this.position = defaultOptions.position;\n            }\n            if (defaultOptions.positionAtOrigin) {\n                this.positionAtOrigin = defaultOptions.positionAtOrigin;\n            }\n            if (defaultOptions.touchGestures) {\n                this.touchGestures = defaultOptions.touchGestures;\n            }\n            if (defaultOptions.tooltipClass) {\n                this.tooltipClass = defaultOptions.tooltipClass;\n            }\n        }\n        this._viewportMargin = MIN_VIEWPORT_TOOLTIP_THRESHOLD;\n    }\n    ngAfterViewInit() {\n        // This needs to happen after view init so the initial values for all inputs have been set.\n        this._viewInitialized = true;\n        this._setupPointerEnterEventsIfNeeded();\n        this._focusMonitor\n            .monitor(this._elementRef)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(origin => {\n            // Note that the focus monitor runs outside the Angular zone.\n            if (!origin) {\n                this._ngZone.run(() => this.hide(0));\n            }\n            else if (origin === 'keyboard') {\n                this._ngZone.run(() => this.show());\n            }\n        });\n    }\n    /**\n     * Dispose the tooltip when destroyed.\n     */\n    ngOnDestroy() {\n        const nativeElement = this._elementRef.nativeElement;\n        // Optimization: Do not call clearTimeout unless there is an active timer.\n        if (this._touchstartTimeout) {\n            clearTimeout(this._touchstartTimeout);\n        }\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._tooltipInstance = null;\n        }\n        // Clean up the event listeners set in the constructor\n        this._passiveListeners.forEach(([event, listener]) => {\n            nativeElement.removeEventListener(event, listener, passiveListenerOptions);\n        });\n        this._passiveListeners.length = 0;\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._isDestroyed = true;\n        this._ariaDescriber.removeDescription(nativeElement, this.message, 'tooltip');\n        this._focusMonitor.stopMonitoring(nativeElement);\n    }\n    /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n    show(delay = this.showDelay, origin) {\n        if (this.disabled || !this.message || this._isTooltipVisible()) {\n            this._tooltipInstance?._cancelPendingAnimations();\n            return;\n        }\n        const overlayRef = this._createOverlay(origin);\n        this._detach();\n        this._portal =\n            this._portal || new ComponentPortal(this._tooltipComponent, this._viewContainerRef);\n        const instance = (this._tooltipInstance = overlayRef.attach(this._portal).instance);\n        instance._triggerElement = this._elementRef.nativeElement;\n        instance._mouseLeaveHideDelay = this._hideDelay;\n        instance\n            .afterHidden()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        this._setTooltipClass(this._tooltipClass);\n        this._updateTooltipMessage();\n        instance.show(delay);\n    }\n    /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n    hide(delay = this.hideDelay) {\n        const instance = this._tooltipInstance;\n        if (instance) {\n            if (instance.isVisible()) {\n                instance.hide(delay);\n            }\n            else {\n                instance._cancelPendingAnimations();\n                this._detach();\n            }\n        }\n    }\n    /** Shows/hides the tooltip */\n    toggle(origin) {\n        this._isTooltipVisible() ? this.hide() : this.show(undefined, origin);\n    }\n    /** Returns true if the tooltip is currently visible to the user */\n    _isTooltipVisible() {\n        return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n    }\n    /** Create the overlay config and position strategy */\n    _createOverlay(origin) {\n        if (this._overlayRef) {\n            const existingStrategy = this._overlayRef.getConfig()\n                .positionStrategy;\n            if ((!this.positionAtOrigin || !origin) && existingStrategy._origin instanceof ElementRef) {\n                return this._overlayRef;\n            }\n            this._detach();\n        }\n        const scrollableAncestors = this._injector\n            .get(ScrollDispatcher)\n            .getAncestorScrollContainers(this._elementRef);\n        const panelClass = `${this._cssClassPrefix}-${PANEL_CLASS}`;\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = createFlexibleConnectedPositionStrategy(this._injector, this.positionAtOrigin ? origin || this._elementRef : this._elementRef)\n            .withTransformOriginOn(`.${this._cssClassPrefix}-tooltip`)\n            .withFlexibleDimensions(false)\n            .withViewportMargin(this._viewportMargin)\n            .withScrollableContainers(scrollableAncestors);\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\n            this._updateCurrentPositionClass(change.connectionPair);\n            if (this._tooltipInstance) {\n                if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run(() => this.hide(0));\n                }\n            }\n        });\n        this._overlayRef = createOverlayRef(this._injector, {\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: this._overlayPanelClass ? [...this._overlayPanelClass, panelClass] : panelClass,\n            scrollStrategy: this._injector.get(MAT_TOOLTIP_SCROLL_STRATEGY)(),\n            disableAnimations: this._animationsDisabled,\n        });\n        this._updatePosition(this._overlayRef);\n        this._overlayRef\n            .detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        this._overlayRef\n            .outsidePointerEvents()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._tooltipInstance?._handleBodyInteraction());\n        this._overlayRef\n            .keydownEvents()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(event => {\n            if (this._isTooltipVisible() && event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                this._ngZone.run(() => this.hide(0));\n            }\n        });\n        if (this._defaultOptions?.disableTooltipInteractivity) {\n            this._overlayRef.addPanelClass(`${this._cssClassPrefix}-tooltip-panel-non-interactive`);\n        }\n        if (!this._dirSubscribed) {\n            this._dirSubscribed = true;\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (this._overlayRef) {\n                    this._updatePosition(this._overlayRef);\n                }\n            });\n        }\n        return this._overlayRef;\n    }\n    /** Detaches the currently-attached tooltip. */\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n        this._tooltipInstance = null;\n    }\n    /** Updates the position of the current tooltip. */\n    _updatePosition(overlayRef) {\n        const position = overlayRef.getConfig().positionStrategy;\n        const origin = this._getOrigin();\n        const overlay = this._getOverlayPosition();\n        position.withPositions([\n            this._addOffset({ ...origin.main, ...overlay.main }),\n            this._addOffset({ ...origin.fallback, ...overlay.fallback }),\n        ]);\n    }\n    /** Adds the configured offset to a position. Used as a hook for child classes. */\n    _addOffset(position) {\n        const offset = UNBOUNDED_ANCHOR_GAP;\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        if (position.originY === 'top') {\n            position.offsetY = -offset;\n        }\n        else if (position.originY === 'bottom') {\n            position.offsetY = offset;\n        }\n        else if (position.originX === 'start') {\n            position.offsetX = isLtr ? -offset : offset;\n        }\n        else if (position.originX === 'end') {\n            position.offsetX = isLtr ? offset : -offset;\n        }\n        return position;\n    }\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    _getOrigin() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let originPosition;\n        if (position == 'above' || position == 'below') {\n            originPosition = { originX: 'center', originY: position == 'above' ? 'top' : 'bottom' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            originPosition = { originX: 'start', originY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            originPosition = { originX: 'end', originY: 'center' };\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(originPosition.originX, originPosition.originY);\n        return {\n            main: originPosition,\n            fallback: { originX: x, originY: y },\n        };\n    }\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    _getOverlayPosition() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let overlayPosition;\n        if (position == 'above') {\n            overlayPosition = { overlayX: 'center', overlayY: 'bottom' };\n        }\n        else if (position == 'below') {\n            overlayPosition = { overlayX: 'center', overlayY: 'top' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            overlayPosition = { overlayX: 'end', overlayY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            overlayPosition = { overlayX: 'start', overlayY: 'center' };\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n        return {\n            main: overlayPosition,\n            fallback: { overlayX: x, overlayY: y },\n        };\n    }\n    /** Updates the tooltip message and repositions the overlay according to the new message length */\n    _updateTooltipMessage() {\n        // Must wait for the message to be painted to the tooltip so that the overlay can properly\n        // calculate the correct positioning based on the size of the text.\n        if (this._tooltipInstance) {\n            this._tooltipInstance.message = this.message;\n            this._tooltipInstance._markForCheck();\n            afterNextRender(() => {\n                if (this._tooltipInstance) {\n                    this._overlayRef.updatePosition();\n                }\n            }, {\n                injector: this._injector,\n            });\n        }\n    }\n    /** Updates the tooltip class */\n    _setTooltipClass(tooltipClass) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.tooltipClass = tooltipClass;\n            this._tooltipInstance._markForCheck();\n        }\n    }\n    /** Inverts an overlay position. */\n    _invertPosition(x, y) {\n        if (this.position === 'above' || this.position === 'below') {\n            if (y === 'top') {\n                y = 'bottom';\n            }\n            else if (y === 'bottom') {\n                y = 'top';\n            }\n        }\n        else {\n            if (x === 'end') {\n                x = 'start';\n            }\n            else if (x === 'start') {\n                x = 'end';\n            }\n        }\n        return { x, y };\n    }\n    /** Updates the class on the overlay panel based on the current position of the tooltip. */\n    _updateCurrentPositionClass(connectionPair) {\n        const { overlayY, originX, originY } = connectionPair;\n        let newPosition;\n        // If the overlay is in the middle along the Y axis,\n        // it means that it's either before or after.\n        if (overlayY === 'center') {\n            // Note that since this information is used for styling, we want to\n            // resolve `start` and `end` to their real values, otherwise consumers\n            // would have to remember to do it themselves on each consumption.\n            if (this._dir && this._dir.value === 'rtl') {\n                newPosition = originX === 'end' ? 'left' : 'right';\n            }\n            else {\n                newPosition = originX === 'start' ? 'left' : 'right';\n            }\n        }\n        else {\n            newPosition = overlayY === 'bottom' && originY === 'top' ? 'above' : 'below';\n        }\n        if (newPosition !== this._currentPosition) {\n            const overlayRef = this._overlayRef;\n            if (overlayRef) {\n                const classPrefix = `${this._cssClassPrefix}-${PANEL_CLASS}-`;\n                overlayRef.removePanelClass(classPrefix + this._currentPosition);\n                overlayRef.addPanelClass(classPrefix + newPosition);\n            }\n            this._currentPosition = newPosition;\n        }\n    }\n    /** Binds the pointer events to the tooltip trigger. */\n    _setupPointerEnterEventsIfNeeded() {\n        // Optimization: Defer hooking up events if there's no message or the tooltip is disabled.\n        if (this._disabled ||\n            !this.message ||\n            !this._viewInitialized ||\n            this._passiveListeners.length) {\n            return;\n        }\n        // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n        // first tap from firing its click event or can cause the tooltip to open for clicks.\n        if (this._platformSupportsMouseEvents()) {\n            this._passiveListeners.push([\n                'mouseenter',\n                event => {\n                    this._setupPointerExitEventsIfNeeded();\n                    let point = undefined;\n                    if (event.x !== undefined && event.y !== undefined) {\n                        point = event;\n                    }\n                    this.show(undefined, point);\n                },\n            ]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            this._passiveListeners.push([\n                'touchstart',\n                event => {\n                    const touch = event.targetTouches?.[0];\n                    const origin = touch ? { x: touch.clientX, y: touch.clientY } : undefined;\n                    // Note that it's important that we don't `preventDefault` here,\n                    // because it can prevent click events from firing on the element.\n                    this._setupPointerExitEventsIfNeeded();\n                    if (this._touchstartTimeout) {\n                        clearTimeout(this._touchstartTimeout);\n                    }\n                    const DEFAULT_LONGPRESS_DELAY = 500;\n                    this._touchstartTimeout = setTimeout(() => {\n                        this._touchstartTimeout = null;\n                        this.show(undefined, origin);\n                    }, this._defaultOptions?.touchLongPressShowDelay ?? DEFAULT_LONGPRESS_DELAY);\n                },\n            ]);\n        }\n        this._addListeners(this._passiveListeners);\n    }\n    _setupPointerExitEventsIfNeeded() {\n        if (this._pointerExitEventsInitialized) {\n            return;\n        }\n        this._pointerExitEventsInitialized = true;\n        const exitListeners = [];\n        if (this._platformSupportsMouseEvents()) {\n            exitListeners.push([\n                'mouseleave',\n                event => {\n                    const newTarget = event.relatedTarget;\n                    if (!newTarget || !this._overlayRef?.overlayElement.contains(newTarget)) {\n                        this.hide();\n                    }\n                },\n            ], ['wheel', event => this._wheelListener(event)]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            const touchendListener = () => {\n                if (this._touchstartTimeout) {\n                    clearTimeout(this._touchstartTimeout);\n                }\n                this.hide(this._defaultOptions?.touchendHideDelay);\n            };\n            exitListeners.push(['touchend', touchendListener], ['touchcancel', touchendListener]);\n        }\n        this._addListeners(exitListeners);\n        this._passiveListeners.push(...exitListeners);\n    }\n    _addListeners(listeners) {\n        listeners.forEach(([event, listener]) => {\n            this._elementRef.nativeElement.addEventListener(event, listener, passiveListenerOptions);\n        });\n    }\n    _platformSupportsMouseEvents() {\n        return !this._platform.IOS && !this._platform.ANDROID;\n    }\n    /** Listener for the `wheel` event on the element. */\n    _wheelListener(event) {\n        if (this._isTooltipVisible()) {\n            const elementUnderPointer = this._injector\n                .get(DOCUMENT)\n                .elementFromPoint(event.clientX, event.clientY);\n            const element = this._elementRef.nativeElement;\n            // On non-touch devices we depend on the `mouseleave` event to close the tooltip, but it\n            // won't fire if the user scrolls away using the wheel without moving their cursor. We\n            // work around it by finding the element under the user's cursor and closing the tooltip\n            // if it's not the trigger.\n            if (elementUnderPointer !== element && !element.contains(elementUnderPointer)) {\n                this.hide();\n            }\n        }\n    }\n    /** Disables the native browser gestures, based on how the tooltip has been configured. */\n    _disableNativeGesturesIfNecessary() {\n        const gestures = this.touchGestures;\n        if (gestures !== 'off') {\n            const element = this._elementRef.nativeElement;\n            const style = element.style;\n            // If gestures are set to `auto`, we don't disable text selection on inputs and\n            // textareas, because it prevents the user from typing into them on iOS Safari.\n            if (gestures === 'on' || (element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA')) {\n                style.userSelect =\n                    style.msUserSelect =\n                        style.webkitUserSelect =\n                            style.MozUserSelect =\n                                'none';\n            }\n            // If we have `auto` gestures and the element uses native HTML dragging,\n            // we don't set `-webkit-user-drag` because it prevents the native behavior.\n            if (gestures === 'on' || !element.draggable) {\n                style.webkitUserDrag = 'none';\n            }\n            style.touchAction = 'none';\n            style.webkitTapHighlightColor = 'transparent';\n        }\n    }\n    /** Updates the tooltip's ARIA description based on it current state. */\n    _syncAriaDescription(oldMessage) {\n        if (this._ariaDescriptionPending) {\n            return;\n        }\n        this._ariaDescriptionPending = true;\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, oldMessage, 'tooltip');\n        // The `AriaDescriber` has some functionality that avoids adding a description if it's the\n        // same as the `aria-label` of an element, however we can't know whether the tooltip trigger\n        // has a data-bound `aria-label` or when it'll be set for the first time. We can avoid the\n        // issue by deferring the description by a tick so Angular has time to set the `aria-label`.\n        if (!this._isDestroyed) {\n            afterNextRender({\n                write: () => {\n                    this._ariaDescriptionPending = false;\n                    if (this.message && !this.disabled) {\n                        this._ariaDescriber.describe(this._elementRef.nativeElement, this.message, 'tooltip');\n                    }\n                },\n            }, { injector: this._injector });\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatTooltip, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatTooltip, isStandalone: true, selector: \"[matTooltip]\", inputs: { position: [\"matTooltipPosition\", \"position\"], positionAtOrigin: [\"matTooltipPositionAtOrigin\", \"positionAtOrigin\"], disabled: [\"matTooltipDisabled\", \"disabled\"], showDelay: [\"matTooltipShowDelay\", \"showDelay\"], hideDelay: [\"matTooltipHideDelay\", \"hideDelay\"], touchGestures: [\"matTooltipTouchGestures\", \"touchGestures\"], message: [\"matTooltip\", \"message\"], tooltipClass: [\"matTooltipClass\", \"tooltipClass\"] }, host: { properties: { \"class.mat-mdc-tooltip-disabled\": \"disabled\" }, classAttribute: \"mat-mdc-tooltip-trigger\" }, exportAs: [\"matTooltip\"], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatTooltip, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTooltip]',\n                    exportAs: 'matTooltip',\n                    host: {\n                        'class': 'mat-mdc-tooltip-trigger',\n                        '[class.mat-mdc-tooltip-disabled]': 'disabled',\n                    },\n                }]\n        }], ctorParameters: () => [], propDecorators: { position: [{\n                type: Input,\n                args: ['matTooltipPosition']\n            }], positionAtOrigin: [{\n                type: Input,\n                args: ['matTooltipPositionAtOrigin']\n            }], disabled: [{\n                type: Input,\n                args: ['matTooltipDisabled']\n            }], showDelay: [{\n                type: Input,\n                args: ['matTooltipShowDelay']\n            }], hideDelay: [{\n                type: Input,\n                args: ['matTooltipHideDelay']\n            }], touchGestures: [{\n                type: Input,\n                args: ['matTooltipTouchGestures']\n            }], message: [{\n                type: Input,\n                args: ['matTooltip']\n            }], tooltipClass: [{\n                type: Input,\n                args: ['matTooltipClass']\n            }] } });\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\nclass TooltipComponent {\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _elementRef = inject(ElementRef);\n    /* Whether the tooltip text overflows to multiple lines */\n    _isMultiline = false;\n    /** Message to display in the tooltip */\n    message;\n    /** Classes to be added to the tooltip. Supports the same syntax as `ngClass`. */\n    tooltipClass;\n    /** The timeout ID of any current timer set to show the tooltip */\n    _showTimeoutId;\n    /** The timeout ID of any current timer set to hide the tooltip */\n    _hideTimeoutId;\n    /** Element that caused the tooltip to open. */\n    _triggerElement;\n    /** Amount of milliseconds to delay the closing sequence. */\n    _mouseLeaveHideDelay;\n    /** Whether animations are currently disabled. */\n    _animationsDisabled = _animationsDisabled();\n    /** Reference to the internal tooltip element. */\n    _tooltip;\n    /** Whether interactions on the page should close the tooltip */\n    _closeOnInteraction = false;\n    /** Whether the tooltip is currently visible. */\n    _isVisible = false;\n    /** Subject for notifying that the tooltip has been hidden from the view */\n    _onHide = new Subject();\n    /** Name of the show animation and the class that toggles it. */\n    _showAnimation = 'mat-mdc-tooltip-show';\n    /** Name of the hide animation and the class that toggles it. */\n    _hideAnimation = 'mat-mdc-tooltip-hide';\n    constructor() { }\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param delay Amount of milliseconds to the delay showing the tooltip.\n     */\n    show(delay) {\n        // Cancel the delayed hide if it is scheduled\n        if (this._hideTimeoutId != null) {\n            clearTimeout(this._hideTimeoutId);\n        }\n        this._showTimeoutId = setTimeout(() => {\n            this._toggleVisibility(true);\n            this._showTimeoutId = undefined;\n        }, delay);\n    }\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param delay Amount of milliseconds to delay showing the tooltip.\n     */\n    hide(delay) {\n        // Cancel the delayed show if it is scheduled\n        if (this._showTimeoutId != null) {\n            clearTimeout(this._showTimeoutId);\n        }\n        this._hideTimeoutId = setTimeout(() => {\n            this._toggleVisibility(false);\n            this._hideTimeoutId = undefined;\n        }, delay);\n    }\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden() {\n        return this._onHide;\n    }\n    /** Whether the tooltip is being displayed. */\n    isVisible() {\n        return this._isVisible;\n    }\n    ngOnDestroy() {\n        this._cancelPendingAnimations();\n        this._onHide.complete();\n        this._triggerElement = null;\n    }\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.io/design/components/tooltips.html#behavior\n     */\n    _handleBodyInteraction() {\n        if (this._closeOnInteraction) {\n            this.hide(0);\n        }\n    }\n    /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     */\n    _markForCheck() {\n        this._changeDetectorRef.markForCheck();\n    }\n    _handleMouseLeave({ relatedTarget }) {\n        if (!relatedTarget || !this._triggerElement.contains(relatedTarget)) {\n            if (this.isVisible()) {\n                this.hide(this._mouseLeaveHideDelay);\n            }\n            else {\n                this._finalizeAnimation(false);\n            }\n        }\n    }\n    /**\n     * Callback for when the timeout in this.show() gets completed.\n     * This method is only needed by the mdc-tooltip, and so it is only implemented\n     * in the mdc-tooltip, not here.\n     */\n    _onShow() {\n        this._isMultiline = this._isTooltipMultiline();\n        this._markForCheck();\n    }\n    /** Whether the tooltip text has overflown to the next line */\n    _isTooltipMultiline() {\n        const rect = this._elementRef.nativeElement.getBoundingClientRect();\n        return rect.height > MIN_HEIGHT && rect.width >= MAX_WIDTH;\n    }\n    /** Event listener dispatched when an animation on the tooltip finishes. */\n    _handleAnimationEnd({ animationName }) {\n        if (animationName === this._showAnimation || animationName === this._hideAnimation) {\n            this._finalizeAnimation(animationName === this._showAnimation);\n        }\n    }\n    /** Cancels any pending animation sequences. */\n    _cancelPendingAnimations() {\n        if (this._showTimeoutId != null) {\n            clearTimeout(this._showTimeoutId);\n        }\n        if (this._hideTimeoutId != null) {\n            clearTimeout(this._hideTimeoutId);\n        }\n        this._showTimeoutId = this._hideTimeoutId = undefined;\n    }\n    /** Handles the cleanup after an animation has finished. */\n    _finalizeAnimation(toVisible) {\n        if (toVisible) {\n            this._closeOnInteraction = true;\n        }\n        else if (!this.isVisible()) {\n            this._onHide.next();\n        }\n    }\n    /** Toggles the visibility of the tooltip element. */\n    _toggleVisibility(isVisible) {\n        // We set the classes directly here ourselves so that toggling the tooltip state\n        // isn't bound by change detection. This allows us to hide it even if the\n        // view ref has been detached from the CD tree.\n        const tooltip = this._tooltip.nativeElement;\n        const showClass = this._showAnimation;\n        const hideClass = this._hideAnimation;\n        tooltip.classList.remove(isVisible ? hideClass : showClass);\n        tooltip.classList.add(isVisible ? showClass : hideClass);\n        if (this._isVisible !== isVisible) {\n            this._isVisible = isVisible;\n            this._changeDetectorRef.markForCheck();\n        }\n        // It's common for internal apps to disable animations using `* { animation: none !important }`\n        // which can break the opening sequence. Try to detect such cases and work around them.\n        if (isVisible && !this._animationsDisabled && typeof getComputedStyle === 'function') {\n            const styles = getComputedStyle(tooltip);\n            // Use `getPropertyValue` to avoid issues with property renaming.\n            if (styles.getPropertyValue('animation-duration') === '0s' ||\n                styles.getPropertyValue('animation-name') === 'none') {\n                this._animationsDisabled = true;\n            }\n        }\n        if (isVisible) {\n            this._onShow();\n        }\n        if (this._animationsDisabled) {\n            tooltip.classList.add('_mat-animation-noopable');\n            this._finalizeAnimation(isVisible);\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: TooltipComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: TooltipComponent, isStandalone: true, selector: \"mat-tooltip-component\", host: { attributes: { \"aria-hidden\": \"true\" }, listeners: { \"mouseleave\": \"_handleMouseLeave($event)\" } }, viewQueries: [{ propertyName: \"_tooltip\", first: true, predicate: [\"tooltip\"], descendants: true, static: true }], ngImport: i0, template: \"<div\\n  #tooltip\\n  class=\\\"mdc-tooltip mat-mdc-tooltip\\\"\\n  [ngClass]=\\\"tooltipClass\\\"\\n  (animationend)=\\\"_handleAnimationEnd($event)\\\"\\n  [class.mdc-tooltip--multiline]=\\\"_isMultiline\\\">\\n  <div class=\\\"mat-mdc-tooltip-surface mdc-tooltip__surface\\\">{{message}}</div>\\n</div>\\n\", styles: [\".mat-mdc-tooltip{position:relative;transform:scale(0);display:inline-flex}.mat-mdc-tooltip::before{content:\\\"\\\";top:0;right:0;bottom:0;left:0;z-index:-1;position:absolute}.mat-mdc-tooltip-panel-below .mat-mdc-tooltip::before{top:-8px}.mat-mdc-tooltip-panel-above .mat-mdc-tooltip::before{bottom:-8px}.mat-mdc-tooltip-panel-right .mat-mdc-tooltip::before{left:-8px}.mat-mdc-tooltip-panel-left .mat-mdc-tooltip::before{right:-8px}.mat-mdc-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.mat-mdc-tooltip-surface{word-break:normal;overflow-wrap:anywhere;padding:4px 8px;min-width:40px;max-width:200px;min-height:24px;max-height:40vh;box-sizing:border-box;overflow:hidden;text-align:center;will-change:transform,opacity;background-color:var(--mat-tooltip-container-color, var(--mat-sys-inverse-surface));color:var(--mat-tooltip-supporting-text-color, var(--mat-sys-inverse-on-surface));border-radius:var(--mat-tooltip-container-shape, var(--mat-sys-corner-extra-small));font-family:var(--mat-tooltip-supporting-text-font, var(--mat-sys-body-small-font));font-size:var(--mat-tooltip-supporting-text-size, var(--mat-sys-body-small-size));font-weight:var(--mat-tooltip-supporting-text-weight, var(--mat-sys-body-small-weight));line-height:var(--mat-tooltip-supporting-text-line-height, var(--mat-sys-body-small-line-height));letter-spacing:var(--mat-tooltip-supporting-text-tracking, var(--mat-sys-body-small-tracking))}.mat-mdc-tooltip-surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mdc-tooltip--multiline .mat-mdc-tooltip-surface{text-align:left}[dir=rtl] .mdc-tooltip--multiline .mat-mdc-tooltip-surface{text-align:right}.mat-mdc-tooltip-panel{line-height:normal}.mat-mdc-tooltip-panel.mat-mdc-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-mdc-tooltip-show{0%{opacity:0;transform:scale(0.8)}100%{opacity:1;transform:scale(1)}}@keyframes mat-mdc-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(0.8)}}.mat-mdc-tooltip-show{animation:mat-mdc-tooltip-show 150ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-mdc-tooltip-hide{animation:mat-mdc-tooltip-hide 75ms cubic-bezier(0.4, 0, 1, 1) forwards}\\n\"], dependencies: [{ kind: \"directive\", type: NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: TooltipComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tooltip-component', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        '(mouseleave)': '_handleMouseLeave($event)',\n                        'aria-hidden': 'true',\n                    }, imports: [NgClass], template: \"<div\\n  #tooltip\\n  class=\\\"mdc-tooltip mat-mdc-tooltip\\\"\\n  [ngClass]=\\\"tooltipClass\\\"\\n  (animationend)=\\\"_handleAnimationEnd($event)\\\"\\n  [class.mdc-tooltip--multiline]=\\\"_isMultiline\\\">\\n  <div class=\\\"mat-mdc-tooltip-surface mdc-tooltip__surface\\\">{{message}}</div>\\n</div>\\n\", styles: [\".mat-mdc-tooltip{position:relative;transform:scale(0);display:inline-flex}.mat-mdc-tooltip::before{content:\\\"\\\";top:0;right:0;bottom:0;left:0;z-index:-1;position:absolute}.mat-mdc-tooltip-panel-below .mat-mdc-tooltip::before{top:-8px}.mat-mdc-tooltip-panel-above .mat-mdc-tooltip::before{bottom:-8px}.mat-mdc-tooltip-panel-right .mat-mdc-tooltip::before{left:-8px}.mat-mdc-tooltip-panel-left .mat-mdc-tooltip::before{right:-8px}.mat-mdc-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.mat-mdc-tooltip-surface{word-break:normal;overflow-wrap:anywhere;padding:4px 8px;min-width:40px;max-width:200px;min-height:24px;max-height:40vh;box-sizing:border-box;overflow:hidden;text-align:center;will-change:transform,opacity;background-color:var(--mat-tooltip-container-color, var(--mat-sys-inverse-surface));color:var(--mat-tooltip-supporting-text-color, var(--mat-sys-inverse-on-surface));border-radius:var(--mat-tooltip-container-shape, var(--mat-sys-corner-extra-small));font-family:var(--mat-tooltip-supporting-text-font, var(--mat-sys-body-small-font));font-size:var(--mat-tooltip-supporting-text-size, var(--mat-sys-body-small-size));font-weight:var(--mat-tooltip-supporting-text-weight, var(--mat-sys-body-small-weight));line-height:var(--mat-tooltip-supporting-text-line-height, var(--mat-sys-body-small-line-height));letter-spacing:var(--mat-tooltip-supporting-text-tracking, var(--mat-sys-body-small-tracking))}.mat-mdc-tooltip-surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mdc-tooltip--multiline .mat-mdc-tooltip-surface{text-align:left}[dir=rtl] .mdc-tooltip--multiline .mat-mdc-tooltip-surface{text-align:right}.mat-mdc-tooltip-panel{line-height:normal}.mat-mdc-tooltip-panel.mat-mdc-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-mdc-tooltip-show{0%{opacity:0;transform:scale(0.8)}100%{opacity:1;transform:scale(1)}}@keyframes mat-mdc-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(0.8)}}.mat-mdc-tooltip-show{animation:mat-mdc-tooltip-show 150ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-mdc-tooltip-hide{animation:mat-mdc-tooltip-hide 75ms cubic-bezier(0.4, 0, 1, 1) forwards}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { _tooltip: [{\n                type: ViewChild,\n                args: ['tooltip', {\n                        // Use a static query here since we interact directly with\n                        // the DOM which can happen before `ngAfterViewInit`.\n                        static: true,\n                    }]\n            }] } });\n\nclass MatTooltipModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatTooltipModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatTooltipModule, imports: [A11yModule, OverlayModule, MatCommonModule, MatTooltip, TooltipComponent], exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatTooltipModule, providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [A11yModule, OverlayModule, MatCommonModule, MatCommonModule, CdkScrollableModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatTooltipModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [A11yModule, OverlayModule, MatCommonModule, MatTooltip, TooltipComponent],\n                    exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule],\n                    providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\nexport { MAT_TOOLTIP_SCROLL_STRATEGY as M, SCROLL_THROTTLE_MS as S, TOOLTIP_PANEL_CLASS as T, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY as a, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER as b, MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY as c, MAT_TOOLTIP_DEFAULT_OPTIONS as d, MatTooltip as e, TooltipComponent as f, getMatTooltipInvalidPositionError as g, MatTooltipModule as h };\n\n","import * as i0 from '@angular/core';\nimport { Injectable, Optional, SkipSelf, InjectionToken, inject, ChangeDetectorRef, numberAttribute, EventEmitter, booleanAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, NgModule } from '@angular/core';\nimport { Subject, ReplaySubject } from 'rxjs';\nimport { _IdGenerator } from '@angular/cdk/a11y';\nimport { j as MatFormField } from './form-field-C9DZXojn.mjs';\nimport { g as MatSelect, M as MatSelectModule } from './module-BDiw_nWS.mjs';\nimport { e as MatTooltip, h as MatTooltipModule } from './module-CWxMD37a.mjs';\nimport { M as MatOption } from './option-BzhYL_xC.mjs';\nimport { M as MatIconButton } from './icon-button-DxiIc1ex.mjs';\nimport { MatButtonModule } from './button.mjs';\nimport '@angular/cdk/bidi';\nimport '@angular/cdk/coercion';\nimport '@angular/cdk/platform';\nimport '@angular/common';\nimport 'rxjs/operators';\nimport '@angular/cdk/observers/private';\nimport './animation-DfMFjxHu.mjs';\nimport '@angular/cdk/layout';\nimport '@angular/cdk/overlay';\nimport '@angular/cdk/scrolling';\nimport '@angular/cdk/collections';\nimport '@angular/cdk/keycodes';\nimport '@angular/forms';\nimport './error-options-DCNQlTOA.mjs';\nimport './error-state-Dtb1IHM-.mjs';\nimport './index-DwiL-HGk.mjs';\nimport './index-BFRo2fUq.mjs';\nimport './common-module-cKSwHniA.mjs';\nimport './ripple-BYgV4oZC.mjs';\nimport '@angular/cdk/private';\nimport './pseudo-checkbox-module-4F8Up4PL.mjs';\nimport './pseudo-checkbox-DDmgx3P4.mjs';\nimport './module-DzZHEh7B.mjs';\nimport '@angular/cdk/observers';\nimport '@angular/cdk/portal';\nimport './structural-styles-CObeNzjn.mjs';\nimport './ripple-loader-BnMiRtmT.mjs';\n\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nclass MatPaginatorIntl {\n    /**\n     * Stream to emit from when labels are changed. Use this to notify components when the labels have\n     * changed after initialization.\n     */\n    changes = new Subject();\n    /** A label for the page size selector. */\n    itemsPerPageLabel = 'Items per page:';\n    /** A label for the button that increments the current page. */\n    nextPageLabel = 'Next page';\n    /** A label for the button that decrements the current page. */\n    previousPageLabel = 'Previous page';\n    /** A label for the button that moves to the first page. */\n    firstPageLabel = 'First page';\n    /** A label for the button that moves to the last page. */\n    lastPageLabel = 'Last page';\n    /** A label for the range of items within the current page and the length of the whole list. */\n    getRangeLabel = (page, pageSize, length) => {\n        if (length == 0 || pageSize == 0) {\n            return `0 of ${length}`;\n        }\n        length = Math.max(length, 0);\n        const startIndex = page * pageSize;\n        // If the start index exceeds the list length, do not try and fix the end index to the end.\n        const endIndex = startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;\n        return `${startIndex + 1} – ${endIndex} of ${length}`;\n    };\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatPaginatorIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatPaginatorIntl, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatPaginatorIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatPaginatorIntl();\n}\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n    // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n    provide: MatPaginatorIntl,\n    deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n    useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY,\n};\n\n/** The default page size if there is no page size and there are no provided page size options. */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {\n    /** The current page index. */\n    pageIndex;\n    /**\n     * Index of the page that was selected previously.\n     * @breaking-change 8.0.0 To be made into a required property.\n     */\n    previousPageIndex;\n    /** The current page size. */\n    pageSize;\n    /** The current total number of items being paged. */\n    length;\n}\n/** Injection token that can be used to provide the default options for the paginator module. */\nconst MAT_PAGINATOR_DEFAULT_OPTIONS = new InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS');\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nclass MatPaginator {\n    _intl = inject(MatPaginatorIntl);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    /** If set, styles the \"page size\" form field with the designated style. */\n    _formFieldAppearance;\n    /** ID for the DOM node containing the paginator's items per page label. */\n    _pageSizeLabelId = inject(_IdGenerator).getId('mat-paginator-page-size-label-');\n    _intlChanges;\n    _isInitialized = false;\n    _initializedStream = new ReplaySubject(1);\n    /**\n     * Theme color of the underlying form controls. This API is supported in M2\n     * themes only,it has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/paginator/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    color;\n    /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n    get pageIndex() {\n        return this._pageIndex;\n    }\n    set pageIndex(value) {\n        this._pageIndex = Math.max(value || 0, 0);\n        this._changeDetectorRef.markForCheck();\n    }\n    _pageIndex = 0;\n    /** The length of the total number of items that are being paginated. Defaulted to 0. */\n    get length() {\n        return this._length;\n    }\n    set length(value) {\n        this._length = value || 0;\n        this._changeDetectorRef.markForCheck();\n    }\n    _length = 0;\n    /** Number of items to display on a page. By default set to 50. */\n    get pageSize() {\n        return this._pageSize;\n    }\n    set pageSize(value) {\n        this._pageSize = Math.max(value || 0, 0);\n        this._updateDisplayedPageSizeOptions();\n    }\n    _pageSize;\n    /** The set of provided page size options to display to the user. */\n    get pageSizeOptions() {\n        return this._pageSizeOptions;\n    }\n    set pageSizeOptions(value) {\n        this._pageSizeOptions = (value || []).map(p => numberAttribute(p, 0));\n        this._updateDisplayedPageSizeOptions();\n    }\n    _pageSizeOptions = [];\n    /** Whether to hide the page size selection UI from the user. */\n    hidePageSize = false;\n    /** Whether to show the first/last buttons UI to the user. */\n    showFirstLastButtons = false;\n    /** Used to configure the underlying `MatSelect` inside the paginator. */\n    selectConfig = {};\n    /** Whether the paginator is disabled. */\n    disabled = false;\n    /** Event emitted when the paginator changes the page size or page index. */\n    page = new EventEmitter();\n    /** Displayed set of page size options. Will be sorted and include current page size. */\n    _displayedPageSizeOptions;\n    /** Emits when the paginator is initialized. */\n    initialized = this._initializedStream;\n    constructor() {\n        const _intl = this._intl;\n        const defaults = inject(MAT_PAGINATOR_DEFAULT_OPTIONS, {\n            optional: true,\n        });\n        this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n        if (defaults) {\n            const { pageSize, pageSizeOptions, hidePageSize, showFirstLastButtons } = defaults;\n            if (pageSize != null) {\n                this._pageSize = pageSize;\n            }\n            if (pageSizeOptions != null) {\n                this._pageSizeOptions = pageSizeOptions;\n            }\n            if (hidePageSize != null) {\n                this.hidePageSize = hidePageSize;\n            }\n            if (showFirstLastButtons != null) {\n                this.showFirstLastButtons = showFirstLastButtons;\n            }\n        }\n        this._formFieldAppearance = defaults?.formFieldAppearance || 'outline';\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n        this._updateDisplayedPageSizeOptions();\n        this._initializedStream.next();\n    }\n    ngOnDestroy() {\n        this._initializedStream.complete();\n        this._intlChanges.unsubscribe();\n    }\n    /** Advances to the next page if it exists. */\n    nextPage() {\n        if (this.hasNextPage()) {\n            this._navigate(this.pageIndex + 1);\n        }\n    }\n    /** Move back to the previous page if it exists. */\n    previousPage() {\n        if (this.hasPreviousPage()) {\n            this._navigate(this.pageIndex - 1);\n        }\n    }\n    /** Move to the first page if not already there. */\n    firstPage() {\n        // hasPreviousPage being false implies at the start\n        if (this.hasPreviousPage()) {\n            this._navigate(0);\n        }\n    }\n    /** Move to the last page if not already there. */\n    lastPage() {\n        // hasNextPage being false implies at the end\n        if (this.hasNextPage()) {\n            this._navigate(this.getNumberOfPages() - 1);\n        }\n    }\n    /** Whether there is a previous page. */\n    hasPreviousPage() {\n        return this.pageIndex >= 1 && this.pageSize != 0;\n    }\n    /** Whether there is a next page. */\n    hasNextPage() {\n        const maxPageIndex = this.getNumberOfPages() - 1;\n        return this.pageIndex < maxPageIndex && this.pageSize != 0;\n    }\n    /** Calculate the number of pages */\n    getNumberOfPages() {\n        if (!this.pageSize) {\n            return 0;\n        }\n        return Math.ceil(this.length / this.pageSize);\n    }\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     */\n    _changePageSize(pageSize) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        const startIndex = this.pageIndex * this.pageSize;\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n        this.pageSize = pageSize;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Checks whether the buttons for going forwards should be disabled. */\n    _nextButtonsDisabled() {\n        return this.disabled || !this.hasNextPage();\n    }\n    /** Checks whether the buttons for going backwards should be disabled. */\n    _previousButtonsDisabled() {\n        return this.disabled || !this.hasPreviousPage();\n    }\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     */\n    _updateDisplayedPageSizeOptions() {\n        if (!this._isInitialized) {\n            return;\n        }\n        // If no page size is provided, use the first page size option or the default page size.\n        if (!this.pageSize) {\n            this._pageSize =\n                this.pageSizeOptions.length != 0 ? this.pageSizeOptions[0] : DEFAULT_PAGE_SIZE;\n        }\n        this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n            this._displayedPageSizeOptions.push(this.pageSize);\n        }\n        // Sort the numbers using a number-specific sort function.\n        this._displayedPageSizeOptions.sort((a, b) => a - b);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n    _emitPageEvent(previousPageIndex) {\n        this.page.emit({\n            previousPageIndex,\n            pageIndex: this.pageIndex,\n            pageSize: this.pageSize,\n            length: this.length,\n        });\n    }\n    /** Navigates to a specific page index. */\n    _navigate(index) {\n        const previousIndex = this.pageIndex;\n        if (index !== previousIndex) {\n            this.pageIndex = index;\n            this._emitPageEvent(previousIndex);\n        }\n    }\n    /**\n     * Callback invoked when one of the navigation buttons is called.\n     * @param targetIndex Index to which the paginator should navigate.\n     * @param isDisabled Whether the button is disabled.\n     */\n    _buttonClicked(targetIndex, isDisabled) {\n        // Note that normally disabled buttons won't dispatch the click event, but the paginator ones\n        // do, because we're using `disabledInteractive` to allow them to be focusable. We need to\n        // check here to avoid the navigation.\n        if (!isDisabled) {\n            this._navigate(targetIndex);\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatPaginator, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: MatPaginator, isStandalone: true, selector: \"mat-paginator\", inputs: { color: \"color\", pageIndex: [\"pageIndex\", \"pageIndex\", numberAttribute], length: [\"length\", \"length\", numberAttribute], pageSize: [\"pageSize\", \"pageSize\", numberAttribute], pageSizeOptions: \"pageSizeOptions\", hidePageSize: [\"hidePageSize\", \"hidePageSize\", booleanAttribute], showFirstLastButtons: [\"showFirstLastButtons\", \"showFirstLastButtons\", booleanAttribute], selectConfig: \"selectConfig\", disabled: [\"disabled\", \"disabled\", booleanAttribute] }, outputs: { page: \"page\" }, host: { attributes: { \"role\": \"group\" }, classAttribute: \"mat-mdc-paginator\" }, exportAs: [\"matPaginator\"], ngImport: i0, template: \"<div class=\\\"mat-mdc-paginator-outer-container\\\">\\n  <div class=\\\"mat-mdc-paginator-container\\\">\\n    @if (!hidePageSize) {\\n      <div class=\\\"mat-mdc-paginator-page-size\\\">\\n        <div class=\\\"mat-mdc-paginator-page-size-label\\\" [attr.id]=\\\"_pageSizeLabelId\\\">\\n          {{_intl.itemsPerPageLabel}}\\n        </div>\\n\\n        @if (_displayedPageSizeOptions.length > 1) {\\n          <mat-form-field\\n            [appearance]=\\\"_formFieldAppearance!\\\"\\n            [color]=\\\"color\\\"\\n            class=\\\"mat-mdc-paginator-page-size-select\\\">\\n            <mat-select\\n              #selectRef\\n              [value]=\\\"pageSize\\\"\\n              [disabled]=\\\"disabled\\\"\\n              [aria-labelledby]=\\\"_pageSizeLabelId\\\"\\n              [panelClass]=\\\"selectConfig.panelClass || ''\\\"\\n              [disableOptionCentering]=\\\"selectConfig.disableOptionCentering\\\"\\n              (selectionChange)=\\\"_changePageSize($event.value)\\\"\\n              hideSingleSelectionIndicator>\\n              @for (pageSizeOption of _displayedPageSizeOptions; track pageSizeOption) {\\n                <mat-option [value]=\\\"pageSizeOption\\\">\\n                  {{pageSizeOption}}\\n                </mat-option>\\n              }\\n            </mat-select>\\n          <div class=\\\"mat-mdc-paginator-touch-target\\\" (click)=\\\"selectRef.open()\\\"></div>\\n          </mat-form-field>\\n        }\\n\\n        @if (_displayedPageSizeOptions.length <= 1) {\\n          <div class=\\\"mat-mdc-paginator-page-size-value\\\">{{pageSize}}</div>\\n        }\\n      </div>\\n    }\\n\\n    <div class=\\\"mat-mdc-paginator-range-actions\\\">\\n      <div class=\\\"mat-mdc-paginator-range-label\\\" aria-live=\\\"polite\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      <!--\\n      The buttons use `disabledInteractive` so that they can retain focus if they become disabled,\\n      otherwise focus is moved to the document body. However, users should not be able to navigate\\n      into these buttons, so `tabindex` is set to -1 when disabled.\\n      -->\\n\\n      @if (showFirstLastButtons) {\\n        <button matIconButton type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-first\\\"\\n                (click)=\\\"_buttonClicked(0, _previousButtonsDisabled())\\\"\\n                [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n                matTooltipPosition=\\\"above\\\"\\n                [disabled]=\\\"_previousButtonsDisabled()\\\"\\n                [tabindex]=\\\"_previousButtonsDisabled() ? -1 : null\\\"\\n                disabledInteractive>\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n      <button matIconButton type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-previous\\\"\\n              (click)=\\\"_buttonClicked(pageIndex - 1, _previousButtonsDisabled())\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              matTooltipPosition=\\\"above\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              [tabindex]=\\\"_previousButtonsDisabled() ? -1 : null\\\"\\n              disabledInteractive>\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button matIconButton type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-next\\\"\\n              (click)=\\\"_buttonClicked(pageIndex + 1, _nextButtonsDisabled())\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              matTooltipPosition=\\\"above\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              [tabindex]=\\\"_nextButtonsDisabled() ? -1 : null\\\"\\n              disabledInteractive>\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      @if (showFirstLastButtons) {\\n        <button matIconButton type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-last\\\"\\n                (click)=\\\"_buttonClicked(getNumberOfPages() - 1, _nextButtonsDisabled())\\\"\\n                [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n                matTooltipPosition=\\\"above\\\"\\n                [disabled]=\\\"_nextButtonsDisabled()\\\"\\n                [tabindex]=\\\"_nextButtonsDisabled() ? -1 : null\\\"\\n                disabledInteractive>\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-paginator{display:block;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-paginator-container-text-color, var(--mat-sys-on-surface));background-color:var(--mat-paginator-container-background-color, var(--mat-sys-surface));font-family:var(--mat-paginator-container-text-font, var(--mat-sys-body-small-font));line-height:var(--mat-paginator-container-text-line-height, var(--mat-sys-body-small-line-height));font-size:var(--mat-paginator-container-text-size, var(--mat-sys-body-small-size));font-weight:var(--mat-paginator-container-text-weight, var(--mat-sys-body-small-weight));letter-spacing:var(--mat-paginator-container-text-tracking, var(--mat-sys-body-small-tracking));--mat-form-field-container-height: var(--mat-paginator-form-field-container-height, 40px);--mat-form-field-container-vertical-padding: var(--mat-paginator-form-field-container-vertical-padding, 8px)}.mat-mdc-paginator .mat-mdc-select-value{font-size:var(--mat-paginator-select-trigger-text-size, var(--mat-sys-body-small-size))}.mat-mdc-paginator .mat-mdc-form-field-subscript-wrapper{display:none}.mat-mdc-paginator .mat-mdc-select{line-height:1.5}.mat-mdc-paginator-outer-container{display:flex}.mat-mdc-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap;width:100%;min-height:var(--mat-paginator-container-size, 56px)}.mat-mdc-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-mdc-paginator-page-size{margin-right:0;margin-left:8px}.mat-mdc-paginator-page-size-label{margin:0 4px}.mat-mdc-paginator-page-size-select{margin:0 4px;width:84px}.mat-mdc-paginator-range-label{margin:0 32px 0 24px}.mat-mdc-paginator-range-actions{display:flex;align-items:center}.mat-mdc-paginator-icon{display:inline-block;width:28px;fill:var(--mat-paginator-enabled-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-icon-button[aria-disabled] .mat-mdc-paginator-icon{fill:var(--mat-paginator-disabled-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}[dir=rtl] .mat-mdc-paginator-icon{transform:rotate(180deg)}@media(forced-colors: active){.mat-mdc-icon-button[aria-disabled] .mat-mdc-paginator-icon,.mat-mdc-paginator-icon{fill:currentColor}.mat-mdc-paginator-range-actions .mat-mdc-icon-button{outline:solid 1px}.mat-mdc-paginator-range-actions .mat-mdc-icon-button[aria-disabled]{color:GrayText}}.mat-mdc-paginator-touch-target{display:var(--mat-paginator-touch-target-display, block);position:absolute;top:50%;left:50%;width:84px;height:48px;background-color:rgba(0,0,0,0);transform:translate(-50%, -50%);cursor:pointer}\\n\"], dependencies: [{ kind: \"component\", type: MatFormField, selector: \"mat-form-field\", inputs: [\"hideRequiredMarker\", \"color\", \"floatLabel\", \"appearance\", \"subscriptSizing\", \"hintLabel\"], exportAs: [\"matFormField\"] }, { kind: \"component\", type: MatSelect, selector: \"mat-select\", inputs: [\"aria-describedby\", \"panelClass\", \"disabled\", \"disableRipple\", \"tabIndex\", \"hideSingleSelectionIndicator\", \"placeholder\", \"required\", \"multiple\", \"disableOptionCentering\", \"compareWith\", \"value\", \"aria-label\", \"aria-labelledby\", \"errorStateMatcher\", \"typeaheadDebounceInterval\", \"sortComparator\", \"id\", \"panelWidth\", \"canSelectNullableOptions\"], outputs: [\"openedChange\", \"opened\", \"closed\", \"selectionChange\", \"valueChange\"], exportAs: [\"matSelect\"] }, { kind: \"component\", type: MatOption, selector: \"mat-option\", inputs: [\"value\", \"id\", \"disabled\"], outputs: [\"onSelectionChange\"], exportAs: [\"matOption\"] }, { kind: \"component\", type: MatIconButton, selector: \"button[mat-icon-button], a[mat-icon-button], button[matIconButton], a[matIconButton]\", exportAs: [\"matButton\", \"matAnchor\"] }, { kind: \"directive\", type: MatTooltip, selector: \"[matTooltip]\", inputs: [\"matTooltipPosition\", \"matTooltipPositionAtOrigin\", \"matTooltipDisabled\", \"matTooltipShowDelay\", \"matTooltipHideDelay\", \"matTooltipTouchGestures\", \"matTooltip\", \"matTooltipClass\"], exportAs: [\"matTooltip\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatPaginator, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-paginator', exportAs: 'matPaginator', host: {\n                        'class': 'mat-mdc-paginator',\n                        'role': 'group',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, imports: [MatFormField, MatSelect, MatOption, MatIconButton, MatTooltip], template: \"<div class=\\\"mat-mdc-paginator-outer-container\\\">\\n  <div class=\\\"mat-mdc-paginator-container\\\">\\n    @if (!hidePageSize) {\\n      <div class=\\\"mat-mdc-paginator-page-size\\\">\\n        <div class=\\\"mat-mdc-paginator-page-size-label\\\" [attr.id]=\\\"_pageSizeLabelId\\\">\\n          {{_intl.itemsPerPageLabel}}\\n        </div>\\n\\n        @if (_displayedPageSizeOptions.length > 1) {\\n          <mat-form-field\\n            [appearance]=\\\"_formFieldAppearance!\\\"\\n            [color]=\\\"color\\\"\\n            class=\\\"mat-mdc-paginator-page-size-select\\\">\\n            <mat-select\\n              #selectRef\\n              [value]=\\\"pageSize\\\"\\n              [disabled]=\\\"disabled\\\"\\n              [aria-labelledby]=\\\"_pageSizeLabelId\\\"\\n              [panelClass]=\\\"selectConfig.panelClass || ''\\\"\\n              [disableOptionCentering]=\\\"selectConfig.disableOptionCentering\\\"\\n              (selectionChange)=\\\"_changePageSize($event.value)\\\"\\n              hideSingleSelectionIndicator>\\n              @for (pageSizeOption of _displayedPageSizeOptions; track pageSizeOption) {\\n                <mat-option [value]=\\\"pageSizeOption\\\">\\n                  {{pageSizeOption}}\\n                </mat-option>\\n              }\\n            </mat-select>\\n          <div class=\\\"mat-mdc-paginator-touch-target\\\" (click)=\\\"selectRef.open()\\\"></div>\\n          </mat-form-field>\\n        }\\n\\n        @if (_displayedPageSizeOptions.length <= 1) {\\n          <div class=\\\"mat-mdc-paginator-page-size-value\\\">{{pageSize}}</div>\\n        }\\n      </div>\\n    }\\n\\n    <div class=\\\"mat-mdc-paginator-range-actions\\\">\\n      <div class=\\\"mat-mdc-paginator-range-label\\\" aria-live=\\\"polite\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      <!--\\n      The buttons use `disabledInteractive` so that they can retain focus if they become disabled,\\n      otherwise focus is moved to the document body. However, users should not be able to navigate\\n      into these buttons, so `tabindex` is set to -1 when disabled.\\n      -->\\n\\n      @if (showFirstLastButtons) {\\n        <button matIconButton type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-first\\\"\\n                (click)=\\\"_buttonClicked(0, _previousButtonsDisabled())\\\"\\n                [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n                matTooltipPosition=\\\"above\\\"\\n                [disabled]=\\\"_previousButtonsDisabled()\\\"\\n                [tabindex]=\\\"_previousButtonsDisabled() ? -1 : null\\\"\\n                disabledInteractive>\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n      <button matIconButton type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-previous\\\"\\n              (click)=\\\"_buttonClicked(pageIndex - 1, _previousButtonsDisabled())\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              matTooltipPosition=\\\"above\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              [tabindex]=\\\"_previousButtonsDisabled() ? -1 : null\\\"\\n              disabledInteractive>\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button matIconButton type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-next\\\"\\n              (click)=\\\"_buttonClicked(pageIndex + 1, _nextButtonsDisabled())\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              matTooltipPosition=\\\"above\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              [tabindex]=\\\"_nextButtonsDisabled() ? -1 : null\\\"\\n              disabledInteractive>\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      @if (showFirstLastButtons) {\\n        <button matIconButton type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-last\\\"\\n                (click)=\\\"_buttonClicked(getNumberOfPages() - 1, _nextButtonsDisabled())\\\"\\n                [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n                matTooltipPosition=\\\"above\\\"\\n                [disabled]=\\\"_nextButtonsDisabled()\\\"\\n                [tabindex]=\\\"_nextButtonsDisabled() ? -1 : null\\\"\\n                disabledInteractive>\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-paginator{display:block;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-paginator-container-text-color, var(--mat-sys-on-surface));background-color:var(--mat-paginator-container-background-color, var(--mat-sys-surface));font-family:var(--mat-paginator-container-text-font, var(--mat-sys-body-small-font));line-height:var(--mat-paginator-container-text-line-height, var(--mat-sys-body-small-line-height));font-size:var(--mat-paginator-container-text-size, var(--mat-sys-body-small-size));font-weight:var(--mat-paginator-container-text-weight, var(--mat-sys-body-small-weight));letter-spacing:var(--mat-paginator-container-text-tracking, var(--mat-sys-body-small-tracking));--mat-form-field-container-height: var(--mat-paginator-form-field-container-height, 40px);--mat-form-field-container-vertical-padding: var(--mat-paginator-form-field-container-vertical-padding, 8px)}.mat-mdc-paginator .mat-mdc-select-value{font-size:var(--mat-paginator-select-trigger-text-size, var(--mat-sys-body-small-size))}.mat-mdc-paginator .mat-mdc-form-field-subscript-wrapper{display:none}.mat-mdc-paginator .mat-mdc-select{line-height:1.5}.mat-mdc-paginator-outer-container{display:flex}.mat-mdc-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap;width:100%;min-height:var(--mat-paginator-container-size, 56px)}.mat-mdc-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-mdc-paginator-page-size{margin-right:0;margin-left:8px}.mat-mdc-paginator-page-size-label{margin:0 4px}.mat-mdc-paginator-page-size-select{margin:0 4px;width:84px}.mat-mdc-paginator-range-label{margin:0 32px 0 24px}.mat-mdc-paginator-range-actions{display:flex;align-items:center}.mat-mdc-paginator-icon{display:inline-block;width:28px;fill:var(--mat-paginator-enabled-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-icon-button[aria-disabled] .mat-mdc-paginator-icon{fill:var(--mat-paginator-disabled-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}[dir=rtl] .mat-mdc-paginator-icon{transform:rotate(180deg)}@media(forced-colors: active){.mat-mdc-icon-button[aria-disabled] .mat-mdc-paginator-icon,.mat-mdc-paginator-icon{fill:currentColor}.mat-mdc-paginator-range-actions .mat-mdc-icon-button{outline:solid 1px}.mat-mdc-paginator-range-actions .mat-mdc-icon-button[aria-disabled]{color:GrayText}}.mat-mdc-paginator-touch-target{display:var(--mat-paginator-touch-target-display, block);position:absolute;top:50%;left:50%;width:84px;height:48px;background-color:rgba(0,0,0,0);transform:translate(-50%, -50%);cursor:pointer}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { color: [{\n                type: Input\n            }], pageIndex: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], length: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], pageSize: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], pageSizeOptions: [{\n                type: Input\n            }], hidePageSize: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], showFirstLastButtons: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], selectConfig: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], page: [{\n                type: Output\n            }] } });\n\nclass MatPaginatorModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatPaginatorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatPaginatorModule, imports: [MatButtonModule, MatSelectModule, MatTooltipModule, MatPaginator], exports: [MatPaginator] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatPaginatorModule, providers: [MAT_PAGINATOR_INTL_PROVIDER], imports: [MatButtonModule, MatSelectModule, MatTooltipModule, MatPaginator] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatPaginatorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatButtonModule, MatSelectModule, MatTooltipModule, MatPaginator],\n                    exports: [MatPaginator],\n                    providers: [MAT_PAGINATOR_INTL_PROVIDER],\n                }]\n        }] });\n\nexport { MAT_PAGINATOR_DEFAULT_OPTIONS, MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent };\n\n"],"mappings":"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","names":[],"x_google_ignoreList":[0,1]}