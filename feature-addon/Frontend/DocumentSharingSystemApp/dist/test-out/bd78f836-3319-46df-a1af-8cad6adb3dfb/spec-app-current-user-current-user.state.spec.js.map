{
  "version": 3,
  "sources": ["src/app/current-user/current-user.state.spec.ts"],
  "sourcesContent": ["import { TestBed } from '@angular/core/testing';\nimport {  provideStore,  Store } from '@ngxs/store';\nimport { CurrentUserState, CurrentUserStateModel } from './current-user.state';\nimport { SetCurrentUserAction } from './current-user.actions';\nimport { UserModel } from '../models/user.model';\n\ndescribe('CurrentUser store', () => {\n  let store: Store;\n  beforeEach(() => {\n    TestBed.configureTestingModule({\n       providers: [provideStore([CurrentUserState])]\n      \n    });\n\n    store = TestBed.inject(Store);\n    store.reset({});\n  });\n\n  it('should create an action and set an item', () => {\n    let user = new UserModel();\n    const expected: CurrentUserStateModel = {\n      user : user\n    };\n    store.dispatch(new SetCurrentUserAction(user));\n    const actual = store.selectSnapshot(CurrentUserState.getUser);\n    expect(actual).toEqual(user);\n  });\n\n  it('should update user data', () => {\n    const user1 = new UserModel(\"1\");\n    const user2 = new UserModel(\"2\");\n     let callCount = 0;\n\n     store.dispatch(new SetCurrentUserAction(user1));\n  store.select(CurrentUserState.getUser).subscribe((data) => {\n    callCount++;\n    if (callCount === 1) {\n      expect(data).toEqual(user1);\n      // Dispatch next action\n      store.dispatch(new SetCurrentUserAction(user2));\n    } else if (callCount === 2) {\n      expect(data).toEqual(user2);\n  \n    }\n  });\n\n  });\n\n\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA,SAAS,qBAAqB,MAAK;AACjC,MAAI;AACJ,aAAW,MAAK;AACd,YAAQ,uBAAuB;MAC5B,WAAW,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;KAE9C;AAED,YAAQ,QAAQ,OAAO,KAAK;AAC5B,UAAM,MAAM,CAAA,CAAE;EAChB,CAAC;AAED,KAAG,2CAA2C,MAAK;AACjD,QAAI,OAAO,IAAI,UAAS;AACxB,UAAM,WAAkC;MACtC;;AAEF,UAAM,SAAS,IAAI,qBAAqB,IAAI,CAAC;AAC7C,UAAM,SAAS,MAAM,eAAe,iBAAiB,OAAO;AAC5D,WAAO,MAAM,EAAE,QAAQ,IAAI;EAC7B,CAAC;AAED,KAAG,2BAA2B,MAAK;AACjC,UAAM,QAAQ,IAAI,UAAU,GAAG;AAC/B,UAAM,QAAQ,IAAI,UAAU,GAAG;AAC9B,QAAI,YAAY;AAEhB,UAAM,SAAS,IAAI,qBAAqB,KAAK,CAAC;AACjD,UAAM,OAAO,iBAAiB,OAAO,EAAE,UAAU,CAAC,SAAQ;AACxD;AACA,UAAI,cAAc,GAAG;AACnB,eAAO,IAAI,EAAE,QAAQ,KAAK;AAE1B,cAAM,SAAS,IAAI,qBAAqB,KAAK,CAAC;MAChD,WAAW,cAAc,GAAG;AAC1B,eAAO,IAAI,EAAE,QAAQ,KAAK;MAE5B;IACF,CAAC;EAED,CAAC;AAGH,CAAC;",
  "names": []
}
