{"version":3,"sources":["node_modules/@angular/material/fesm2022/menu.mjs","node_modules/@angular/material/fesm2022/toolbar.mjs","angular:jit:template:src/app/navbar/navbar.html","angular:jit:style:src/app/navbar/navbar.css","src/app/navbar/navbar.ts"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, DOCUMENT, ChangeDetectorRef, booleanAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, TemplateRef, ApplicationRef, Injector, ViewContainerRef, Directive, QueryList, EventEmitter, afterNextRender, ContentChildren, ViewChild, ContentChild, Output, NgZone, Renderer2, NgModule } from '@angular/core';\nimport { FocusMonitor, _IdGenerator, FocusKeyManager, isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { UP_ARROW, DOWN_ARROW, RIGHT_ARROW, LEFT_ARROW, ESCAPE, hasModifierKey, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Subject, merge, Subscription, of } from 'rxjs';\nimport { startWith, switchMap, takeUntil, take, filter } from 'rxjs/operators';\nimport { _CdkPrivateStyleLoader } from '@angular/cdk/private';\nimport { _ as _StructuralStylesLoader } from './structural-styles-CObeNzjn.mjs';\nimport { M as MatRipple } from './ripple-BYgV4oZC.mjs';\nimport { TemplatePortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport { _ as _animationsDisabled } from './animation-DfMFjxHu.mjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { createRepositionScrollStrategy, createOverlayRef, OverlayConfig, createFlexibleConnectedPositionStrategy, OverlayModule } from '@angular/cdk/overlay';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { M as MatRippleModule } from './index-BFRo2fUq.mjs';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\nimport '@angular/cdk/platform';\nimport '@angular/cdk/coercion';\nimport '@angular/cdk/layout';\n\n/**\n * Injection token used to provide the parent menu to menu-specific components.\n * @docs-private\n */\nconst MAT_MENU_PANEL = new InjectionToken('MAT_MENU_PANEL');\n\n/**\n * Single item inside a `mat-menu`. Provides the menu item styling and accessibility treatment.\n */\nclass MatMenuItem {\n    _elementRef = inject(ElementRef);\n    _document = inject(DOCUMENT);\n    _focusMonitor = inject(FocusMonitor);\n    _parentMenu = inject(MAT_MENU_PANEL, { optional: true });\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    /** ARIA role for the menu item. */\n    role = 'menuitem';\n    /** Whether the menu item is disabled. */\n    disabled = false;\n    /** Whether ripples are disabled on the menu item. */\n    disableRipple = false;\n    /** Stream that emits when the menu item is hovered. */\n    _hovered = new Subject();\n    /** Stream that emits when the menu item is focused. */\n    _focused = new Subject();\n    /** Whether the menu item is highlighted. */\n    _highlighted = false;\n    /** Whether the menu item acts as a trigger for a sub-menu. */\n    _triggersSubmenu = false;\n    constructor() {\n        inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n        this._parentMenu?.addItem?.(this);\n    }\n    /** Focuses the menu item. */\n    focus(origin, options) {\n        if (this._focusMonitor && origin) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n        }\n        else {\n            this._getHostElement().focus(options);\n        }\n        this._focused.next(this);\n    }\n    ngAfterViewInit() {\n        if (this._focusMonitor) {\n            // Start monitoring the element, so it gets the appropriate focused classes. We want\n            // to show the focus style for menu items only when the focus was not caused by a\n            // mouse or touch interaction.\n            this._focusMonitor.monitor(this._elementRef, false);\n        }\n    }\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        if (this._parentMenu && this._parentMenu.removeItem) {\n            this._parentMenu.removeItem(this);\n        }\n        this._hovered.complete();\n        this._focused.complete();\n    }\n    /** Used to set the `tabindex`. */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /** Returns the host DOM element. */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /** Prevents the default element actions if it is disabled. */\n    _checkDisabled(event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n    /** Emits to the hover stream. */\n    _handleMouseEnter() {\n        this._hovered.next(this);\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n        const clone = this._elementRef.nativeElement.cloneNode(true);\n        const icons = clone.querySelectorAll('mat-icon, .material-icons');\n        // Strip away icons, so they don't show up in the text.\n        for (let i = 0; i < icons.length; i++) {\n            icons[i].remove();\n        }\n        return clone.textContent?.trim() || '';\n    }\n    _setHighlighted(isHighlighted) {\n        // We need to mark this for check for the case where the content is coming from a\n        // `matMenuContent` whose change detection tree is at the declaration position,\n        // not the insertion position. See #23175.\n        this._highlighted = isHighlighted;\n        this._changeDetectorRef.markForCheck();\n    }\n    _setTriggersSubmenu(triggersSubmenu) {\n        this._triggersSubmenu = triggersSubmenu;\n        this._changeDetectorRef.markForCheck();\n    }\n    _hasFocus() {\n        return this._document && this._document.activeElement === this._getHostElement();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatMenuItem, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: MatMenuItem, isStandalone: true, selector: \"[mat-menu-item]\", inputs: { role: \"role\", disabled: [\"disabled\", \"disabled\", booleanAttribute], disableRipple: [\"disableRipple\", \"disableRipple\", booleanAttribute] }, host: { listeners: { \"click\": \"_checkDisabled($event)\", \"mouseenter\": \"_handleMouseEnter()\" }, properties: { \"attr.role\": \"role\", \"class.mat-mdc-menu-item-highlighted\": \"_highlighted\", \"class.mat-mdc-menu-item-submenu-trigger\": \"_triggersSubmenu\", \"attr.tabindex\": \"_getTabIndex()\", \"attr.aria-disabled\": \"disabled\", \"attr.disabled\": \"disabled || null\" }, classAttribute: \"mat-mdc-menu-item mat-focus-indicator\" }, exportAs: [\"matMenuItem\"], ngImport: i0, template: \"<ng-content select=\\\"mat-icon, [matMenuItemIcon]\\\"></ng-content>\\n<span class=\\\"mat-mdc-menu-item-text\\\"><ng-content></ng-content></span>\\n<div class=\\\"mat-mdc-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\\n@if (_triggersSubmenu) {\\n     <svg\\n       class=\\\"mat-mdc-menu-submenu-icon\\\"\\n       viewBox=\\\"0 0 5 10\\\"\\n       focusable=\\\"false\\\"\\n       aria-hidden=\\\"true\\\"><polygon points=\\\"0,0 5,5 0,10\\\"/></svg>\\n}\\n\", dependencies: [{ kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatMenuItem, decorators: [{\n            type: Component,\n            args: [{ selector: '[mat-menu-item]', exportAs: 'matMenuItem', host: {\n                        '[attr.role]': 'role',\n                        'class': 'mat-mdc-menu-item mat-focus-indicator',\n                        '[class.mat-mdc-menu-item-highlighted]': '_highlighted',\n                        '[class.mat-mdc-menu-item-submenu-trigger]': '_triggersSubmenu',\n                        '[attr.tabindex]': '_getTabIndex()',\n                        '[attr.aria-disabled]': 'disabled',\n                        '[attr.disabled]': 'disabled || null',\n                        '(click)': '_checkDisabled($event)',\n                        '(mouseenter)': '_handleMouseEnter()',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, imports: [MatRipple], template: \"<ng-content select=\\\"mat-icon, [matMenuItemIcon]\\\"></ng-content>\\n<span class=\\\"mat-mdc-menu-item-text\\\"><ng-content></ng-content></span>\\n<div class=\\\"mat-mdc-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\\n@if (_triggersSubmenu) {\\n     <svg\\n       class=\\\"mat-mdc-menu-submenu-icon\\\"\\n       viewBox=\\\"0 0 5 10\\\"\\n       focusable=\\\"false\\\"\\n       aria-hidden=\\\"true\\\"><polygon points=\\\"0,0 5,5 0,10\\\"/></svg>\\n}\\n\" }]\n        }], ctorParameters: () => [], propDecorators: { role: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disableRipple: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when a menu is assigned\n * to a trigger that is placed inside the same menu.\n * @docs-private\n */\nfunction throwMatMenuRecursiveError() {\n    throw Error(`matMenuTriggerFor: menu cannot contain its own trigger. Assign a menu that is ` +\n        `not a parent of the trigger or move the trigger outside of the menu.`);\n}\n\n/**\n * Injection token that can be used to reference instances of `MatMenuContent`. It serves\n * as alternative token to the actual `MatMenuContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_MENU_CONTENT = new InjectionToken('MatMenuContent');\n/** Menu content that will be rendered lazily once the menu is opened. */\nclass MatMenuContent {\n    _template = inject(TemplateRef);\n    _appRef = inject(ApplicationRef);\n    _injector = inject(Injector);\n    _viewContainerRef = inject(ViewContainerRef);\n    _document = inject(DOCUMENT);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _portal;\n    _outlet;\n    /** Emits when the menu content has been attached. */\n    _attached = new Subject();\n    constructor() { }\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n        this.detach();\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'), this._appRef, this._injector);\n        }\n        const element = this._template.elementRef.nativeElement;\n        // Because we support opening the same menu from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode.insertBefore(this._outlet.outletElement, element);\n        // When `MatMenuContent` is used in an `OnPush` component, the insertion of the menu\n        // content via `createEmbeddedView` does not cause the content to be seen as \"dirty\"\n        // by Angular. This causes the `@ContentChildren` for menu items within the menu to\n        // not be updated by Angular. By explicitly marking for check here, we tell Angular that\n        // it needs to check for new menu items and update the `@ContentChild` in `MatMenu`.\n        this._changeDetectorRef.markForCheck();\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this._portal?.isAttached) {\n            this._portal.detach();\n        }\n    }\n    ngOnDestroy() {\n        this.detach();\n        this._outlet?.dispose();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatMenuContent, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatMenuContent, isStandalone: true, selector: \"ng-template[matMenuContent]\", providers: [{ provide: MAT_MENU_CONTENT, useExisting: MatMenuContent }], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatMenuContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matMenuContent]',\n                    providers: [{ provide: MAT_MENU_CONTENT, useExisting: MatMenuContent }],\n                }]\n        }], ctorParameters: () => [] });\n\n/** Injection token to be used to override the default options for `mat-menu`. */\nconst MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options', {\n    providedIn: 'root',\n    factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop',\n    };\n}\n/** Name of the enter animation `@keyframes`. */\nconst ENTER_ANIMATION = '_mat-menu-enter';\n/** Name of the exit animation `@keyframes`. */\nconst EXIT_ANIMATION = '_mat-menu-exit';\nclass MatMenu {\n    _elementRef = inject(ElementRef);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _injector = inject(Injector);\n    _keyManager;\n    _xPosition;\n    _yPosition;\n    _firstItemFocusRef;\n    _exitFallbackTimeout;\n    /** Whether animations are currently disabled. */\n    _animationsDisabled = _animationsDisabled();\n    /** All items inside the menu. Includes items nested inside another menu. */\n    _allItems;\n    /** Only the direct descendant menu items. */\n    _directDescendantItems = new QueryList();\n    /** Classes to be applied to the menu panel. */\n    _classList = {};\n    /** Current state of the panel animation. */\n    _panelAnimationState = 'void';\n    /** Emits whenever an animation on the menu completes. */\n    _animationDone = new Subject();\n    /** Whether the menu is animating. */\n    _isAnimating = false;\n    /** Parent menu of the current menu panel. */\n    parentMenu;\n    /** Layout direction of the menu. */\n    direction;\n    /** Class or list of classes to be added to the overlay panel. */\n    overlayPanelClass;\n    /** Class to be added to the backdrop element. */\n    backdropClass;\n    /** aria-label for the menu panel. */\n    ariaLabel;\n    /** aria-labelledby for the menu panel. */\n    ariaLabelledby;\n    /** aria-describedby for the menu panel. */\n    ariaDescribedby;\n    /** Position of the menu in the X axis. */\n    get xPosition() {\n        return this._xPosition;\n    }\n    set xPosition(value) {\n        if (value !== 'before' &&\n            value !== 'after' &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuInvalidPositionX();\n        }\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n    /** Position of the menu in the Y axis. */\n    get yPosition() {\n        return this._yPosition;\n    }\n    set yPosition(value) {\n        if (value !== 'above' && value !== 'below' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuInvalidPositionY();\n        }\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n    /** @docs-private */\n    templateRef;\n    /**\n     * List of the items inside of a menu.\n     * @deprecated\n     * @breaking-change 8.0.0\n     */\n    items;\n    /**\n     * Menu content that will be rendered lazily.\n     * @docs-private\n     */\n    lazyContent;\n    /** Whether the menu should overlap its trigger. */\n    overlapTrigger;\n    /** Whether the menu has a backdrop. */\n    hasBackdrop;\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @param classes list of class names\n     */\n    set panelClass(classes) {\n        const previousPanelClass = this._previousPanelClass;\n        const newClassList = { ...this._classList };\n        if (previousPanelClass && previousPanelClass.length) {\n            previousPanelClass.split(' ').forEach((className) => {\n                newClassList[className] = false;\n            });\n        }\n        this._previousPanelClass = classes;\n        if (classes && classes.length) {\n            classes.split(' ').forEach((className) => {\n                newClassList[className] = true;\n            });\n            this._elementRef.nativeElement.className = '';\n        }\n        this._classList = newClassList;\n    }\n    _previousPanelClass;\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @deprecated Use `panelClass` instead.\n     * @breaking-change 8.0.0\n     */\n    get classList() {\n        return this.panelClass;\n    }\n    set classList(classes) {\n        this.panelClass = classes;\n    }\n    /** Event emitted when the menu is closed. */\n    closed = new EventEmitter();\n    /**\n     * Event emitted when the menu is closed.\n     * @deprecated Switch to `closed` instead\n     * @breaking-change 8.0.0\n     */\n    close = this.closed;\n    panelId = inject(_IdGenerator).getId('mat-menu-panel-');\n    constructor() {\n        const defaultOptions = inject(MAT_MENU_DEFAULT_OPTIONS);\n        this.overlayPanelClass = defaultOptions.overlayPanelClass || '';\n        this._xPosition = defaultOptions.xPosition;\n        this._yPosition = defaultOptions.yPosition;\n        this.backdropClass = defaultOptions.backdropClass;\n        this.overlapTrigger = defaultOptions.overlapTrigger;\n        this.hasBackdrop = defaultOptions.hasBackdrop;\n    }\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n    ngAfterContentInit() {\n        this._updateDirectDescendants();\n        this._keyManager = new FocusKeyManager(this._directDescendantItems)\n            .withWrap()\n            .withTypeAhead()\n            .withHomeAndEnd();\n        this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n        // If a user manually (programmatically) focuses a menu item, we need to reflect that focus\n        // change back to the key manager. Note that we don't need to unsubscribe here because _focused\n        // is internal and we know that it gets completed on destroy.\n        this._directDescendantItems.changes\n            .pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map((item) => item._focused))))\n            .subscribe(focusedItem => this._keyManager.updateActiveItem(focusedItem));\n        this._directDescendantItems.changes.subscribe((itemsList) => {\n            // Move focus to another item, if the active item is removed from the list.\n            // We need to debounce the callback, because multiple items might be removed\n            // in quick succession.\n            const manager = this._keyManager;\n            if (this._panelAnimationState === 'enter' && manager.activeItem?._hasFocus()) {\n                const items = itemsList.toArray();\n                const index = Math.max(0, Math.min(items.length - 1, manager.activeItemIndex || 0));\n                if (items[index] && !items[index].disabled) {\n                    manager.setActiveItem(index);\n                }\n                else {\n                    manager.setNextItemActive();\n                }\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._keyManager?.destroy();\n        this._directDescendantItems.destroy();\n        this.closed.complete();\n        this._firstItemFocusRef?.destroy();\n        clearTimeout(this._exitFallbackTimeout);\n    }\n    /** Stream that emits whenever the hovered menu item changes. */\n    _hovered() {\n        // Coerce the `changes` property because Angular types it as `Observable<any>`\n        const itemChanges = this._directDescendantItems.changes;\n        return itemChanges.pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map((item) => item._hovered))));\n    }\n    /*\n     * Registers a menu item with the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    addItem(_item) { }\n    /**\n     * Removes an item from the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    removeItem(_item) { }\n    /** Handle a keyboard event from the menu, delegating to the appropriate action. */\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        switch (keyCode) {\n            case ESCAPE:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this.closed.emit('keydown');\n                }\n                break;\n            case LEFT_ARROW:\n                if (this.parentMenu && this.direction === 'ltr') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case RIGHT_ARROW:\n                if (this.parentMenu && this.direction === 'rtl') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            default:\n                if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n                    manager.setFocusOrigin('keyboard');\n                }\n                manager.onKeydown(event);\n                return;\n        }\n    }\n    /**\n     * Focus the first item in the menu.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin = 'program') {\n        // Wait for `afterNextRender` to ensure iOS VoiceOver screen reader focuses the first item (#24735).\n        this._firstItemFocusRef?.destroy();\n        this._firstItemFocusRef = afterNextRender(() => {\n            const menuPanel = this._resolvePanel();\n            // If an item in the menuPanel is already focused, avoid overriding the focus.\n            if (!menuPanel || !menuPanel.contains(document.activeElement)) {\n                const manager = this._keyManager;\n                manager.setFocusOrigin(origin).setFirstItemActive();\n                // If there's no active item at this point, it means that all the items are disabled.\n                // Move focus to the menuPanel panel so keyboard events like Escape still work. Also this will\n                // give _some_ feedback to screen readers.\n                if (!manager.activeItem && menuPanel) {\n                    menuPanel.focus();\n                }\n            }\n        }, { injector: this._injector });\n    }\n    /**\n     * Resets the active item in the menu. This is used when the menu is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n    /**\n     * @deprecated No longer used and will be removed.\n     * @breaking-change 21.0.0\n     */\n    setElevation(_depth) { }\n    /**\n     * Adds classes to the menu panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the menu along the x axis.\n     * @param posY Position of the menu along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX = this.xPosition, posY = this.yPosition) {\n        this._classList = {\n            ...this._classList,\n            ['mat-menu-before']: posX === 'before',\n            ['mat-menu-after']: posX === 'after',\n            ['mat-menu-above']: posY === 'above',\n            ['mat-menu-below']: posY === 'below',\n        };\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(state) {\n        const isExit = state === EXIT_ANIMATION;\n        if (isExit || state === ENTER_ANIMATION) {\n            if (isExit) {\n                clearTimeout(this._exitFallbackTimeout);\n                this._exitFallbackTimeout = undefined;\n            }\n            this._animationDone.next(isExit ? 'void' : 'enter');\n            this._isAnimating = false;\n        }\n    }\n    _onAnimationStart(state) {\n        if (state === ENTER_ANIMATION || state === EXIT_ANIMATION) {\n            this._isAnimating = true;\n        }\n    }\n    _setIsOpen(isOpen) {\n        this._panelAnimationState = isOpen ? 'enter' : 'void';\n        if (isOpen) {\n            if (this._keyManager.activeItemIndex === 0) {\n                // Scroll the content element to the top as soon as the animation starts. This is necessary,\n                // because we move focus to the first item while it's still being animated, which can throw\n                // the browser off when it determines the scroll position. Alternatively we can move focus\n                // when the animation is done, however moving focus asynchronously will interrupt screen\n                // readers which are in the process of reading out the menu already. We take the `element`\n                // from the `event` since we can't use a `ViewChild` to access the pane.\n                const menuPanel = this._resolvePanel();\n                if (menuPanel) {\n                    menuPanel.scrollTop = 0;\n                }\n            }\n        }\n        else if (!this._animationsDisabled) {\n            // Some apps do `* { animation: none !important; }` in tests which will prevent the\n            // `animationend` event from firing. Since the exit animation is loading-bearing for\n            // removing the content from the DOM, add a fallback timer.\n            this._exitFallbackTimeout = setTimeout(() => this._onAnimationDone(EXIT_ANIMATION), 200);\n        }\n        // Animation events won't fire when animations are disabled so we simulate them.\n        if (this._animationsDisabled) {\n            setTimeout(() => {\n                this._onAnimationDone(isOpen ? ENTER_ANIMATION : EXIT_ANIMATION);\n            });\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Sets up a stream that will keep track of any newly-added menu items and will update the list\n     * of direct descendants. We collect the descendants this way, because `_allItems` can include\n     * items that are part of child menus, and using a custom way of registering items is unreliable\n     * when it comes to maintaining the item order.\n     */\n    _updateDirectDescendants() {\n        this._allItems.changes\n            .pipe(startWith(this._allItems))\n            .subscribe((items) => {\n            this._directDescendantItems.reset(items.filter(item => item._parentMenu === this));\n            this._directDescendantItems.notifyOnChanges();\n        });\n    }\n    /** Gets the menu panel DOM node. */\n    _resolvePanel() {\n        let menuPanel = null;\n        if (this._directDescendantItems.length) {\n            // Because the `mat-menuPanel` is at the DOM insertion point, not inside the overlay, we don't\n            // have a nice way of getting a hold of the menuPanel panel. We can't use a `ViewChild` either\n            // because the panel is inside an `ng-template`. We work around it by starting from one of\n            // the items and walking up the DOM.\n            menuPanel = this._directDescendantItems.first._getHostElement().closest('[role=\"menu\"]');\n        }\n        return menuPanel;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatMenu, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"20.0.0\", type: MatMenu, isStandalone: true, selector: \"mat-menu\", inputs: { backdropClass: \"backdropClass\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], xPosition: \"xPosition\", yPosition: \"yPosition\", overlapTrigger: [\"overlapTrigger\", \"overlapTrigger\", booleanAttribute], hasBackdrop: [\"hasBackdrop\", \"hasBackdrop\", (value) => (value == null ? null : booleanAttribute(value))], panelClass: [\"class\", \"panelClass\"], classList: \"classList\" }, outputs: { closed: \"closed\", close: \"close\" }, host: { properties: { \"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"attr.aria-describedby\": \"null\" } }, providers: [{ provide: MAT_MENU_PANEL, useExisting: MatMenu }], queries: [{ propertyName: \"lazyContent\", first: true, predicate: MAT_MENU_CONTENT, descendants: true }, { propertyName: \"_allItems\", predicate: MatMenuItem, descendants: true }, { propertyName: \"items\", predicate: MatMenuItem }], viewQueries: [{ propertyName: \"templateRef\", first: true, predicate: TemplateRef, descendants: true }], exportAs: [\"matMenu\"], ngImport: i0, template: \"<ng-template>\\n  <div\\n    class=\\\"mat-mdc-menu-panel\\\"\\n    [id]=\\\"panelId\\\"\\n    [class]=\\\"_classList\\\"\\n    [class.mat-menu-panel-animations-disabled]=\\\"_animationsDisabled\\\"\\n    [class.mat-menu-panel-exit-animation]=\\\"_panelAnimationState === 'void'\\\"\\n    [class.mat-menu-panel-animating]=\\\"_isAnimating\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    (animationstart)=\\\"_onAnimationStart($event.animationName)\\\"\\n    (animationend)=\\\"_onAnimationDone($event.animationName)\\\"\\n    (animationcancel)=\\\"_onAnimationDone($event.animationName)\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-mdc-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\"mat-menu{display:none}.mat-mdc-menu-content{margin:0;padding:8px 0;outline:0}.mat-mdc-menu-content,.mat-mdc-menu-content .mat-mdc-menu-item .mat-mdc-menu-item-text{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;flex:1;white-space:normal;font-family:var(--mat-menu-item-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-menu-item-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-menu-item-label-text-size, var(--mat-sys-label-large-size));letter-spacing:var(--mat-menu-item-label-text-tracking, var(--mat-sys-label-large-tracking));font-weight:var(--mat-menu-item-label-text-weight, var(--mat-sys-label-large-weight))}@keyframes _mat-menu-enter{from{opacity:0;transform:scale(0.8)}to{opacity:1;transform:none}}@keyframes _mat-menu-exit{from{opacity:1}to{opacity:0}}.mat-mdc-menu-panel{min-width:112px;max-width:280px;overflow:auto;box-sizing:border-box;outline:0;animation:_mat-menu-enter 120ms cubic-bezier(0, 0, 0.2, 1);border-radius:var(--mat-menu-container-shape, var(--mat-sys-corner-extra-small));background-color:var(--mat-menu-container-color, var(--mat-sys-surface-container));box-shadow:var(--mat-menu-container-elevation-shadow, 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12));will-change:transform,opacity}.mat-mdc-menu-panel.mat-menu-panel-exit-animation{animation:_mat-menu-exit 100ms 25ms linear forwards}.mat-mdc-menu-panel.mat-menu-panel-animations-disabled{animation:none}.mat-mdc-menu-panel.mat-menu-panel-animating{pointer-events:none}.mat-mdc-menu-panel.mat-menu-panel-animating:has(.mat-mdc-menu-content:empty){display:none}@media(forced-colors: active){.mat-mdc-menu-panel{outline:solid 1px}}.mat-mdc-menu-panel .mat-divider{color:var(--mat-menu-divider-color, var(--mat-sys-surface-variant));margin-bottom:var(--mat-menu-divider-bottom-spacing, 8px);margin-top:var(--mat-menu-divider-top-spacing, 8px)}.mat-mdc-menu-item{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;cursor:pointer;width:100%;text-align:left;box-sizing:border-box;color:inherit;font-size:inherit;background:none;text-decoration:none;margin:0;min-height:48px;padding-left:var(--mat-menu-item-leading-spacing, 12px);padding-right:var(--mat-menu-item-trailing-spacing, 12px);-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-menu-item::-moz-focus-inner{border:0}[dir=rtl] .mat-mdc-menu-item{padding-left:var(--mat-menu-item-trailing-spacing, 12px);padding-right:var(--mat-menu-item-leading-spacing, 12px)}.mat-mdc-menu-item:has(.material-icons,mat-icon,[matButtonIcon]){padding-left:var(--mat-menu-item-with-icon-leading-spacing, 12px);padding-right:var(--mat-menu-item-with-icon-trailing-spacing, 12px)}[dir=rtl] .mat-mdc-menu-item:has(.material-icons,mat-icon,[matButtonIcon]){padding-left:var(--mat-menu-item-with-icon-trailing-spacing, 12px);padding-right:var(--mat-menu-item-with-icon-leading-spacing, 12px)}.mat-mdc-menu-item,.mat-mdc-menu-item:visited,.mat-mdc-menu-item:link{color:var(--mat-menu-item-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-menu-item .mat-icon-no-color,.mat-mdc-menu-item .mat-mdc-menu-submenu-icon{color:var(--mat-menu-item-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-menu-item[disabled]{cursor:default;opacity:.38}.mat-mdc-menu-item[disabled]::after{display:block;position:absolute;content:\\\"\\\";top:0;left:0;bottom:0;right:0}.mat-mdc-menu-item:focus{outline:0}.mat-mdc-menu-item .mat-icon{flex-shrink:0;margin-right:var(--mat-menu-item-spacing, 12px);height:var(--mat-menu-item-icon-size, 24px);width:var(--mat-menu-item-icon-size, 24px)}[dir=rtl] .mat-mdc-menu-item{text-align:right}[dir=rtl] .mat-mdc-menu-item .mat-icon{margin-right:0;margin-left:var(--mat-menu-item-spacing, 12px)}.mat-mdc-menu-item:not([disabled]):hover{background-color:var(--mat-menu-item-hover-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-hover-state-layer-opacity) * 100%), transparent))}.mat-mdc-menu-item:not([disabled]).cdk-program-focused,.mat-mdc-menu-item:not([disabled]).cdk-keyboard-focused,.mat-mdc-menu-item:not([disabled]).mat-mdc-menu-item-highlighted{background-color:var(--mat-menu-item-focus-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-focus-state-layer-opacity) * 100%), transparent))}@media(forced-colors: active){.mat-mdc-menu-item{margin-top:1px}}.mat-mdc-menu-submenu-icon{width:var(--mat-menu-item-icon-size, 24px);height:10px;fill:currentColor;padding-left:var(--mat-menu-item-spacing, 12px)}[dir=rtl] .mat-mdc-menu-submenu-icon{padding-right:var(--mat-menu-item-spacing, 12px);padding-left:0}[dir=rtl] .mat-mdc-menu-submenu-icon polygon{transform:scaleX(-1);transform-origin:center}@media(forced-colors: active){.mat-mdc-menu-submenu-icon{fill:CanvasText}}.mat-mdc-menu-item .mat-mdc-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatMenu, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-menu', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, exportAs: 'matMenu', host: {\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[attr.aria-describedby]': 'null',\n                    }, providers: [{ provide: MAT_MENU_PANEL, useExisting: MatMenu }], template: \"<ng-template>\\n  <div\\n    class=\\\"mat-mdc-menu-panel\\\"\\n    [id]=\\\"panelId\\\"\\n    [class]=\\\"_classList\\\"\\n    [class.mat-menu-panel-animations-disabled]=\\\"_animationsDisabled\\\"\\n    [class.mat-menu-panel-exit-animation]=\\\"_panelAnimationState === 'void'\\\"\\n    [class.mat-menu-panel-animating]=\\\"_isAnimating\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    (animationstart)=\\\"_onAnimationStart($event.animationName)\\\"\\n    (animationend)=\\\"_onAnimationDone($event.animationName)\\\"\\n    (animationcancel)=\\\"_onAnimationDone($event.animationName)\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-mdc-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\"mat-menu{display:none}.mat-mdc-menu-content{margin:0;padding:8px 0;outline:0}.mat-mdc-menu-content,.mat-mdc-menu-content .mat-mdc-menu-item .mat-mdc-menu-item-text{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;flex:1;white-space:normal;font-family:var(--mat-menu-item-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-menu-item-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-menu-item-label-text-size, var(--mat-sys-label-large-size));letter-spacing:var(--mat-menu-item-label-text-tracking, var(--mat-sys-label-large-tracking));font-weight:var(--mat-menu-item-label-text-weight, var(--mat-sys-label-large-weight))}@keyframes _mat-menu-enter{from{opacity:0;transform:scale(0.8)}to{opacity:1;transform:none}}@keyframes _mat-menu-exit{from{opacity:1}to{opacity:0}}.mat-mdc-menu-panel{min-width:112px;max-width:280px;overflow:auto;box-sizing:border-box;outline:0;animation:_mat-menu-enter 120ms cubic-bezier(0, 0, 0.2, 1);border-radius:var(--mat-menu-container-shape, var(--mat-sys-corner-extra-small));background-color:var(--mat-menu-container-color, var(--mat-sys-surface-container));box-shadow:var(--mat-menu-container-elevation-shadow, 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12));will-change:transform,opacity}.mat-mdc-menu-panel.mat-menu-panel-exit-animation{animation:_mat-menu-exit 100ms 25ms linear forwards}.mat-mdc-menu-panel.mat-menu-panel-animations-disabled{animation:none}.mat-mdc-menu-panel.mat-menu-panel-animating{pointer-events:none}.mat-mdc-menu-panel.mat-menu-panel-animating:has(.mat-mdc-menu-content:empty){display:none}@media(forced-colors: active){.mat-mdc-menu-panel{outline:solid 1px}}.mat-mdc-menu-panel .mat-divider{color:var(--mat-menu-divider-color, var(--mat-sys-surface-variant));margin-bottom:var(--mat-menu-divider-bottom-spacing, 8px);margin-top:var(--mat-menu-divider-top-spacing, 8px)}.mat-mdc-menu-item{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;cursor:pointer;width:100%;text-align:left;box-sizing:border-box;color:inherit;font-size:inherit;background:none;text-decoration:none;margin:0;min-height:48px;padding-left:var(--mat-menu-item-leading-spacing, 12px);padding-right:var(--mat-menu-item-trailing-spacing, 12px);-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-menu-item::-moz-focus-inner{border:0}[dir=rtl] .mat-mdc-menu-item{padding-left:var(--mat-menu-item-trailing-spacing, 12px);padding-right:var(--mat-menu-item-leading-spacing, 12px)}.mat-mdc-menu-item:has(.material-icons,mat-icon,[matButtonIcon]){padding-left:var(--mat-menu-item-with-icon-leading-spacing, 12px);padding-right:var(--mat-menu-item-with-icon-trailing-spacing, 12px)}[dir=rtl] .mat-mdc-menu-item:has(.material-icons,mat-icon,[matButtonIcon]){padding-left:var(--mat-menu-item-with-icon-trailing-spacing, 12px);padding-right:var(--mat-menu-item-with-icon-leading-spacing, 12px)}.mat-mdc-menu-item,.mat-mdc-menu-item:visited,.mat-mdc-menu-item:link{color:var(--mat-menu-item-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-menu-item .mat-icon-no-color,.mat-mdc-menu-item .mat-mdc-menu-submenu-icon{color:var(--mat-menu-item-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-menu-item[disabled]{cursor:default;opacity:.38}.mat-mdc-menu-item[disabled]::after{display:block;position:absolute;content:\\\"\\\";top:0;left:0;bottom:0;right:0}.mat-mdc-menu-item:focus{outline:0}.mat-mdc-menu-item .mat-icon{flex-shrink:0;margin-right:var(--mat-menu-item-spacing, 12px);height:var(--mat-menu-item-icon-size, 24px);width:var(--mat-menu-item-icon-size, 24px)}[dir=rtl] .mat-mdc-menu-item{text-align:right}[dir=rtl] .mat-mdc-menu-item .mat-icon{margin-right:0;margin-left:var(--mat-menu-item-spacing, 12px)}.mat-mdc-menu-item:not([disabled]):hover{background-color:var(--mat-menu-item-hover-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-hover-state-layer-opacity) * 100%), transparent))}.mat-mdc-menu-item:not([disabled]).cdk-program-focused,.mat-mdc-menu-item:not([disabled]).cdk-keyboard-focused,.mat-mdc-menu-item:not([disabled]).mat-mdc-menu-item-highlighted{background-color:var(--mat-menu-item-focus-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-focus-state-layer-opacity) * 100%), transparent))}@media(forced-colors: active){.mat-mdc-menu-item{margin-top:1px}}.mat-mdc-menu-submenu-icon{width:var(--mat-menu-item-icon-size, 24px);height:10px;fill:currentColor;padding-left:var(--mat-menu-item-spacing, 12px)}[dir=rtl] .mat-mdc-menu-submenu-icon{padding-right:var(--mat-menu-item-spacing, 12px);padding-left:0}[dir=rtl] .mat-mdc-menu-submenu-icon polygon{transform:scaleX(-1);transform-origin:center}@media(forced-colors: active){.mat-mdc-menu-submenu-icon{fill:CanvasText}}.mat-mdc-menu-item .mat-mdc-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { _allItems: [{\n                type: ContentChildren,\n                args: [MatMenuItem, { descendants: true }]\n            }], backdropClass: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], ariaDescribedby: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], xPosition: [{\n                type: Input\n            }], yPosition: [{\n                type: Input\n            }], templateRef: [{\n                type: ViewChild,\n                args: [TemplateRef]\n            }], items: [{\n                type: ContentChildren,\n                args: [MatMenuItem, { descendants: false }]\n            }], lazyContent: [{\n                type: ContentChild,\n                args: [MAT_MENU_CONTENT]\n            }], overlapTrigger: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], hasBackdrop: [{\n                type: Input,\n                args: [{ transform: (value) => (value == null ? null : booleanAttribute(value)) }]\n            }], panelClass: [{\n                type: Input,\n                args: ['class']\n            }], classList: [{\n                type: Input\n            }], closed: [{\n                type: Output\n            }], close: [{\n                type: Output\n            }] } });\n\n/** Injection token that determines the scroll handling while the menu is open. */\nconst MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy', {\n    providedIn: 'root',\n    factory: () => {\n        const injector = inject(Injector);\n        return () => createRepositionScrollStrategy(injector);\n    },\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(_overlay) {\n    const injector = inject(Injector);\n    return () => createRepositionScrollStrategy(injector);\n}\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_MENU_SCROLL_STRATEGY,\n    deps: [],\n    useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Default top padding of the menu panel.\n * @deprecated No longer being used. Will be removed.\n * @breaking-change 15.0.0\n */\nconst MENU_PANEL_TOP_PADDING = 8;\n/** Mapping between menu panels and the last trigger that opened them. */\nconst PANELS_TO_TRIGGERS = new WeakMap();\n/** Directive applied to an element that should trigger a `mat-menu`. */\nclass MatMenuTrigger {\n    _element = inject(ElementRef);\n    _viewContainerRef = inject(ViewContainerRef);\n    _menuItemInstance = inject(MatMenuItem, { optional: true, self: true });\n    _dir = inject(Directionality, { optional: true });\n    _focusMonitor = inject(FocusMonitor);\n    _ngZone = inject(NgZone);\n    _injector = inject(Injector);\n    _scrollStrategy = inject(MAT_MENU_SCROLL_STRATEGY);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _animationsDisabled = _animationsDisabled();\n    _cleanupTouchstart;\n    _portal;\n    _overlayRef = null;\n    _menuOpen = false;\n    _closingActionsSubscription = Subscription.EMPTY;\n    _hoverSubscription = Subscription.EMPTY;\n    _menuCloseSubscription = Subscription.EMPTY;\n    _pendingRemoval;\n    /**\n     * We're specifically looking for a `MatMenu` here since the generic `MatMenuPanel`\n     * interface lacks some functionality around nested menus and animations.\n     */\n    _parentMaterialMenu;\n    /**\n     * Cached value of the padding of the parent menu panel.\n     * Used to offset sub-menus to compensate for the padding.\n     */\n    _parentInnerPadding;\n    // Tracking input type is necessary so it's possible to only auto-focus\n    // the first item of the list when the menu is opened via the keyboard\n    _openedBy = undefined;\n    /**\n     * @deprecated\n     * @breaking-change 8.0.0\n     */\n    get _deprecatedMatMenuTriggerFor() {\n        return this.menu;\n    }\n    set _deprecatedMatMenuTriggerFor(v) {\n        this.menu = v;\n    }\n    /** References the menu instance that the trigger is associated with. */\n    get menu() {\n        return this._menu;\n    }\n    set menu(menu) {\n        if (menu === this._menu) {\n            return;\n        }\n        this._menu = menu;\n        this._menuCloseSubscription.unsubscribe();\n        if (menu) {\n            if (menu === this._parentMaterialMenu && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throwMatMenuRecursiveError();\n            }\n            this._menuCloseSubscription = menu.close.subscribe((reason) => {\n                this._destroyMenu(reason);\n                // If a click closed the menu, we should close the entire chain of nested menus.\n                if ((reason === 'click' || reason === 'tab') && this._parentMaterialMenu) {\n                    this._parentMaterialMenu.closed.emit(reason);\n                }\n            });\n        }\n        this._menuItemInstance?._setTriggersSubmenu(this.triggersSubmenu());\n    }\n    _menu;\n    /** Data to be passed along to any lazily-rendered content. */\n    menuData;\n    /**\n     * Whether focus should be restored when the menu is closed.\n     * Note that disabling this option can have accessibility implications\n     * and it's up to you to manage focus, if you decide to turn it off.\n     */\n    restoreFocus = true;\n    /** Event emitted when the associated menu is opened. */\n    menuOpened = new EventEmitter();\n    /**\n     * Event emitted when the associated menu is opened.\n     * @deprecated Switch to `menuOpened` instead\n     * @breaking-change 8.0.0\n     */\n    // tslint:disable-next-line:no-output-on-prefix\n    onMenuOpen = this.menuOpened;\n    /** Event emitted when the associated menu is closed. */\n    menuClosed = new EventEmitter();\n    /**\n     * Event emitted when the associated menu is closed.\n     * @deprecated Switch to `menuClosed` instead\n     * @breaking-change 8.0.0\n     */\n    // tslint:disable-next-line:no-output-on-prefix\n    onMenuClose = this.menuClosed;\n    constructor() {\n        const parentMenu = inject(MAT_MENU_PANEL, { optional: true });\n        const renderer = inject(Renderer2);\n        this._parentMaterialMenu = parentMenu instanceof MatMenu ? parentMenu : undefined;\n        this._cleanupTouchstart = renderer.listen(this._element.nativeElement, 'touchstart', (event) => {\n            if (!isFakeTouchstartFromScreenReader(event)) {\n                this._openedBy = 'touch';\n            }\n        }, { passive: true });\n    }\n    ngAfterContentInit() {\n        this._handleHover();\n    }\n    ngOnDestroy() {\n        if (this.menu && this._ownsMenu(this.menu)) {\n            PANELS_TO_TRIGGERS.delete(this.menu);\n        }\n        this._cleanupTouchstart();\n        this._pendingRemoval?.unsubscribe();\n        this._menuCloseSubscription.unsubscribe();\n        this._closingActionsSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n    }\n    /** Whether the menu is open. */\n    get menuOpen() {\n        return this._menuOpen;\n    }\n    /** The text direction of the containing app. */\n    get dir() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the menu triggers a sub-menu or a top-level one. */\n    triggersSubmenu() {\n        return !!(this._menuItemInstance && this._parentMaterialMenu && this.menu);\n    }\n    /** Toggles the menu between the open and closed states. */\n    toggleMenu() {\n        return this._menuOpen ? this.closeMenu() : this.openMenu();\n    }\n    /** Opens the menu. */\n    openMenu() {\n        const menu = this.menu;\n        if (this._menuOpen || !menu) {\n            return;\n        }\n        this._pendingRemoval?.unsubscribe();\n        const previousTrigger = PANELS_TO_TRIGGERS.get(menu);\n        PANELS_TO_TRIGGERS.set(menu, this);\n        // If the same menu is currently attached to another trigger,\n        // we need to close it so it doesn't end up in a broken state.\n        if (previousTrigger && previousTrigger !== this) {\n            previousTrigger.closeMenu();\n        }\n        const overlayRef = this._createOverlay(menu);\n        const overlayConfig = overlayRef.getConfig();\n        const positionStrategy = overlayConfig.positionStrategy;\n        this._setPosition(menu, positionStrategy);\n        overlayConfig.hasBackdrop =\n            menu.hasBackdrop == null ? !this.triggersSubmenu() : menu.hasBackdrop;\n        // We need the `hasAttached` check for the case where the user kicked off a removal animation,\n        // but re-entered the menu. Re-attaching the same portal will trigger an error otherwise.\n        if (!overlayRef.hasAttached()) {\n            overlayRef.attach(this._getPortal(menu));\n            menu.lazyContent?.attach(this.menuData);\n        }\n        this._closingActionsSubscription = this._menuClosingActions().subscribe(() => this.closeMenu());\n        menu.parentMenu = this.triggersSubmenu() ? this._parentMaterialMenu : undefined;\n        menu.direction = this.dir;\n        menu.focusFirstItem(this._openedBy || 'program');\n        this._setIsMenuOpen(true);\n        if (menu instanceof MatMenu) {\n            menu._setIsOpen(true);\n            menu._directDescendantItems.changes.pipe(takeUntil(menu.close)).subscribe(() => {\n                // Re-adjust the position without locking when the amount of items\n                // changes so that the overlay is allowed to pick a new optimal position.\n                positionStrategy.withLockedPosition(false).reapplyLastPosition();\n                positionStrategy.withLockedPosition(true);\n            });\n        }\n    }\n    /** Closes the menu. */\n    closeMenu() {\n        this.menu?.close.emit();\n    }\n    /**\n     * Focuses the menu trigger.\n     * @param origin Source of the menu trigger's focus.\n     */\n    focus(origin, options) {\n        if (this._focusMonitor && origin) {\n            this._focusMonitor.focusVia(this._element, origin, options);\n        }\n        else {\n            this._element.nativeElement.focus(options);\n        }\n    }\n    /**\n     * Updates the position of the menu to ensure that it fits all options within the viewport.\n     */\n    updatePosition() {\n        this._overlayRef?.updatePosition();\n    }\n    /** Closes the menu and does the necessary cleanup. */\n    _destroyMenu(reason) {\n        const overlayRef = this._overlayRef;\n        const menu = this._menu;\n        if (!overlayRef || !this.menuOpen) {\n            return;\n        }\n        this._closingActionsSubscription.unsubscribe();\n        this._pendingRemoval?.unsubscribe();\n        // Note that we don't wait for the animation to finish if another trigger took\n        // over the menu, because the panel will end up empty which looks glitchy.\n        if (menu instanceof MatMenu && this._ownsMenu(menu)) {\n            this._pendingRemoval = menu._animationDone.pipe(take(1)).subscribe(() => {\n                overlayRef.detach();\n                menu.lazyContent?.detach();\n            });\n            menu._setIsOpen(false);\n        }\n        else {\n            overlayRef.detach();\n            menu?.lazyContent?.detach();\n        }\n        if (menu && this._ownsMenu(menu)) {\n            PANELS_TO_TRIGGERS.delete(menu);\n        }\n        // Always restore focus if the user is navigating using the keyboard or the menu was opened\n        // programmatically. We don't restore for non-root triggers, because it can prevent focus\n        // from making it back to the root trigger when closing a long chain of menus by clicking\n        // on the backdrop.\n        if (this.restoreFocus && (reason === 'keydown' || !this._openedBy || !this.triggersSubmenu())) {\n            this.focus(this._openedBy);\n        }\n        this._openedBy = undefined;\n        this._setIsMenuOpen(false);\n    }\n    // set state rather than toggle to support triggers sharing a menu\n    _setIsMenuOpen(isOpen) {\n        if (isOpen !== this._menuOpen) {\n            this._menuOpen = isOpen;\n            this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n            if (this.triggersSubmenu()) {\n                this._menuItemInstance._setHighlighted(isOpen);\n            }\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * This method creates the overlay from the provided menu's template and saves its\n     * OverlayRef so that it can be attached to the DOM when openMenu is called.\n     */\n    _createOverlay(menu) {\n        if (!this._overlayRef) {\n            const config = this._getOverlayConfig(menu);\n            this._subscribeToPositions(menu, config.positionStrategy);\n            this._overlayRef = createOverlayRef(this._injector, config);\n            this._overlayRef.keydownEvents().subscribe(event => {\n                if (this.menu instanceof MatMenu) {\n                    this.menu._handleKeydown(event);\n                }\n            });\n        }\n        return this._overlayRef;\n    }\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    _getOverlayConfig(menu) {\n        return new OverlayConfig({\n            positionStrategy: createFlexibleConnectedPositionStrategy(this._injector, this._element)\n                .withLockedPosition()\n                .withGrowAfterOpen()\n                .withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),\n            backdropClass: menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n            panelClass: menu.overlayPanelClass,\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir || 'ltr',\n            disableAnimations: this._animationsDisabled,\n        });\n    }\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the menu based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    _subscribeToPositions(menu, position) {\n        if (menu.setPositionClasses) {\n            position.positionChanges.subscribe(change => {\n                this._ngZone.run(() => {\n                    const posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                    const posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n                    menu.setPositionClasses(posX, posY);\n                });\n            });\n        }\n    }\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    _setPosition(menu, positionStrategy) {\n        let [originX, originFallbackX] = menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n        let [overlayY, overlayFallbackY] = menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        let offsetY = 0;\n        if (this.triggersSubmenu()) {\n            // When the menu is a sub-menu, it should always align itself\n            // to the edges of the trigger, instead of overlapping it.\n            overlayFallbackX = originX = menu.xPosition === 'before' ? 'start' : 'end';\n            originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n            if (this._parentMaterialMenu) {\n                if (this._parentInnerPadding == null) {\n                    const firstItem = this._parentMaterialMenu.items.first;\n                    this._parentInnerPadding = firstItem ? firstItem._getHostElement().offsetTop : 0;\n                }\n                offsetY = overlayY === 'bottom' ? this._parentInnerPadding : -this._parentInnerPadding;\n            }\n        }\n        else if (!menu.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n        positionStrategy.withPositions([\n            { originX, originY, overlayX, overlayY, offsetY },\n            { originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY },\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY,\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY,\n            },\n        ]);\n    }\n    /** Returns a stream that emits whenever an action that should close the menu occurs. */\n    _menuClosingActions() {\n        const backdrop = this._overlayRef.backdropClick();\n        const detachments = this._overlayRef.detachments();\n        const parentClose = this._parentMaterialMenu ? this._parentMaterialMenu.closed : of();\n        const hover = this._parentMaterialMenu\n            ? this._parentMaterialMenu\n                ._hovered()\n                .pipe(filter(active => this._menuOpen && active !== this._menuItemInstance))\n            : of();\n        return merge(backdrop, parentClose, hover, detachments);\n    }\n    /** Handles mouse presses on the trigger. */\n    _handleMousedown(event) {\n        if (!isFakeMousedownFromScreenReader(event)) {\n            // Since right or middle button clicks won't trigger the `click` event,\n            // we shouldn't consider the menu as opened by mouse in those cases.\n            this._openedBy = event.button === 0 ? 'mouse' : undefined;\n            // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n            // we should prevent focus from moving onto it via click to avoid the\n            // highlight from lingering on the menu item.\n            if (this.triggersSubmenu()) {\n                event.preventDefault();\n            }\n        }\n    }\n    /** Handles key presses on the trigger. */\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        // Pressing enter on the trigger will trigger the click handler later.\n        if (keyCode === ENTER || keyCode === SPACE) {\n            this._openedBy = 'keyboard';\n        }\n        if (this.triggersSubmenu() &&\n            ((keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n                (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n            this._openedBy = 'keyboard';\n            this.openMenu();\n        }\n    }\n    /** Handles click events on the trigger. */\n    _handleClick(event) {\n        if (this.triggersSubmenu()) {\n            // Stop event propagation to avoid closing the parent menu.\n            event.stopPropagation();\n            this.openMenu();\n        }\n        else {\n            this.toggleMenu();\n        }\n    }\n    /** Handles the cases where the user hovers over the trigger. */\n    _handleHover() {\n        // Subscribe to changes in the hovered item in order to toggle the panel.\n        if (this.triggersSubmenu() && this._parentMaterialMenu) {\n            this._hoverSubscription = this._parentMaterialMenu._hovered().subscribe(active => {\n                if (active === this._menuItemInstance && !active.disabled) {\n                    this._openedBy = 'mouse';\n                    this.openMenu();\n                }\n            });\n        }\n    }\n    /** Gets the portal that should be attached to the overlay. */\n    _getPortal(menu) {\n        // Note that we can avoid this check by keeping the portal on the menu panel.\n        // While it would be cleaner, we'd have to introduce another required method on\n        // `MatMenuPanel`, making it harder to consume.\n        if (!this._portal || this._portal.templateRef !== menu.templateRef) {\n            this._portal = new TemplatePortal(menu.templateRef, this._viewContainerRef);\n        }\n        return this._portal;\n    }\n    /**\n     * Determines whether the trigger owns a specific menu panel, at the current point in time.\n     * This allows us to distinguish the case where the same panel is passed into multiple triggers\n     * and multiple are open at a time.\n     */\n    _ownsMenu(menu) {\n        return PANELS_TO_TRIGGERS.get(menu) === this;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatMenuTrigger, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatMenuTrigger, isStandalone: true, selector: \"[mat-menu-trigger-for], [matMenuTriggerFor]\", inputs: { _deprecatedMatMenuTriggerFor: [\"mat-menu-trigger-for\", \"_deprecatedMatMenuTriggerFor\"], menu: [\"matMenuTriggerFor\", \"menu\"], menuData: [\"matMenuTriggerData\", \"menuData\"], restoreFocus: [\"matMenuTriggerRestoreFocus\", \"restoreFocus\"] }, outputs: { menuOpened: \"menuOpened\", onMenuOpen: \"onMenuOpen\", menuClosed: \"menuClosed\", onMenuClose: \"onMenuClose\" }, host: { listeners: { \"click\": \"_handleClick($event)\", \"mousedown\": \"_handleMousedown($event)\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.aria-haspopup\": \"menu ? \\\"menu\\\" : null\", \"attr.aria-expanded\": \"menuOpen\", \"attr.aria-controls\": \"menuOpen ? menu?.panelId : null\" }, classAttribute: \"mat-mdc-menu-trigger\" }, exportAs: [\"matMenuTrigger\"], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatMenuTrigger, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n                    host: {\n                        'class': 'mat-mdc-menu-trigger',\n                        '[attr.aria-haspopup]': 'menu ? \"menu\" : null',\n                        '[attr.aria-expanded]': 'menuOpen',\n                        '[attr.aria-controls]': 'menuOpen ? menu?.panelId : null',\n                        '(click)': '_handleClick($event)',\n                        '(mousedown)': '_handleMousedown($event)',\n                        '(keydown)': '_handleKeydown($event)',\n                    },\n                    exportAs: 'matMenuTrigger',\n                }]\n        }], ctorParameters: () => [], propDecorators: { _deprecatedMatMenuTriggerFor: [{\n                type: Input,\n                args: ['mat-menu-trigger-for']\n            }], menu: [{\n                type: Input,\n                args: ['matMenuTriggerFor']\n            }], menuData: [{\n                type: Input,\n                args: ['matMenuTriggerData']\n            }], restoreFocus: [{\n                type: Input,\n                args: ['matMenuTriggerRestoreFocus']\n            }], menuOpened: [{\n                type: Output\n            }], onMenuOpen: [{\n                type: Output\n            }], menuClosed: [{\n                type: Output\n            }], onMenuClose: [{\n                type: Output\n            }] } });\n\nclass MatMenuModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatMenuModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatMenuModule, imports: [MatRippleModule,\n            MatCommonModule,\n            OverlayModule,\n            MatMenu,\n            MatMenuItem,\n            MatMenuContent,\n            MatMenuTrigger], exports: [CdkScrollableModule,\n            MatMenu,\n            MatCommonModule,\n            MatMenuItem,\n            MatMenuContent,\n            MatMenuTrigger] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatMenuModule, providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [MatRippleModule,\n            MatCommonModule,\n            OverlayModule, CdkScrollableModule,\n            MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatMenuModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        MatRippleModule,\n                        MatCommonModule,\n                        OverlayModule,\n                        MatMenu,\n                        MatMenuItem,\n                        MatMenuContent,\n                        MatMenuTrigger,\n                    ],\n                    exports: [\n                        CdkScrollableModule,\n                        MatMenu,\n                        MatCommonModule,\n                        MatMenuItem,\n                        MatMenuContent,\n                        MatMenuTrigger,\n                    ],\n                    providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst matMenuAnimations = {\n    // Represents:\n    // trigger('transformMenu', [\n    //   state(\n    //     'void',\n    //     style({\n    //       opacity: 0,\n    //       transform: 'scale(0.8)',\n    //     }),\n    //   ),\n    //   transition(\n    //     'void => enter',\n    //     animate(\n    //       '120ms cubic-bezier(0, 0, 0.2, 1)',\n    //       style({\n    //         opacity: 1,\n    //         transform: 'scale(1)',\n    //       }),\n    //     ),\n    //   ),\n    //   transition('* => void', animate('100ms 25ms linear', style({opacity: 0}))),\n    // ])\n    /**\n     * This animation controls the menu panel's entry and exit from the page.\n     *\n     * When the menu panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the menu panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformMenu: {\n        type: 7,\n        name: 'transformMenu',\n        definitions: [\n            {\n                type: 0,\n                name: 'void',\n                styles: { type: 6, styles: { opacity: 0, transform: 'scale(0.8)' }, offset: null },\n            },\n            {\n                type: 1,\n                expr: 'void => enter',\n                animation: {\n                    type: 4,\n                    styles: { type: 6, styles: { opacity: 1, transform: 'scale(1)' }, offset: null },\n                    timings: '120ms cubic-bezier(0, 0, 0.2, 1)',\n                },\n                options: null,\n            },\n            {\n                type: 1,\n                expr: '* => void',\n                animation: {\n                    type: 4,\n                    styles: { type: 6, styles: { opacity: 0 }, offset: null },\n                    timings: '100ms 25ms linear',\n                },\n                options: null,\n            },\n        ],\n        options: {},\n    },\n    // Represents:\n    // trigger('fadeInItems', [\n    //   // TODO(crisbeto): this is inside the `transformMenu`\n    //   // now. Remove next time we do breaking changes.\n    //   state('showing', style({opacity: 1})),\n    //   transition('void => *', [\n    //     style({opacity: 0}),\n    //     animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n    //   ]),\n    // ])\n    /**\n     * This animation fades in the background color and content of the menu panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: {\n        type: 7,\n        name: 'fadeInItems',\n        definitions: [\n            {\n                type: 0,\n                name: 'showing',\n                styles: { type: 6, styles: { opacity: 1 }, offset: null },\n            },\n            {\n                type: 1,\n                expr: 'void => *',\n                animation: [\n                    { type: 6, styles: { opacity: 0 }, offset: null },\n                    { type: 4, styles: null, timings: '400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)' },\n                ],\n                options: null,\n            },\n        ],\n        options: {},\n    },\n};\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst fadeInItems = matMenuAnimations.fadeInItems;\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst transformMenu = matMenuAnimations.transformMenu;\n\nexport { MAT_MENU_CONTENT, MAT_MENU_DEFAULT_OPTIONS, MAT_MENU_PANEL, MAT_MENU_SCROLL_STRATEGY, MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER, MENU_PANEL_TOP_PADDING, MatMenu, MatMenuContent, MatMenuItem, MatMenuModule, MatMenuTrigger, fadeInItems, matMenuAnimations, transformMenu };\n\n","import * as i0 from '@angular/core';\nimport { Directive, inject, ElementRef, DOCUMENT, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, ContentChildren, NgModule } from '@angular/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/bidi';\n\nclass MatToolbarRow {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatToolbarRow, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatToolbarRow, isStandalone: true, selector: \"mat-toolbar-row\", host: { classAttribute: \"mat-toolbar-row\" }, exportAs: [\"matToolbarRow\"], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatToolbarRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-toolbar-row',\n                    exportAs: 'matToolbarRow',\n                    host: { 'class': 'mat-toolbar-row' },\n                }]\n        }] });\nclass MatToolbar {\n    _elementRef = inject(ElementRef);\n    _platform = inject(Platform);\n    _document = inject(DOCUMENT);\n    // TODO: should be typed as `ThemePalette` but internal apps pass in arbitrary strings.\n    /**\n     * Theme color of the toolbar. This API is supported in M2 themes only, it has\n     * no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/toolbar/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    color;\n    /** Reference to all toolbar row elements that have been projected. */\n    _toolbarRows;\n    constructor() { }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._checkToolbarMixedModes();\n            this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes());\n        }\n    }\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     */\n    _checkToolbarMixedModes() {\n        if (this._toolbarRows.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            // Check if there are any other DOM nodes that can display content but aren't inside of\n            // a <mat-toolbar-row> element.\n            const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes)\n                .filter(node => !(node.classList && node.classList.contains('mat-toolbar-row')))\n                .filter(node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8))\n                .some(node => !!(node.textContent && node.textContent.trim()));\n            if (isCombinedUsage) {\n                throwToolbarMixedModesError();\n            }\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatToolbar, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatToolbar, isStandalone: true, selector: \"mat-toolbar\", inputs: { color: \"color\" }, host: { properties: { \"class\": \"color ? \\\"mat-\\\" + color : \\\"\\\"\", \"class.mat-toolbar-multiple-rows\": \"_toolbarRows.length > 0\", \"class.mat-toolbar-single-row\": \"_toolbarRows.length === 0\" }, classAttribute: \"mat-toolbar\" }, queries: [{ propertyName: \"_toolbarRows\", predicate: MatToolbarRow, descendants: true }], exportAs: [\"matToolbar\"], ngImport: i0, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".mat-toolbar{background:var(--mat-toolbar-container-background-color, var(--mat-sys-surface));color:var(--mat-toolbar-container-text-color, var(--mat-sys-on-surface))}.mat-toolbar,.mat-toolbar h1,.mat-toolbar h2,.mat-toolbar h3,.mat-toolbar h4,.mat-toolbar h5,.mat-toolbar h6{font-family:var(--mat-toolbar-title-text-font, var(--mat-sys-title-large-font));font-size:var(--mat-toolbar-title-text-size, var(--mat-sys-title-large-size));line-height:var(--mat-toolbar-title-text-line-height, var(--mat-sys-title-large-line-height));font-weight:var(--mat-toolbar-title-text-weight, var(--mat-sys-title-large-weight));letter-spacing:var(--mat-toolbar-title-text-tracking, var(--mat-sys-title-large-tracking));margin:0}@media(forced-colors: active){.mat-toolbar{outline:solid 1px}}.mat-toolbar .mat-form-field-underline,.mat-toolbar .mat-form-field-ripple,.mat-toolbar .mat-focused .mat-form-field-ripple{background-color:currentColor}.mat-toolbar .mat-form-field-label,.mat-toolbar .mat-focused .mat-form-field-label,.mat-toolbar .mat-select-value,.mat-toolbar .mat-select-arrow,.mat-toolbar .mat-form-field.mat-focused .mat-select-arrow{color:inherit}.mat-toolbar .mat-input-element{caret-color:currentColor}.mat-toolbar .mat-mdc-button-base.mat-mdc-button-base.mat-unthemed{--mat-button-text-label-text-color: var(--mat-toolbar-container-text-color, var(--mat-sys-on-surface));--mat-button-outlined-label-text-color: var(--mat-toolbar-container-text-color, var(--mat-sys-on-surface))}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap;height:var(--mat-toolbar-standard-height, 64px)}@media(max-width: 599px){.mat-toolbar-row,.mat-toolbar-single-row{height:var(--mat-toolbar-mobile-height, 56px)}}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%;min-height:var(--mat-toolbar-standard-height, 64px)}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:var(--mat-toolbar-mobile-height, 56px)}}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatToolbar, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-toolbar', exportAs: 'matToolbar', host: {\n                        'class': 'mat-toolbar',\n                        '[class]': 'color ? \"mat-\" + color : \"\"',\n                        '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n                        '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".mat-toolbar{background:var(--mat-toolbar-container-background-color, var(--mat-sys-surface));color:var(--mat-toolbar-container-text-color, var(--mat-sys-on-surface))}.mat-toolbar,.mat-toolbar h1,.mat-toolbar h2,.mat-toolbar h3,.mat-toolbar h4,.mat-toolbar h5,.mat-toolbar h6{font-family:var(--mat-toolbar-title-text-font, var(--mat-sys-title-large-font));font-size:var(--mat-toolbar-title-text-size, var(--mat-sys-title-large-size));line-height:var(--mat-toolbar-title-text-line-height, var(--mat-sys-title-large-line-height));font-weight:var(--mat-toolbar-title-text-weight, var(--mat-sys-title-large-weight));letter-spacing:var(--mat-toolbar-title-text-tracking, var(--mat-sys-title-large-tracking));margin:0}@media(forced-colors: active){.mat-toolbar{outline:solid 1px}}.mat-toolbar .mat-form-field-underline,.mat-toolbar .mat-form-field-ripple,.mat-toolbar .mat-focused .mat-form-field-ripple{background-color:currentColor}.mat-toolbar .mat-form-field-label,.mat-toolbar .mat-focused .mat-form-field-label,.mat-toolbar .mat-select-value,.mat-toolbar .mat-select-arrow,.mat-toolbar .mat-form-field.mat-focused .mat-select-arrow{color:inherit}.mat-toolbar .mat-input-element{caret-color:currentColor}.mat-toolbar .mat-mdc-button-base.mat-mdc-button-base.mat-unthemed{--mat-button-text-label-text-color: var(--mat-toolbar-container-text-color, var(--mat-sys-on-surface));--mat-button-outlined-label-text-color: var(--mat-toolbar-container-text-color, var(--mat-sys-on-surface))}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap;height:var(--mat-toolbar-standard-height, 64px)}@media(max-width: 599px){.mat-toolbar-row,.mat-toolbar-single-row{height:var(--mat-toolbar-mobile-height, 56px)}}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%;min-height:var(--mat-toolbar-standard-height, 64px)}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:var(--mat-toolbar-mobile-height, 56px)}}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { color: [{\n                type: Input\n            }], _toolbarRows: [{\n                type: ContentChildren,\n                args: [MatToolbarRow, { descendants: true }]\n            }] } });\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * @docs-private\n */\nfunction throwToolbarMixedModesError() {\n    throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n        'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n        'inside of a `<mat-toolbar>` for a single row.');\n}\n\nclass MatToolbarModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatToolbarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatToolbarModule, imports: [MatCommonModule, MatToolbar, MatToolbarRow], exports: [MatToolbar, MatToolbarRow, MatCommonModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatToolbarModule, imports: [MatCommonModule, MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatToolbarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, MatToolbar, MatToolbarRow],\n                    exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n                }]\n        }] });\n\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n\n","<mat-toolbar class=\"navbar\">\n    <button matIconButton class=\"menu-button\" [matMenuTriggerFor]=\"navMenu\" >\n        <mat-icon>menu</mat-icon>\n    </button>\n    <span \n    class=\"toolbar-title\"\n    (click)=\"navigate('/documents')\">\n        Document Sharing System\n    </span>\n    \n    <span class=\"spacer\"></span>\n\n    <div class=\"nav-buttons\">\n\n      <button [matButton]=\"currentUrl() == 'documents'? 'filled' : 'text' \"  (click)=\"navigate('/documents')\">\n          Documents\n        </button>\n        <button [matButton]=\"currentUrl() == 'users'? 'filled' : 'text' \"  (click)=\"navigate('/users')\">\n            Users\n        </button>\n        @if(currentUser?.role == \"Admin\"){\n            <button [matButton]=\"currentUrl() == 'teams'? 'filled' : 'text' \"  (click)=\"navigate('/teams')\">\n                Teams\n            </button>\n        }\n        <button [matButton]=\"currentUrl() == 'notifications'? 'filled' : 'text' \"  (click)=\"navigate('/notifications')\">\n            Notifications\n        </button>\n        @if(currentUser?.role == \"Admin\"){\n            <button [matButton]=\"currentUrl() == 'requests'? 'filled' : 'text' \"  (click)=\"navigate('/requests')\">\n                ViewRequests\n            </button>\n        }@else{\n            <button [matButton]=\"currentUrl() == 'requests'? 'filled' : 'text' \"  (click)=\"navigate('/requests/users')\">\n                ViewRequests\n            </button>\n        }\n        </div>\n\n    <button matButton=\"text\" [matMenuTriggerFor]=\"profileMenu\">\n        <mat-icon>account_circle</mat-icon>\n        {{currentUser?.name}}\n    </button>\n  \n    <mat-menu #profileMenu=\"matMenu\">\n        <button mat-menu-item (click)=\"editUser()\">\n            <mat-icon>switch_account</mat-icon>\n            Update Profile\n        </button>\n        <button mat-menu-item (click)=\"logout()\">\n            <mat-icon>logout</mat-icon>\n            Logout\n        </button>\n    </mat-menu>\n\n    <mat-menu #navMenu=\"matMenu\">\n        <button mat-menu-item (click)=\"navigate('/documents')\">Documents</button>\n        <button mat-menu-item (click)=\"navigate('/users')\">Users</button>\n        @if(currentUser?.role == \"Admin\"){\n            <button mat-menu-item (click)=\"navigate('/teams')\">Teams</button>\n        }\n        <button mat-menu-item (click)=\"navigate('/notifications')\">Notifications</button>\n    </mat-menu>\n</mat-toolbar>","/* src/app/navbar/navbar.css */\n.navbar {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n}\n.toolbar-title {\n  font-weight: 500;\n  font-size: 18px;\n  cursor: pointer;\n}\n.nav-buttons {\n  display: flex;\n  gap: 8px;\n}\n.spacer {\n  flex: 1 1 auto;\n}\n.menu-button {\n  display: none;\n}\n@media screen and (max-width: 768px) {\n  .navbar {\n    width: 100%;\n  }\n  .nav-buttons {\n    display: none;\n  }\n  .menu-button {\n    display: inline-flex;\n  }\n  .toolbar-title {\n    font-size: 16px;\n  }\n}\n/*# sourceMappingURL=navbar.css.map */\n","import { Component, signal } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from '../services/user.service';\nimport { UserModel } from '../models/user.model';\nimport { Store } from '@ngxs/store';\nimport { CurrentUserState } from '../current-user/current-user.state';\n\n@Component({\n  selector: 'app-navbar',\n  imports: [MatToolbarModule, MatIconModule, MatButtonModule,MatMenuModule],\n  templateUrl: './navbar.html',\n  styleUrl: './navbar.css'\n})\nexport class Navbar {\n\tcurrentUrl = signal(\"\");\n\tcurrentUser : UserModel | null = null;\n\tconstructor(private route : ActivatedRoute, private router : Router, private userService : UserService, private store : Store){\n\t\tthis.currentUrl.set(route.snapshot.url.toString());\n\n\t\tthis.store.select(CurrentUserState.getUser).subscribe({\n\t\t\tnext : (data : any) =>{\n\t\t\t\tthis.currentUser = data;\n\t\t\t}\n\t\t})\n\t\tif(this.currentUser==null){\n\t\t\tuserService.getCurrentUserDetails().subscribe({\n      \t\t\tnext : (data: UserModel | null) => {\n        \t\t\tthis.currentUser = data;\n      \t\t\t}\n    \t\t});\n    \t}\n\t}\n\tnavigate(url : string){\n\t\tthis.router.navigateByUrl(url);\n\t}\n\teditUser(){\n\t\tthis.router.navigate(['users','edit',this.currentUser?.id]);\n\t}\n\tlogout(){\n\t\tthis.userService.logout();\n\t\t\n\t}\n}\n"],"mappings":"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","names":["navbar_default","init_navbar","Navbar"],"x_google_ignoreList":[0,1]}